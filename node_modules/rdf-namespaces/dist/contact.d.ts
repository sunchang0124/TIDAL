declare type Property = string;
declare type Class = string;
/**
 * full name
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#fullName
 */
export declare const fullName: Property;
/**
 * sort name
 *
 * re-arranged for lexicographic ordering; ala Doe, John
 *
 * http://www.w3.org/2000/10/swap/pim/contact#sortName
 */
export declare const sortName: Property;
/**
 * nearest airport
 *
 * ?X nearestAirport ?Y locates ?X in an international
 *    context; for example, for the purpose of organizing a face-to-face
 *    meeting of a W3C working group. This property is intended to mitigate
 *    privacy risks of giving out detailed contact info.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#nearestAirport
 */
export declare const nearestAirport: Property;
/**
 * name
 *
 * A person may be known as various strings.
 * 	For example, an email friendly name string.
 * 	If you have an email from someone using a string as the human-readable phrase,
 * 	then it is reasonable to assume that there are :knownAs that.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#knownAs
 */
export declare const knownAs: Property;
/**
 * assistant
 *
 * A person (or other agent) who is an assistant to the subject.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#assistant
 */
export declare const assistant: Property;
/**
 * participant
 *
 * A person (or other agent) who  particpates in an event, meeting, etc.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#participant
 */
export declare const participant: Property;
/**
 * preferred
 *
 * A string which is the URI a person, organization, etc, prefers that people use for them.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#preferredURI
 */
export declare const preferredURI: Property;
/**
 * work
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#office
 */
export declare const office: Property;
/**
 * home
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#home
 */
export declare const home: Property;
/**
 * vacation
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#vacationHome
 */
export declare const vacationHome: Property;
/**
 * mobile
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#mobile
 */
export declare const mobile: Property;
/**
 * emergency only
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#emergency
 */
export declare const emergency: Property;
/**
 * address
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#address
 */
export declare const address: Property;
/**
 * region
 *
 * The sub-national unit such as state (us),
 * province (ca), county (uk), d√©partement (fr), and so on
 *
 * http://www.w3.org/2000/10/swap/pim/contact#region
 */
export declare const region: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#phone
 */
export declare const phone: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#fax
 */
export declare const fax: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#birthday
 */
export declare const birthday: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#child
 */
export declare const child: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#_addressProperty
 */
export declare const _addressProperty: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#motherTongue
 */
export declare const motherTongue: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#description
 */
export declare const description: Property;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#partner
 */
export declare const partner: Property;
/**
 * web page
 *
 * A related web page
 *
 * http://www.w3.org/2000/10/swap/pim/contact#webPage
 */
export declare const webPage: Property;
/**
 *
 *
 * The sort of thing which can have a phone number.
 *     Typically a person or an incorporated company, or unincorporated group.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#SocialEntity
 */
export declare const SocialEntity: Class;
/**
 * contact point
 *
 * A place, or mobile situation, with address, phone number, fax, etc.
 *     Related to a person by home, office, etc.
 *     Note one person's workplace may be another person's home.
 *     A person may have more than one home and more than one workplace.
 *     (In practice it sometimes maybe useful with restriucted datasets to
 *     assume that this is not the case, when extracting data from other ontologies
 *     with no concept of ContactLocation).  Strongly related to a person:
 *     in some ways a role that a person can be in.
 *
 * http://www.w3.org/2000/10/swap/pim/contact#ContactLocation
 */
export declare const ContactLocation: Class;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#Address
 */
export declare const Address: Class;
/**
 * phone
 *
 *
 *     An end-point in the public swiitched telephone system.
 *     Anything identified by a URI with tel: scheme is in this class.
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#Phone
 */
export declare const Phone: Class;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#Male
 */
export declare const Male: Class;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#Female
 */
export declare const Female: Class;
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/contact#LanguageCode
 */
export declare const LanguageCode: Class;
export {};
//# sourceMappingURL=contact.d.ts.map