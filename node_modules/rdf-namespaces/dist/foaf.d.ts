declare type Property = string;
declare type Class = string;
declare type OwlClass = string;
/**
 * personal mailbox
 *
 * A
 * personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox.
 *
 * http://xmlns.com/foaf/0.1/mbox
 */
export declare const mbox: Property;
/**
 * sha1sum of a personal mailbox URI name
 *
 * The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox.
 *
 * http://xmlns.com/foaf/0.1/mbox_sha1sum
 */
export declare const mbox_sha1sum: Property;
/**
 * gender
 *
 * The gender of this Agent (typically but not necessarily 'male' or 'female').
 *
 * http://xmlns.com/foaf/0.1/gender
 */
export declare const gender: Property;
/**
 * geekcode
 *
 * A textual geekcode for this person, see http://www.geekcode.com/geek.html
 *
 * http://xmlns.com/foaf/0.1/geekcode
 */
export declare const geekcode: Property;
/**
 * DNA checksum
 *
 * A checksum for the DNA of some thing. Joke.
 *
 * http://xmlns.com/foaf/0.1/dnaChecksum
 */
export declare const dnaChecksum: Property;
/**
 * sha1sum (hex)
 *
 * A sha1sum hash, in hex.
 *
 * http://xmlns.com/foaf/0.1/sha1
 */
export declare const sha1: Property;
/**
 * based near
 *
 * A location that something is based near, for some broadly human notion of near.
 *
 * http://xmlns.com/foaf/0.1/based_near
 */
export declare const based_near: Property;
/**
 * title
 *
 * Title (Mr, Mrs, Ms, Dr. etc)
 *
 * http://xmlns.com/foaf/0.1/title
 */
export declare const title: Property;
/**
 * nickname
 *
 * A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
 *
 * http://xmlns.com/foaf/0.1/nick
 */
export declare const nick: Property;
/**
 * jabber ID
 *
 * A jabber ID for something.
 *
 * http://xmlns.com/foaf/0.1/jabberID
 */
export declare const jabberID: Property;
/**
 * AIM chat ID
 *
 * An AIM chat ID
 *
 * http://xmlns.com/foaf/0.1/aimChatID
 */
export declare const aimChatID: Property;
/**
 * Skype ID
 *
 * A Skype ID
 *
 * http://xmlns.com/foaf/0.1/skypeID
 */
export declare const skypeID: Property;
/**
 * ICQ chat ID
 *
 * An ICQ chat ID
 *
 * http://xmlns.com/foaf/0.1/icqChatID
 */
export declare const icqChatID: Property;
/**
 * Yahoo chat ID
 *
 * A Yahoo chat ID
 *
 * http://xmlns.com/foaf/0.1/yahooChatID
 */
export declare const yahooChatID: Property;
/**
 * MSN chat ID
 *
 * An MSN chat ID
 *
 * http://xmlns.com/foaf/0.1/msnChatID
 */
export declare const msnChatID: Property;
/**
 * name
 *
 * A name for some thing.
 *
 * http://xmlns.com/foaf/0.1/name
 */
export declare const name: Property;
/**
 * firstName
 *
 * The first name of a person.
 *
 * http://xmlns.com/foaf/0.1/firstName
 */
export declare const firstName: Property;
/**
 * lastName
 *
 * The last name of a person.
 *
 * http://xmlns.com/foaf/0.1/lastName
 */
export declare const lastName: Property;
/**
 * Given name
 *
 * The given name of some person.
 *
 * http://xmlns.com/foaf/0.1/givenName
 */
export declare const givenName: Property;
/**
 * Given name
 *
 * The given name of some person.
 *
 * http://xmlns.com/foaf/0.1/givenname
 */
export declare const givenname: Property;
/**
 * Surname
 *
 * The surname of some person.
 *
 * http://xmlns.com/foaf/0.1/surname
 */
export declare const surname: Property;
/**
 * family_name
 *
 * The family name of some person.
 *
 * http://xmlns.com/foaf/0.1/family_name
 */
export declare const family_name: Property;
/**
 * familyName
 *
 * The family name of some person.
 *
 * http://xmlns.com/foaf/0.1/familyName
 */
export declare const familyName: Property;
/**
 * phone
 *
 * A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
 *
 * http://xmlns.com/foaf/0.1/phone
 */
export declare const phone: Property;
/**
 * homepage
 *
 * A homepage for some thing.
 *
 * http://xmlns.com/foaf/0.1/homepage
 */
export declare const homepage: Property;
/**
 * weblog
 *
 * A weblog of some thing (whether person, group, company etc.).
 *
 * http://xmlns.com/foaf/0.1/weblog
 */
export declare const weblog: Property;
/**
 * openid
 *
 * An OpenID for an Agent.
 *
 * http://xmlns.com/foaf/0.1/openid
 */
export declare const openid: Property;
/**
 * tipjar
 *
 * A tipjar document for this agent, describing means for payment and reward.
 *
 * http://xmlns.com/foaf/0.1/tipjar
 */
export declare const tipjar: Property;
/**
 * plan
 *
 * A .plan comment, in the tradition of finger and '.plan' files.
 *
 * http://xmlns.com/foaf/0.1/plan
 */
export declare const plan: Property;
/**
 * made
 *
 * Something that was made by this agent.
 *
 * http://xmlns.com/foaf/0.1/made
 */
export declare const made: Property;
/**
 * maker
 *
 * An agent that
 * made this thing.
 *
 * http://xmlns.com/foaf/0.1/maker
 */
export declare const maker: Property;
/**
 * image
 *
 * An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage).
 *
 * http://xmlns.com/foaf/0.1/img
 */
export declare const img: Property;
/**
 * depiction
 *
 * A depiction of some thing.
 *
 * http://xmlns.com/foaf/0.1/depiction
 */
export declare const depiction: Property;
/**
 * depicts
 *
 * A thing depicted in this representation.
 *
 * http://xmlns.com/foaf/0.1/depicts
 */
export declare const depicts: Property;
/**
 * thumbnail
 *
 * A derived thumbnail image.
 *
 * http://xmlns.com/foaf/0.1/thumbnail
 */
export declare const thumbnail: Property;
/**
 * myersBriggs
 *
 * A Myers Briggs (MBTI) personality classification.
 *
 * http://xmlns.com/foaf/0.1/myersBriggs
 */
export declare const myersBriggs: Property;
/**
 * workplace homepage
 *
 * A workplace homepage of some person; the homepage of an organization they work for.
 *
 * http://xmlns.com/foaf/0.1/workplaceHomepage
 */
export declare const workplaceHomepage: Property;
/**
 * work info homepage
 *
 * A work info homepage of some person; a page about their work for some organization.
 *
 * http://xmlns.com/foaf/0.1/workInfoHomepage
 */
export declare const workInfoHomepage: Property;
/**
 * schoolHomepage
 *
 * A homepage of a school attended by the person.
 *
 * http://xmlns.com/foaf/0.1/schoolHomepage
 */
export declare const schoolHomepage: Property;
/**
 * knows
 *
 * A person known by this person (indicating some level of reciprocated interaction between the parties).
 *
 * http://xmlns.com/foaf/0.1/knows
 */
export declare const knows: Property;
/**
 * interest
 *
 * A page about a topic of interest to this person.
 *
 * http://xmlns.com/foaf/0.1/interest
 */
export declare const interest: Property;
/**
 * topic_interest
 *
 * A thing of interest to this person.
 *
 * http://xmlns.com/foaf/0.1/topic_interest
 */
export declare const topic_interest: Property;
/**
 * publications
 *
 * A link to the publications of this person.
 *
 * http://xmlns.com/foaf/0.1/publications
 */
export declare const publications: Property;
/**
 * current project
 *
 * A current project this person works on.
 *
 * http://xmlns.com/foaf/0.1/currentProject
 */
export declare const currentProject: Property;
/**
 * past project
 *
 * A project this person has previously worked on.
 *
 * http://xmlns.com/foaf/0.1/pastProject
 */
export declare const pastProject: Property;
/**
 * funded by
 *
 * An organization funding a project or person.
 *
 * http://xmlns.com/foaf/0.1/fundedBy
 */
export declare const fundedBy: Property;
/**
 * logo
 *
 * A logo representing some thing.
 *
 * http://xmlns.com/foaf/0.1/logo
 */
export declare const logo: Property;
/**
 * topic
 *
 * A topic of some page or document.
 *
 * http://xmlns.com/foaf/0.1/topic
 */
export declare const topic: Property;
/**
 * primary topic
 *
 * The primary topic of some page or document.
 *
 * http://xmlns.com/foaf/0.1/primaryTopic
 */
export declare const primaryTopic: Property;
/**
 * focus
 *
 * The underlying or 'focal' entity associated with some SKOS-described concept.
 *
 * http://xmlns.com/foaf/0.1/focus
 */
export declare const focus: Property;
/**
 * is primary topic of
 *
 * A document that this thing is the primary topic of.
 *
 * http://xmlns.com/foaf/0.1/isPrimaryTopicOf
 */
export declare const isPrimaryTopicOf: Property;
/**
 * page
 *
 * A page or document about this thing.
 *
 * http://xmlns.com/foaf/0.1/page
 */
export declare const page: Property;
/**
 * theme
 *
 * A theme.
 *
 * http://xmlns.com/foaf/0.1/theme
 */
export declare const theme: Property;
/**
 * account
 *
 * Indicates an account held by this agent.
 *
 * http://xmlns.com/foaf/0.1/account
 */
export declare const account: Property;
/**
 * account
 *
 * Indicates an account held by this agent.
 *
 * http://xmlns.com/foaf/0.1/holdsAccount
 */
export declare const holdsAccount: Property;
/**
 * account service homepage
 *
 * Indicates a homepage of the service provide for this online account.
 *
 * http://xmlns.com/foaf/0.1/accountServiceHomepage
 */
export declare const accountServiceHomepage: Property;
/**
 * account name
 *
 * Indicates the name (identifier) associated with this online account.
 *
 * http://xmlns.com/foaf/0.1/accountName
 */
export declare const accountName: Property;
/**
 * member
 *
 * Indicates a member of a Group
 *
 * http://xmlns.com/foaf/0.1/member
 */
export declare const member: Property;
/**
 * membershipClass
 *
 * Indicates the class of individuals that are a member of a Group
 *
 * http://xmlns.com/foaf/0.1/membershipClass
 */
export declare const membershipClass: Property;
/**
 * birthday
 *
 * The birthday of this Agent, represented in mm-dd string form, eg. '12-31'.
 *
 * http://xmlns.com/foaf/0.1/birthday
 */
export declare const birthday: Property;
/**
 * age
 *
 * The age in years of some agent.
 *
 * http://xmlns.com/foaf/0.1/age
 */
export declare const age: Property;
/**
 * status
 *
 * A string expressing what the user is happy for the general public (normally) to know about their current activity.
 *
 * http://xmlns.com/foaf/0.1/status
 */
export declare const status: Property;
/**
 * Label Property
 *
 * A foaf:LabelProperty is any RDF property with texual values that serve as labels.
 *
 * http://xmlns.com/foaf/0.1/LabelProperty
 */
export declare const LabelProperty: Class;
/**
 * Person
 *
 * A person.
 *
 * http://xmlns.com/foaf/0.1/Person
 */
export declare const Person: Class;
/**
 * Document
 *
 * A document.
 *
 * http://xmlns.com/foaf/0.1/Document
 */
export declare const Document: Class;
/**
 * Organization
 *
 * An organization.
 *
 * http://xmlns.com/foaf/0.1/Organization
 */
export declare const Organization: Class;
/**
 * Group
 *
 * A class of Agents.
 *
 * http://xmlns.com/foaf/0.1/Group
 */
export declare const Group: Class;
/**
 * Agent
 *
 * An agent (eg. person, group, software or physical artifact).
 *
 * http://xmlns.com/foaf/0.1/Agent
 */
export declare const Agent: OwlClass;
/**
 * Project
 *
 * A project (a collective endeavour of some kind).
 *
 * http://xmlns.com/foaf/0.1/Project
 */
export declare const Project: Class;
/**
 * Image
 *
 * An image.
 *
 * http://xmlns.com/foaf/0.1/Image
 */
export declare const Image: Class;
/**
 * PersonalProfileDocument
 *
 * A personal profile RDF document.
 *
 * http://xmlns.com/foaf/0.1/PersonalProfileDocument
 */
export declare const PersonalProfileDocument: Class;
/**
 * Online Account
 *
 * An online account.
 *
 * http://xmlns.com/foaf/0.1/OnlineAccount
 */
export declare const OnlineAccount: Class;
/**
 * Online Gaming Account
 *
 * An online gaming account.
 *
 * http://xmlns.com/foaf/0.1/OnlineGamingAccount
 */
export declare const OnlineGamingAccount: Class;
/**
 * Online E-commerce Account
 *
 * An online e-commerce account.
 *
 * http://xmlns.com/foaf/0.1/OnlineEcommerceAccount
 */
export declare const OnlineEcommerceAccount: Class;
/**
 * Online Chat Account
 *
 * An online chat account.
 *
 * http://xmlns.com/foaf/0.1/OnlineChatAccount
 */
export declare const OnlineChatAccount: Class;
export {};
//# sourceMappingURL=foaf.d.ts.map