'use strict';

/**
 * category
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#category
 */
var category = 'http://www.w3.org/2000/10/swap/pim/qif#category';
/**
 * amount
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#amount
 */
var amount = 'http://www.w3.org/2000/10/swap/pim/qif#amount';
/**
 * date
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#date
 */
var date = 'http://www.w3.org/2000/10/swap/pim/qif#date';
/**
 * payee
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#payee
 */
var payee = 'http://www.w3.org/2000/10/swap/pim/qif#payee';
/**
 * account
 *
 * The account to which money flows when the amount is positive.
 *
 * http://www.w3.org/2000/10/swap/pim/qif#toAccount
 */
var toAccount = 'http://www.w3.org/2000/10/swap/pim/qif#toAccount';
/**
 * statement
 *
 * The document which is the source of data for this transaction.
 *
 * http://www.w3.org/2000/10/swap/pim/qif#accordingTo
 */
var accordingTo = 'http://www.w3.org/2000/10/swap/pim/qif#accordingTo';
/**
 * part
 *
 * A transaction representing a part of this transaction.
 *     The sum of the amounts of the parts must equal the amount of this transaction.
 *
 * http://www.w3.org/2000/10/swap/pim/qif#splitPart
 */
var splitPart = 'http://www.w3.org/2000/10/swap/pim/qif#splitPart';
/**
 * part
 *
 * A reverse transaction, putting this transaction back in the Split account, for redistribution as parts.
 *     The amount of the reverse transaction must be the negation of this transaction.
 *
 * http://www.w3.org/2000/10/swap/pim/qif#splitReverse
 */
var splitReverse = 'http://www.w3.org/2000/10/swap/pim/qif#splitReverse';
/**
 * transaction
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Transaction
 */
var Transaction = 'http://www.w3.org/2000/10/swap/pim/qif#Transaction';
/**
 * classified
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Classified
 */
var Classified = 'http://www.w3.org/2000/10/swap/pim/qif#Classified';
/**
 * unclassified
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Unclassified
 */
var Unclassified = 'http://www.w3.org/2000/10/swap/pim/qif#Unclassified';
/**
 * unclassified income
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#UnclassifiedIncome
 */
var UnclassifiedIncome = 'http://www.w3.org/2000/10/swap/pim/qif#UnclassifiedIncome';
/**
 * unclassified outgoing
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#UnclassifiedOutgoing
 */
var UnclassifiedOutgoing = 'http://www.w3.org/2000/10/swap/pim/qif#UnclassifiedOutgoing';
/**
 * account
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Account
 */
var Account = 'http://www.w3.org/2000/10/swap/pim/qif#Account';
/**
 *
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Bank
 */
var Bank = 'http://www.w3.org/2000/10/swap/pim/qif#Bank';
/**
 * category
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Cat
 */
var Cat = 'http://www.w3.org/2000/10/swap/pim/qif#Cat';
/**
 * supporting document
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#SupportingDocument
 */
var SupportingDocument = 'http://www.w3.org/2000/10/swap/pim/qif#SupportingDocument';
/**
 * receipt
 *
 *
 *
 * http://www.w3.org/2000/10/swap/pim/qif#Receipt
 */
var Receipt = 'http://www.w3.org/2000/10/swap/pim/qif#Receipt';
/**
 * split transaction
 *
 * A transaction which has to be split into parts for classification.
 *
 * http://www.w3.org/2000/10/swap/pim/qif#SplitTransaction
 */
var SplitTransaction = 'http://www.w3.org/2000/10/swap/pim/qif#SplitTransaction';

var quImport = /*#__PURE__*/Object.freeze({
	category: category,
	amount: amount,
	date: date,
	payee: payee,
	toAccount: toAccount,
	accordingTo: accordingTo,
	splitPart: splitPart,
	splitReverse: splitReverse,
	Transaction: Transaction,
	Classified: Classified,
	Unclassified: Unclassified,
	UnclassifiedIncome: UnclassifiedIncome,
	UnclassifiedOutgoing: UnclassifiedOutgoing,
	Account: Account,
	Bank: Bank,
	Cat: Cat,
	SupportingDocument: SupportingDocument,
	Receipt: Receipt,
	SplitTransaction: SplitTransaction
});

exports.Account = Account;
exports.Bank = Bank;
exports.Cat = Cat;
exports.Classified = Classified;
exports.Receipt = Receipt;
exports.SplitTransaction = SplitTransaction;
exports.SupportingDocument = SupportingDocument;
exports.Transaction = Transaction;
exports.Unclassified = Unclassified;
exports.UnclassifiedIncome = UnclassifiedIncome;
exports.UnclassifiedOutgoing = UnclassifiedOutgoing;
exports.accordingTo = accordingTo;
exports.amount = amount;
exports.category = category;
exports.date = date;
exports.payee = payee;
exports.quImport = quImport;
exports.splitPart = splitPart;
exports.splitReverse = splitReverse;
exports.toAccount = toAccount;
