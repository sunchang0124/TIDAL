/**
 * acceptedAnswer
 *
 * The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.
 *
 * http://schema.org/acceptedAnswer
 */
var acceptedAnswer = 'http://schema.org/acceptedAnswer';
/**
 * acceptedOffer
 *
 * The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
 *
 * http://schema.org/acceptedOffer
 */
var acceptedOffer = 'http://schema.org/acceptedOffer';
/**
 * acceptedPaymentMethod
 *
 * The payment method(s) accepted by seller for this offer.
 *
 * http://schema.org/acceptedPaymentMethod
 */
var acceptedPaymentMethod = 'http://schema.org/acceptedPaymentMethod';
/**
 * acceptsReservations
 *
 * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>.
 *
 * http://schema.org/acceptsReservations
 */
var acceptsReservations = 'http://schema.org/acceptsReservations';
/**
 * accessCode
 *
 * Password, PIN, or access code needed for delivery (e.g. from a locker).
 *
 * http://schema.org/accessCode
 */
var accessCode = 'http://schema.org/accessCode';
/**
 * accessMode
 *
 * The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.
 *
 * http://schema.org/accessMode
 */
var accessMode = 'http://schema.org/accessMode';
/**
 * accessModeSufficient
 *
 * A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.
 *
 * http://schema.org/accessModeSufficient
 */
var accessModeSufficient = 'http://schema.org/accessModeSufficient';
/**
 * accessibilityAPI
 *
 * Indicates that the resource is compatible with the referenced accessibility API (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
 *
 * http://schema.org/accessibilityAPI
 */
var accessibilityAPI = 'http://schema.org/accessibilityAPI';
/**
 * accessibilityControl
 *
 * Identifies input methods that are sufficient to fully control the described resource (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
 *
 * http://schema.org/accessibilityControl
 */
var accessibilityControl = 'http://schema.org/accessibilityControl';
/**
 * accessibilityFeature
 *
 * Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
 *
 * http://schema.org/accessibilityFeature
 */
var accessibilityFeature = 'http://schema.org/accessibilityFeature';
/**
 * accessibilityHazard
 *
 * A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
 *
 * http://schema.org/accessibilityHazard
 */
var accessibilityHazard = 'http://schema.org/accessibilityHazard';
/**
 * accessibilitySummary
 *
 * A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed."
 *
 * http://schema.org/accessibilitySummary
 */
var accessibilitySummary = 'http://schema.org/accessibilitySummary';
/**
 * accountId
 *
 * The identifier for the account the payment will be applied to.
 *
 * http://schema.org/accountId
 */
var accountId = 'http://schema.org/accountId';
/**
 * accountablePerson
 *
 * Specifies the Person that is legally accountable for the CreativeWork.
 *
 * http://schema.org/accountablePerson
 */
var accountablePerson = 'http://schema.org/accountablePerson';
/**
 * acquiredFrom
 *
 * The organization or person from which the product was acquired.
 *
 * http://schema.org/acquiredFrom
 */
var acquiredFrom = 'http://schema.org/acquiredFrom';
/**
 * actionAccessibilityRequirement
 *
 * A set of requirements that a must be fulfilled in order to perform an Action. If more than one value is specied, fulfilling one set of requirements will allow the Action to be performed.
 *
 * http://schema.org/actionAccessibilityRequirement
 */
var actionAccessibilityRequirement = 'http://schema.org/actionAccessibilityRequirement';
/**
 * actionPlatform
 *
 * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
 *
 * http://schema.org/actionPlatform
 */
var actionPlatform = 'http://schema.org/actionPlatform';
/**
 * actionStatus
 *
 * Indicates the current disposition of the Action.
 *
 * http://schema.org/actionStatus
 */
var actionStatus = 'http://schema.org/actionStatus';
/**
 * actors
 *
 * An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/actors
 */
var actors = 'http://schema.org/actors';
/**
 * addOn
 *
 * An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).
 *
 * http://schema.org/addOn
 */
var addOn = 'http://schema.org/addOn';
/**
 * additionalName
 *
 * An additional name for a Person, can be used for a middle name.
 *
 * http://schema.org/additionalName
 */
var additionalName = 'http://schema.org/additionalName';
/**
 * additionalNumberOfGuests
 *
 * If responding yes, the number of guests who will attend in addition to the invitee.
 *
 * http://schema.org/additionalNumberOfGuests
 */
var additionalNumberOfGuests = 'http://schema.org/additionalNumberOfGuests';
/**
 * additionalProperty
 *
 * A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>
 *
 * Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
 *
 * http://schema.org/additionalProperty
 */
var additionalProperty = 'http://schema.org/additionalProperty';
/**
 * additionalType
 *
 * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
 *
 * http://schema.org/additionalType
 */
var additionalType = 'http://schema.org/additionalType';
/**
 * address
 *
 * Physical address of the item.
 *
 * http://schema.org/address
 */
var address = 'http://schema.org/address';
/**
 * addressCountry
 *
 * The country. For example, USA. You can also provide the two-letter <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2 country code</a>.
 *
 * http://schema.org/addressCountry
 */
var addressCountry = 'http://schema.org/addressCountry';
/**
 * addressLocality
 *
 * The locality in which the street address is, and which is in the region. For example, Mountain View.
 *
 * http://schema.org/addressLocality
 */
var addressLocality = 'http://schema.org/addressLocality';
/**
 * addressRegion
 *
 * The region in which the locality is, and which is in the country. For example, California or another appropriate first-level <a href="https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country">Administrative division</a>
 *
 * http://schema.org/addressRegion
 */
var addressRegion = 'http://schema.org/addressRegion';
/**
 * advanceBookingRequirement
 *
 * The amount of time that is required between accepting the offer and the actual usage of the resource or service.
 *
 * http://schema.org/advanceBookingRequirement
 */
var advanceBookingRequirement = 'http://schema.org/advanceBookingRequirement';
/**
 * affiliation
 *
 * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
 *
 * http://schema.org/affiliation
 */
var affiliation = 'http://schema.org/affiliation';
/**
 * afterMedia
 *
 * A media object representing the circumstances after performing this direction.
 *
 * http://schema.org/afterMedia
 */
var afterMedia = 'http://schema.org/afterMedia';
/**
 * agent
 *
 * The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.
 *
 * http://schema.org/agent
 */
var agent = 'http://schema.org/agent';
/**
 * aggregateRating
 *
 * The overall rating, based on a collection of reviews or ratings, of the item.
 *
 * http://schema.org/aggregateRating
 */
var aggregateRating = 'http://schema.org/aggregateRating';
/**
 * aircraft
 *
 * The kind of aircraft (e.g., "Boeing 747").
 *
 * http://schema.org/aircraft
 */
var aircraft = 'http://schema.org/aircraft';
/**
 * albumProductionType
 *
 * Classification of the album by it's type of content: soundtrack, live album, studio album, etc.
 *
 * http://schema.org/albumProductionType
 */
var albumProductionType = 'http://schema.org/albumProductionType';
/**
 * albumReleaseType
 *
 * The kind of release which this album is: single, EP or album.
 *
 * http://schema.org/albumReleaseType
 */
var albumReleaseType = 'http://schema.org/albumReleaseType';
/**
 * albums
 *
 * A collection of music albums.
 *
 * http://schema.org/albums
 */
var albums = 'http://schema.org/albums';
/**
 * alignmentType
 *
 * A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.
 *
 * http://schema.org/alignmentType
 */
var alignmentType = 'http://schema.org/alignmentType';
/**
 * alternateName
 *
 * An alias for the item.
 *
 * http://schema.org/alternateName
 */
var alternateName = 'http://schema.org/alternateName';
/**
 * alternativeHeadline
 *
 * A secondary title of the CreativeWork.
 *
 * http://schema.org/alternativeHeadline
 */
var alternativeHeadline = 'http://schema.org/alternativeHeadline';
/**
 * amenityFeature
 *
 * An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
 *
 * http://schema.org/amenityFeature
 */
var amenityFeature = 'http://schema.org/amenityFeature';
/**
 * amount
 *
 * The amount of money.
 *
 * http://schema.org/amount
 */
var amount = 'http://schema.org/amount';
/**
 * amountOfThisGood
 *
 * The quantity of the goods included in the offer.
 *
 * http://schema.org/amountOfThisGood
 */
var amountOfThisGood = 'http://schema.org/amountOfThisGood';
/**
 * annualPercentageRate
 *
 * The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.
 *
 * http://schema.org/annualPercentageRate
 */
var annualPercentageRate = 'http://schema.org/annualPercentageRate';
/**
 * answerCount
 *
 * The number of answers this question has received.
 *
 * http://schema.org/answerCount
 */
var answerCount = 'http://schema.org/answerCount';
/**
 * application
 *
 * An application that can complete the request.
 *
 * http://schema.org/application
 */
var application = 'http://schema.org/application';
/**
 * applicationCategory
 *
 * Type of software application, e.g. 'Game, Multimedia'.
 *
 * http://schema.org/applicationCategory
 */
var applicationCategory = 'http://schema.org/applicationCategory';
/**
 * applicationSubCategory
 *
 * Subcategory of the application, e.g. 'Arcade Game'.
 *
 * http://schema.org/applicationSubCategory
 */
var applicationSubCategory = 'http://schema.org/applicationSubCategory';
/**
 * applicationSuite
 *
 * The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
 *
 * http://schema.org/applicationSuite
 */
var applicationSuite = 'http://schema.org/applicationSuite';
/**
 * appliesToDeliveryMethod
 *
 * The delivery method(s) to which the delivery charge or payment charge specification applies.
 *
 * http://schema.org/appliesToDeliveryMethod
 */
var appliesToDeliveryMethod = 'http://schema.org/appliesToDeliveryMethod';
/**
 * appliesToPaymentMethod
 *
 * The payment method(s) to which the payment charge specification applies.
 *
 * http://schema.org/appliesToPaymentMethod
 */
var appliesToPaymentMethod = 'http://schema.org/appliesToPaymentMethod';
/**
 * area
 *
 * The area within which users can expect to reach the broadcast service.
 *
 * http://schema.org/area
 */
var area = 'http://schema.org/area';
/**
 * arrivalAirport
 *
 * The airport where the flight terminates.
 *
 * http://schema.org/arrivalAirport
 */
var arrivalAirport = 'http://schema.org/arrivalAirport';
/**
 * arrivalBusStop
 *
 * The stop or station from which the bus arrives.
 *
 * http://schema.org/arrivalBusStop
 */
var arrivalBusStop = 'http://schema.org/arrivalBusStop';
/**
 * arrivalGate
 *
 * Identifier of the flight's arrival gate.
 *
 * http://schema.org/arrivalGate
 */
var arrivalGate = 'http://schema.org/arrivalGate';
/**
 * arrivalPlatform
 *
 * The platform where the train arrives.
 *
 * http://schema.org/arrivalPlatform
 */
var arrivalPlatform = 'http://schema.org/arrivalPlatform';
/**
 * arrivalStation
 *
 * The station where the train trip ends.
 *
 * http://schema.org/arrivalStation
 */
var arrivalStation = 'http://schema.org/arrivalStation';
/**
 * arrivalTerminal
 *
 * Identifier of the flight's arrival terminal.
 *
 * http://schema.org/arrivalTerminal
 */
var arrivalTerminal = 'http://schema.org/arrivalTerminal';
/**
 * arrivalTime
 *
 * The expected arrival time.
 *
 * http://schema.org/arrivalTime
 */
var arrivalTime = 'http://schema.org/arrivalTime';
/**
 * artEdition
 *
 * The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example "20").
 *
 * http://schema.org/artEdition
 */
var artEdition = 'http://schema.org/artEdition';
/**
 * artMedium
 *
 * The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)
 *
 * http://schema.org/artMedium
 */
var artMedium = 'http://schema.org/artMedium';
/**
 * artform
 *
 * e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.
 *
 * http://schema.org/artform
 */
var artform = 'http://schema.org/artform';
/**
 * articleBody
 *
 * The actual body of the article.
 *
 * http://schema.org/articleBody
 */
var articleBody = 'http://schema.org/articleBody';
/**
 * articleSection
 *
 * Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
 *
 * http://schema.org/articleSection
 */
var articleSection = 'http://schema.org/articleSection';
/**
 * assembly
 *
 * Library file name e.g., mscorlib.dll, system.web.dll.
 *
 * http://schema.org/assembly
 */
var assembly = 'http://schema.org/assembly';
/**
 * assemblyVersion
 *
 * Associated product/technology version. e.g., .NET Framework 4.5.
 *
 * http://schema.org/assemblyVersion
 */
var assemblyVersion = 'http://schema.org/assemblyVersion';
/**
 * associatedArticle
 *
 * A NewsArticle associated with the Media Object.
 *
 * http://schema.org/associatedArticle
 */
var associatedArticle = 'http://schema.org/associatedArticle';
/**
 * associatedMedia
 *
 * A media object that encodes this CreativeWork. This property is a synonym for encoding.
 *
 * http://schema.org/associatedMedia
 */
var associatedMedia = 'http://schema.org/associatedMedia';
/**
 * athlete
 *
 * A person that acts as performing member of a sports team; a player as opposed to a coach.
 *
 * http://schema.org/athlete
 */
var athlete = 'http://schema.org/athlete';
/**
 * attendees
 *
 * A person attending the event.
 *
 * http://schema.org/attendees
 */
var attendees = 'http://schema.org/attendees';
/**
 * audienceType
 *
 * The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
 *
 * http://schema.org/audienceType
 */
var audienceType = 'http://schema.org/audienceType';
/**
 * audio
 *
 * An embedded audio object.
 *
 * http://schema.org/audio
 */
var audio = 'http://schema.org/audio';
/**
 * authenticator
 *
 * The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.
 *
 * http://schema.org/authenticator
 */
var authenticator = 'http://schema.org/authenticator';
/**
 * author
 *
 * The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
 *
 * http://schema.org/author
 */
var author = 'http://schema.org/author';
/**
 * availability
 *
 * The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.
 *
 * http://schema.org/availability
 */
var availability = 'http://schema.org/availability';
/**
 * availabilityEnds
 *
 * The end of the availability of the product or service included in the offer.
 *
 * http://schema.org/availabilityEnds
 */
var availabilityEnds = 'http://schema.org/availabilityEnds';
/**
 * availabilityStarts
 *
 * The beginning of the availability of the product or service included in the offer.
 *
 * http://schema.org/availabilityStarts
 */
var availabilityStarts = 'http://schema.org/availabilityStarts';
/**
 * availableAtOrFrom
 *
 * The place(s) from which the offer can be obtained (e.g. store locations).
 *
 * http://schema.org/availableAtOrFrom
 */
var availableAtOrFrom = 'http://schema.org/availableAtOrFrom';
/**
 * availableChannel
 *
 * A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
 *
 * http://schema.org/availableChannel
 */
var availableChannel = 'http://schema.org/availableChannel';
/**
 * availableDeliveryMethod
 *
 * The delivery method(s) available for this offer.
 *
 * http://schema.org/availableDeliveryMethod
 */
var availableDeliveryMethod = 'http://schema.org/availableDeliveryMethod';
/**
 * availableFrom
 *
 * When the item is available for pickup from the store, locker, etc.
 *
 * http://schema.org/availableFrom
 */
var availableFrom = 'http://schema.org/availableFrom';
/**
 * availableLanguage
 *
 * A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/inLanguage">inLanguage</a>
 *
 * http://schema.org/availableLanguage
 */
var availableLanguage = 'http://schema.org/availableLanguage';
/**
 * availableThrough
 *
 * After this date, the item will no longer be available for pickup.
 *
 * http://schema.org/availableThrough
 */
var availableThrough = 'http://schema.org/availableThrough';
/**
 * awards
 *
 * Awards won by or for this item.
 *
 * http://schema.org/awards
 */
var awards = 'http://schema.org/awards';
/**
 * awayTeam
 *
 * The away team in a sports event.
 *
 * http://schema.org/awayTeam
 */
var awayTeam = 'http://schema.org/awayTeam';
/**
 * baseSalary
 *
 * The base salary of the job or of an employee in an EmployeeRole.
 *
 * http://schema.org/baseSalary
 */
var baseSalary = 'http://schema.org/baseSalary';
/**
 * bccRecipient
 *
 * A sub property of recipient. The recipient blind copied on a message.
 *
 * http://schema.org/bccRecipient
 */
var bccRecipient = 'http://schema.org/bccRecipient';
/**
 * bed
 *
 * The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
 *       If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
 *
 * http://schema.org/bed
 */
var bed = 'http://schema.org/bed';
/**
 * beforeMedia
 *
 * A media object representing the circumstances before performing this direction.
 *
 * http://schema.org/beforeMedia
 */
var beforeMedia = 'http://schema.org/beforeMedia';
/**
 * benefits
 *
 * Description of benefits associated with the job.
 *
 * http://schema.org/benefits
 */
var benefits = 'http://schema.org/benefits';
/**
 * bestRating
 *
 * The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.
 *
 * http://schema.org/bestRating
 */
var bestRating = 'http://schema.org/bestRating';
/**
 * billingAddress
 *
 * The billing address for the order.
 *
 * http://schema.org/billingAddress
 */
var billingAddress = 'http://schema.org/billingAddress';
/**
 * billingIncrement
 *
 * This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
 *
 * http://schema.org/billingIncrement
 */
var billingIncrement = 'http://schema.org/billingIncrement';
/**
 * billingPeriod
 *
 * The time interval used to compute the invoice.
 *
 * http://schema.org/billingPeriod
 */
var billingPeriod = 'http://schema.org/billingPeriod';
/**
 * birthDate
 *
 * Date of birth.
 *
 * http://schema.org/birthDate
 */
var birthDate = 'http://schema.org/birthDate';
/**
 * birthPlace
 *
 * The place where the person was born.
 *
 * http://schema.org/birthPlace
 */
var birthPlace = 'http://schema.org/birthPlace';
/**
 * bitrate
 *
 * The bitrate of the media object.
 *
 * http://schema.org/bitrate
 */
var bitrate = 'http://schema.org/bitrate';
/**
 * blogPosts
 *
 * The postings that are part of this blog.
 *
 * http://schema.org/blogPosts
 */
var blogPosts = 'http://schema.org/blogPosts';
/**
 * boardingGroup
 *
 * The airline-specific indicator of boarding order / preference.
 *
 * http://schema.org/boardingGroup
 */
var boardingGroup = 'http://schema.org/boardingGroup';
/**
 * boardingPolicy
 *
 * The type of boarding policy used by the airline (e.g. zone-based or group-based).
 *
 * http://schema.org/boardingPolicy
 */
var boardingPolicy = 'http://schema.org/boardingPolicy';
/**
 * bookEdition
 *
 * The edition of the book.
 *
 * http://schema.org/bookEdition
 */
var bookEdition = 'http://schema.org/bookEdition';
/**
 * bookFormat
 *
 * The format of the book.
 *
 * http://schema.org/bookFormat
 */
var bookFormat = 'http://schema.org/bookFormat';
/**
 * bookingAgent
 *
 * 'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.
 *
 * http://schema.org/bookingAgent
 */
var bookingAgent = 'http://schema.org/bookingAgent';
/**
 * bookingTime
 *
 * The date and time the reservation was booked.
 *
 * http://schema.org/bookingTime
 */
var bookingTime = 'http://schema.org/bookingTime';
/**
 * borrower
 *
 * A sub property of participant. The person that borrows the object being lent.
 *
 * http://schema.org/borrower
 */
var borrower = 'http://schema.org/borrower';
/**
 * box
 *
 * A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.
 *
 * http://schema.org/box
 */
var box = 'http://schema.org/box';
/**
 * branchCode
 *
 * A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>
 *
 * For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
 *
 * http://schema.org/branchCode
 */
var branchCode = 'http://schema.org/branchCode';
/**
 * branchOf
 *
 * The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class="localLink" href="http://schema.org/branch">branch</a>.
 *
 * http://schema.org/branchOf
 */
var branchOf = 'http://schema.org/branchOf';
/**
 * brand
 *
 * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
 *
 * http://schema.org/brand
 */
var brand = 'http://schema.org/brand';
/**
 * breadcrumb
 *
 * A set of links that can help a user understand and navigate a website hierarchy.
 *
 * http://schema.org/breadcrumb
 */
var breadcrumb = 'http://schema.org/breadcrumb';
/**
 * broadcastAffiliateOf
 *
 * The media network(s) whose content is broadcast on this station.
 *
 * http://schema.org/broadcastAffiliateOf
 */
var broadcastAffiliateOf = 'http://schema.org/broadcastAffiliateOf';
/**
 * broadcastChannelId
 *
 * The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
 *
 * http://schema.org/broadcastChannelId
 */
var broadcastChannelId = 'http://schema.org/broadcastChannelId';
/**
 * broadcastDisplayName
 *
 * The name displayed in the channel guide. For many US affiliates, it is the network name.
 *
 * http://schema.org/broadcastDisplayName
 */
var broadcastDisplayName = 'http://schema.org/broadcastDisplayName';
/**
 * broadcastFrequency
 *
 * The frequency used for over-the-air broadcasts. Numeric values or simple ranges e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
 *
 * http://schema.org/broadcastFrequency
 */
var broadcastFrequency = 'http://schema.org/broadcastFrequency';
/**
 * broadcastFrequencyValue
 *
 * The frequency in MHz for a particular broadcast.
 *
 * http://schema.org/broadcastFrequencyValue
 */
var broadcastFrequencyValue = 'http://schema.org/broadcastFrequencyValue';
/**
 * broadcastOfEvent
 *
 * The event being broadcast such as a sporting event or awards ceremony.
 *
 * http://schema.org/broadcastOfEvent
 */
var broadcastOfEvent = 'http://schema.org/broadcastOfEvent';
/**
 * broadcastServiceTier
 *
 * The type of service required to have access to the channel (e.g. Standard or Premium).
 *
 * http://schema.org/broadcastServiceTier
 */
var broadcastServiceTier = 'http://schema.org/broadcastServiceTier';
/**
 * broadcastTimezone
 *
 * The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> for which the service bases its broadcasts
 *
 * http://schema.org/broadcastTimezone
 */
var broadcastTimezone = 'http://schema.org/broadcastTimezone';
/**
 * broadcaster
 *
 * The organization owning or operating the broadcast service.
 *
 * http://schema.org/broadcaster
 */
var broadcaster = 'http://schema.org/broadcaster';
/**
 * browserRequirements
 *
 * Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.
 *
 * http://schema.org/browserRequirements
 */
var browserRequirements = 'http://schema.org/browserRequirements';
/**
 * busName
 *
 * The name of the bus (e.g. Bolt Express).
 *
 * http://schema.org/busName
 */
var busName = 'http://schema.org/busName';
/**
 * busNumber
 *
 * The unique identifier for the bus.
 *
 * http://schema.org/busNumber
 */
var busNumber = 'http://schema.org/busNumber';
/**
 * businessFunction
 *
 * The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.
 *
 * http://schema.org/businessFunction
 */
var businessFunction = 'http://schema.org/businessFunction';
/**
 * buyer
 *
 * A sub property of participant. The participant/person/organization that bought the object.
 *
 * http://schema.org/buyer
 */
var buyer = 'http://schema.org/buyer';
/**
 * byArtist
 *
 * The artist that performed this album or recording.
 *
 * http://schema.org/byArtist
 */
var byArtist = 'http://schema.org/byArtist';
/**
 * calories
 *
 * The number of calories.
 *
 * http://schema.org/calories
 */
var calories = 'http://schema.org/calories';
/**
 * candidate
 *
 * A sub property of object. The candidate subject of this action.
 *
 * http://schema.org/candidate
 */
var candidate = 'http://schema.org/candidate';
/**
 * caption
 *
 * The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a>.
 *
 * http://schema.org/caption
 */
var caption = 'http://schema.org/caption';
/**
 * carbohydrateContent
 *
 * The number of grams of carbohydrates.
 *
 * http://schema.org/carbohydrateContent
 */
var carbohydrateContent = 'http://schema.org/carbohydrateContent';
/**
 * cargoVolume
 *
 * The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.<br/><br/>
 *
 * Typical unit code(s): LTR for liters, FTQ for cubic foot/feet<br/><br/>
 *
 * Note: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
 *
 * http://schema.org/cargoVolume
 */
var cargoVolume = 'http://schema.org/cargoVolume';
/**
 * carrier
 *
 * 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
 *
 * http://schema.org/carrier
 */
var carrier = 'http://schema.org/carrier';
/**
 * carrierRequirements
 *
 * Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).
 *
 * http://schema.org/carrierRequirements
 */
var carrierRequirements = 'http://schema.org/carrierRequirements';
/**
 * catalog
 *
 * A data catalog which contains this dataset.
 *
 * http://schema.org/catalog
 */
var catalog = 'http://schema.org/catalog';
/**
 * catalogNumber
 *
 * The catalog number for the release.
 *
 * http://schema.org/catalogNumber
 */
var catalogNumber = 'http://schema.org/catalogNumber';
/**
 * category
 *
 * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
 *
 * http://schema.org/category
 */
var category = 'http://schema.org/category';
/**
 * ccRecipient
 *
 * A sub property of recipient. The recipient copied on a message.
 *
 * http://schema.org/ccRecipient
 */
var ccRecipient = 'http://schema.org/ccRecipient';
/**
 * character
 *
 * Fictional person connected with a creative work.
 *
 * http://schema.org/character
 */
var character = 'http://schema.org/character';
/**
 * characterAttribute
 *
 * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
 *
 * http://schema.org/characterAttribute
 */
var characterAttribute = 'http://schema.org/characterAttribute';
/**
 * characterName
 *
 * The name of a character played in some acting or performing role, i.e. in a PerformanceRole.
 *
 * http://schema.org/characterName
 */
var characterName = 'http://schema.org/characterName';
/**
 * cheatCode
 *
 * Cheat codes to the game.
 *
 * http://schema.org/cheatCode
 */
var cheatCode = 'http://schema.org/cheatCode';
/**
 * checkinTime
 *
 * The earliest someone may check into a lodging establishment.
 *
 * http://schema.org/checkinTime
 */
var checkinTime = 'http://schema.org/checkinTime';
/**
 * checkoutTime
 *
 * The latest someone may check out of a lodging establishment.
 *
 * http://schema.org/checkoutTime
 */
var checkoutTime = 'http://schema.org/checkoutTime';
/**
 * childMaxAge
 *
 * Maximal age of the child.
 *
 * http://schema.org/childMaxAge
 */
var childMaxAge = 'http://schema.org/childMaxAge';
/**
 * childMinAge
 *
 * Minimal age of the child.
 *
 * http://schema.org/childMinAge
 */
var childMinAge = 'http://schema.org/childMinAge';
/**
 * children
 *
 * A child of the person.
 *
 * http://schema.org/children
 */
var children = 'http://schema.org/children';
/**
 * cholesterolContent
 *
 * The number of milligrams of cholesterol.
 *
 * http://schema.org/cholesterolContent
 */
var cholesterolContent = 'http://schema.org/cholesterolContent';
/**
 * circle
 *
 * A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.
 *
 * http://schema.org/circle
 */
var circle = 'http://schema.org/circle';
/**
 * citation
 *
 * A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
 *
 * http://schema.org/citation
 */
var citation = 'http://schema.org/citation';
/**
 * claimReviewed
 *
 * A short summary of the specific claims reviewed in a ClaimReview.
 *
 * http://schema.org/claimReviewed
 */
var claimReviewed = 'http://schema.org/claimReviewed';
/**
 * clipNumber
 *
 * Position of the clip within an ordered group of clips.
 *
 * http://schema.org/clipNumber
 */
var clipNumber = 'http://schema.org/clipNumber';
/**
 * closes
 *
 * The closing hour of the place or service on the given day(s) of the week.
 *
 * http://schema.org/closes
 */
var closes = 'http://schema.org/closes';
/**
 * coach
 *
 * A person that acts in a coaching role for a sports team.
 *
 * http://schema.org/coach
 */
var coach = 'http://schema.org/coach';
/**
 * codeRepository
 *
 * Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex).
 *
 * http://schema.org/codeRepository
 */
var codeRepository = 'http://schema.org/codeRepository';
/**
 * colleagues
 *
 * A colleague of the person.
 *
 * http://schema.org/colleagues
 */
var colleagues = 'http://schema.org/colleagues';
/**
 * collection
 *
 * A sub property of object. The collection target of the action.
 *
 * http://schema.org/collection
 */
var collection = 'http://schema.org/collection';
/**
 * color
 *
 * The color of the product.
 *
 * http://schema.org/color
 */
var color = 'http://schema.org/color';
/**
 * comment
 *
 * Comments, typically from users.
 *
 * http://schema.org/comment
 */
var comment = 'http://schema.org/comment';
/**
 * commentCount
 *
 * The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
 *
 * http://schema.org/commentCount
 */
var commentCount = 'http://schema.org/commentCount';
/**
 * commentText
 *
 * The text of the UserComment.
 *
 * http://schema.org/commentText
 */
var commentText = 'http://schema.org/commentText';
/**
 * commentTime
 *
 * The time at which the UserComment was made.
 *
 * http://schema.org/commentTime
 */
var commentTime = 'http://schema.org/commentTime';
/**
 * composer
 *
 * The person or organization who wrote a composition, or who is the composer of a work performed at some event.
 *
 * http://schema.org/composer
 */
var composer = 'http://schema.org/composer';
/**
 * confirmationNumber
 *
 * A number that confirms the given order or payment has been received.
 *
 * http://schema.org/confirmationNumber
 */
var confirmationNumber = 'http://schema.org/confirmationNumber';
/**
 * contactOption
 *
 * An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).
 *
 * http://schema.org/contactOption
 */
var contactOption = 'http://schema.org/contactOption';
/**
 * contactPoints
 *
 * A contact point for a person or organization.
 *
 * http://schema.org/contactPoints
 */
var contactPoints = 'http://schema.org/contactPoints';
/**
 * contactType
 *
 * A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
 *
 * http://schema.org/contactType
 */
var contactType = 'http://schema.org/contactType';
/**
 * containedIn
 *
 * The basic containment relation between a place and one that contains it.
 *
 * http://schema.org/containedIn
 */
var containedIn = 'http://schema.org/containedIn';
/**
 * contentRating
 *
 * Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.
 *
 * http://schema.org/contentRating
 */
var contentRating = 'http://schema.org/contentRating';
/**
 * contentSize
 *
 * File size in (mega/kilo) bytes.
 *
 * http://schema.org/contentSize
 */
var contentSize = 'http://schema.org/contentSize';
/**
 * contentType
 *
 * The supported content type(s) for an EntryPoint response.
 *
 * http://schema.org/contentType
 */
var contentType = 'http://schema.org/contentType';
/**
 * contentUrl
 *
 * Actual bytes of the media object, for example the image file or video file.
 *
 * http://schema.org/contentUrl
 */
var contentUrl = 'http://schema.org/contentUrl';
/**
 * contributor
 *
 * A secondary contributor to the CreativeWork or Event.
 *
 * http://schema.org/contributor
 */
var contributor = 'http://schema.org/contributor';
/**
 * cookTime
 *
 * The time it takes to actually cook the dish, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
 *
 * http://schema.org/cookTime
 */
var cookTime = 'http://schema.org/cookTime';
/**
 * cookingMethod
 *
 * The method of cooking, such as Frying, Steaming, ...
 *
 * http://schema.org/cookingMethod
 */
var cookingMethod = 'http://schema.org/cookingMethod';
/**
 * copyrightHolder
 *
 * The party holding the legal copyright to the CreativeWork.
 *
 * http://schema.org/copyrightHolder
 */
var copyrightHolder = 'http://schema.org/copyrightHolder';
/**
 * copyrightYear
 *
 * The year during which the claimed copyright for the CreativeWork was first asserted.
 *
 * http://schema.org/copyrightYear
 */
var copyrightYear = 'http://schema.org/copyrightYear';
/**
 * countriesNotSupported
 *
 * Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
 *
 * http://schema.org/countriesNotSupported
 */
var countriesNotSupported = 'http://schema.org/countriesNotSupported';
/**
 * countriesSupported
 *
 * Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
 *
 * http://schema.org/countriesSupported
 */
var countriesSupported = 'http://schema.org/countriesSupported';
/**
 * countryOfOrigin
 *
 * The country of the principal offices of the production company or individual responsible for the movie or program.
 *
 * http://schema.org/countryOfOrigin
 */
var countryOfOrigin = 'http://schema.org/countryOfOrigin';
/**
 * course
 *
 * A sub property of location. The course where this action was taken.
 *
 * http://schema.org/course
 */
var course = 'http://schema.org/course';
/**
 * courseCode
 *
 * The identifier for the <a class="localLink" href="http://schema.org/Course">Course</a> used by the course <a class="localLink" href="http://schema.org/provider">provider</a> (e.g. CS101 or 6.001).
 *
 * http://schema.org/courseCode
 */
var courseCode = 'http://schema.org/courseCode';
/**
 * courseMode
 *
 * The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
 *
 * http://schema.org/courseMode
 */
var courseMode = 'http://schema.org/courseMode';
/**
 * coursePrerequisites
 *
 * Requirements for taking the Course. May be completion of another <a class="localLink" href="http://schema.org/Course">Course</a> or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using <a class="localLink" href="http://schema.org/AlignmentObject">AlignmentObject</a>.
 *
 * http://schema.org/coursePrerequisites
 */
var coursePrerequisites = 'http://schema.org/coursePrerequisites';
/**
 * coverageEndTime
 *
 * The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
 *
 * http://schema.org/coverageEndTime
 */
var coverageEndTime = 'http://schema.org/coverageEndTime';
/**
 * coverageStartTime
 *
 * The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
 *
 * http://schema.org/coverageStartTime
 */
var coverageStartTime = 'http://schema.org/coverageStartTime';
/**
 * creator
 *
 * The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
 *
 * http://schema.org/creator
 */
var creator = 'http://schema.org/creator';
/**
 * creditedTo
 *
 * The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga.
 *
 * http://schema.org/creditedTo
 */
var creditedTo = 'http://schema.org/creditedTo';
/**
 * cssSelector
 *
 * A CSS selector, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
 *
 * http://schema.org/cssSelector
 */
var cssSelector = 'http://schema.org/cssSelector';
/**
 * currenciesAccepted
 *
 * The currency accepted.<br/><br/>
 *
 * Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
 *
 * http://schema.org/currenciesAccepted
 */
var currenciesAccepted = 'http://schema.org/currenciesAccepted';
/**
 * currency
 *
 * The currency in which the monetary amount is expressed.<br/><br/>
 *
 * Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
 *
 * http://schema.org/currency
 */
var currency = 'http://schema.org/currency';
/**
 * customer
 *
 * Party placing the order or paying the invoice.
 *
 * http://schema.org/customer
 */
var customer = 'http://schema.org/customer';
/**
 * dataFeedElement
 *
 * An item within in a data feed. Data feeds may have many elements.
 *
 * http://schema.org/dataFeedElement
 */
var dataFeedElement = 'http://schema.org/dataFeedElement';
/**
 * datasetTimeInterval
 *
 * The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).
 *
 * http://schema.org/datasetTimeInterval
 */
var datasetTimeInterval = 'http://schema.org/datasetTimeInterval';
/**
 * dateCreated
 *
 * The date on which the CreativeWork was created or the item was added to a DataFeed.
 *
 * http://schema.org/dateCreated
 */
var dateCreated = 'http://schema.org/dateCreated';
/**
 * dateDeleted
 *
 * The datetime the item was removed from the DataFeed.
 *
 * http://schema.org/dateDeleted
 */
var dateDeleted = 'http://schema.org/dateDeleted';
/**
 * dateIssued
 *
 * The date the ticket was issued.
 *
 * http://schema.org/dateIssued
 */
var dateIssued = 'http://schema.org/dateIssued';
/**
 * dateModified
 *
 * The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
 *
 * http://schema.org/dateModified
 */
var dateModified = 'http://schema.org/dateModified';
/**
 * datePosted
 *
 * Publication date for the job posting.
 *
 * http://schema.org/datePosted
 */
var datePosted = 'http://schema.org/datePosted';
/**
 * datePublished
 *
 * Date of first broadcast/publication.
 *
 * http://schema.org/datePublished
 */
var datePublished = 'http://schema.org/datePublished';
/**
 * dateRead
 *
 * The date/time at which the message has been read by the recipient if a single recipient exists.
 *
 * http://schema.org/dateRead
 */
var dateRead = 'http://schema.org/dateRead';
/**
 * dateReceived
 *
 * The date/time the message was received if a single recipient exists.
 *
 * http://schema.org/dateReceived
 */
var dateReceived = 'http://schema.org/dateReceived';
/**
 * dateSent
 *
 * The date/time at which the message was sent.
 *
 * http://schema.org/dateSent
 */
var dateSent = 'http://schema.org/dateSent';
/**
 * dateVehicleFirstRegistered
 *
 * The date of the first registration of the vehicle with the respective public authorities.
 *
 * http://schema.org/dateVehicleFirstRegistered
 */
var dateVehicleFirstRegistered = 'http://schema.org/dateVehicleFirstRegistered';
/**
 * dateline
 *
 * A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>
 *
 * Structured representations of dateline-related information can also be expressed more explicitly using <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>
 *
 * Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".
 *
 * http://schema.org/dateline
 */
var dateline = 'http://schema.org/dateline';
/**
 * dayOfWeek
 *
 * The day of the week for which these opening hours are valid.
 *
 * http://schema.org/dayOfWeek
 */
var dayOfWeek = 'http://schema.org/dayOfWeek';
/**
 * deathDate
 *
 * Date of death.
 *
 * http://schema.org/deathDate
 */
var deathDate = 'http://schema.org/deathDate';
/**
 * deathPlace
 *
 * The place where the person died.
 *
 * http://schema.org/deathPlace
 */
var deathPlace = 'http://schema.org/deathPlace';
/**
 * defaultValue
 *
 * The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
 *
 * http://schema.org/defaultValue
 */
var defaultValue = 'http://schema.org/defaultValue';
/**
 * deliveryAddress
 *
 * Destination address.
 *
 * http://schema.org/deliveryAddress
 */
var deliveryAddress = 'http://schema.org/deliveryAddress';
/**
 * deliveryLeadTime
 *
 * The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.
 *
 * http://schema.org/deliveryLeadTime
 */
var deliveryLeadTime = 'http://schema.org/deliveryLeadTime';
/**
 * deliveryMethod
 *
 * A sub property of instrument. The method of delivery.
 *
 * http://schema.org/deliveryMethod
 */
var deliveryMethod = 'http://schema.org/deliveryMethod';
/**
 * deliveryStatus
 *
 * New entry added as the package passes through each leg of its journey (from shipment to final delivery).
 *
 * http://schema.org/deliveryStatus
 */
var deliveryStatus = 'http://schema.org/deliveryStatus';
/**
 * department
 *
 * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
 *
 * http://schema.org/department
 */
var department = 'http://schema.org/department';
/**
 * departureAirport
 *
 * The airport where the flight originates.
 *
 * http://schema.org/departureAirport
 */
var departureAirport = 'http://schema.org/departureAirport';
/**
 * departureBusStop
 *
 * The stop or station from which the bus departs.
 *
 * http://schema.org/departureBusStop
 */
var departureBusStop = 'http://schema.org/departureBusStop';
/**
 * departureGate
 *
 * Identifier of the flight's departure gate.
 *
 * http://schema.org/departureGate
 */
var departureGate = 'http://schema.org/departureGate';
/**
 * departurePlatform
 *
 * The platform from which the train departs.
 *
 * http://schema.org/departurePlatform
 */
var departurePlatform = 'http://schema.org/departurePlatform';
/**
 * departureStation
 *
 * The station from which the train departs.
 *
 * http://schema.org/departureStation
 */
var departureStation = 'http://schema.org/departureStation';
/**
 * departureTerminal
 *
 * Identifier of the flight's departure terminal.
 *
 * http://schema.org/departureTerminal
 */
var departureTerminal = 'http://schema.org/departureTerminal';
/**
 * departureTime
 *
 * The expected departure time.
 *
 * http://schema.org/departureTime
 */
var departureTime = 'http://schema.org/departureTime';
/**
 * dependencies
 *
 * Prerequisites needed to fulfill steps in article.
 *
 * http://schema.org/dependencies
 */
var dependencies = 'http://schema.org/dependencies';
/**
 * depth
 *
 * The depth of the item.
 *
 * http://schema.org/depth
 */
var depth = 'http://schema.org/depth';
/**
 * device
 *
 * Device required to run the application. Used in cases where a specific make/model is required to run the application.
 *
 * http://schema.org/device
 */
var device = 'http://schema.org/device';
/**
 * directors
 *
 * A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/directors
 */
var directors = 'http://schema.org/directors';
/**
 * disambiguatingDescription
 *
 * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
 *
 * http://schema.org/disambiguatingDescription
 */
var disambiguatingDescription = 'http://schema.org/disambiguatingDescription';
/**
 * discount
 *
 * Any discount applied (to an Order).
 *
 * http://schema.org/discount
 */
var discount = 'http://schema.org/discount';
/**
 * discountCode
 *
 * Code used to redeem a discount.
 *
 * http://schema.org/discountCode
 */
var discountCode = 'http://schema.org/discountCode';
/**
 * discountCurrency
 *
 * The currency of the discount.<br/><br/>
 *
 * Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
 *
 * http://schema.org/discountCurrency
 */
var discountCurrency = 'http://schema.org/discountCurrency';
/**
 * discusses
 *
 * Specifies the CreativeWork associated with the UserComment.
 *
 * http://schema.org/discusses
 */
var discusses = 'http://schema.org/discusses';
/**
 * discussionUrl
 *
 * A link to the page containing the comments of the CreativeWork.
 *
 * http://schema.org/discussionUrl
 */
var discussionUrl = 'http://schema.org/discussionUrl';
/**
 * dissolutionDate
 *
 * The date that this organization was dissolved.
 *
 * http://schema.org/dissolutionDate
 */
var dissolutionDate = 'http://schema.org/dissolutionDate';
/**
 * distance
 *
 * The distance travelled, e.g. exercising or travelling.
 *
 * http://schema.org/distance
 */
var distance = 'http://schema.org/distance';
/**
 * distribution
 *
 * A downloadable form of this dataset, at a specific location, in a specific format.
 *
 * http://schema.org/distribution
 */
var distribution = 'http://schema.org/distribution';
/**
 * doorTime
 *
 * The time admission will commence.
 *
 * http://schema.org/doorTime
 */
var doorTime = 'http://schema.org/doorTime';
/**
 * downloadUrl
 *
 * If the file can be downloaded, URL to download the binary.
 *
 * http://schema.org/downloadUrl
 */
var downloadUrl = 'http://schema.org/downloadUrl';
/**
 * downvoteCount
 *
 * The number of downvotes this question, answer or comment has received from the community.
 *
 * http://schema.org/downvoteCount
 */
var downvoteCount = 'http://schema.org/downvoteCount';
/**
 * driveWheelConfiguration
 *
 * The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.
 *
 * http://schema.org/driveWheelConfiguration
 */
var driveWheelConfiguration = 'http://schema.org/driveWheelConfiguration';
/**
 * dropoffLocation
 *
 * Where a rental car can be dropped off.
 *
 * http://schema.org/dropoffLocation
 */
var dropoffLocation = 'http://schema.org/dropoffLocation';
/**
 * dropoffTime
 *
 * When a rental car can be dropped off.
 *
 * http://schema.org/dropoffTime
 */
var dropoffTime = 'http://schema.org/dropoffTime';
/**
 * duns
 *
 * The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.
 *
 * http://schema.org/duns
 */
var duns = 'http://schema.org/duns';
/**
 * durationOfWarranty
 *
 * The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.
 *
 * http://schema.org/durationOfWarranty
 */
var durationOfWarranty = 'http://schema.org/durationOfWarranty';
/**
 * duringMedia
 *
 * A media object representing the circumstances while performing this direction.
 *
 * http://schema.org/duringMedia
 */
var duringMedia = 'http://schema.org/duringMedia';
/**
 * editor
 *
 * Specifies the Person who edited the CreativeWork.
 *
 * http://schema.org/editor
 */
var editor = 'http://schema.org/editor';
/**
 * educationalAlignment
 *
 * An alignment to an established educational framework.
 *
 * http://schema.org/educationalAlignment
 */
var educationalAlignment = 'http://schema.org/educationalAlignment';
/**
 * educationalCredentialAwarded
 *
 * A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.
 *
 * http://schema.org/educationalCredentialAwarded
 */
var educationalCredentialAwarded = 'http://schema.org/educationalCredentialAwarded';
/**
 * educationalFramework
 *
 * The framework to which the resource being described is aligned.
 *
 * http://schema.org/educationalFramework
 */
var educationalFramework = 'http://schema.org/educationalFramework';
/**
 * educationalRole
 *
 * An educationalRole of an EducationalAudience.
 *
 * http://schema.org/educationalRole
 */
var educationalRole = 'http://schema.org/educationalRole';
/**
 * educationalUse
 *
 * The purpose of a work in the context of education; for example, 'assignment', 'group work'.
 *
 * http://schema.org/educationalUse
 */
var educationalUse = 'http://schema.org/educationalUse';
/**
 * elevation
 *
 * The elevation of a location (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>). Values may be of the form 'NUMBER UNIT<em>OF</em>MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.
 *
 * http://schema.org/elevation
 */
var elevation = 'http://schema.org/elevation';
/**
 * eligibleCustomerType
 *
 * The type(s) of customers for which the given offer is valid.
 *
 * http://schema.org/eligibleCustomerType
 */
var eligibleCustomerType = 'http://schema.org/eligibleCustomerType';
/**
 * eligibleDuration
 *
 * The duration for which the given offer is valid.
 *
 * http://schema.org/eligibleDuration
 */
var eligibleDuration = 'http://schema.org/eligibleDuration';
/**
 * eligibleQuantity
 *
 * The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
 *
 * http://schema.org/eligibleQuantity
 */
var eligibleQuantity = 'http://schema.org/eligibleQuantity';
/**
 * eligibleRegion
 *
 * The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>
 *
 * See also <a class="localLink" href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
 *
 * http://schema.org/eligibleRegion
 */
var eligibleRegion = 'http://schema.org/eligibleRegion';
/**
 * eligibleTransactionVolume
 *
 * The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
 *
 * http://schema.org/eligibleTransactionVolume
 */
var eligibleTransactionVolume = 'http://schema.org/eligibleTransactionVolume';
/**
 * email
 *
 * Email address.
 *
 * http://schema.org/email
 */
var email = 'http://schema.org/email';
/**
 * embedUrl
 *
 * A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.
 *
 * http://schema.org/embedUrl
 */
var embedUrl = 'http://schema.org/embedUrl';
/**
 * employees
 *
 * People working for this organization.
 *
 * http://schema.org/employees
 */
var employees = 'http://schema.org/employees';
/**
 * employmentType
 *
 * Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).
 *
 * http://schema.org/employmentType
 */
var employmentType = 'http://schema.org/employmentType';
/**
 * encodingType
 *
 * The supported encoding type(s) for an EntryPoint request.
 *
 * http://schema.org/encodingType
 */
var encodingType = 'http://schema.org/encodingType';
/**
 * encodings
 *
 * A media object that encodes this CreativeWork.
 *
 * http://schema.org/encodings
 */
var encodings = 'http://schema.org/encodings';
/**
 * endDate
 *
 * The end date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
 *
 * http://schema.org/endDate
 */
var endDate = 'http://schema.org/endDate';
/**
 * endTime
 *
 * The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>. For media, including audio and video, it's the time offset of the end of a clip within a larger file.<br/><br/>
 *
 * Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
 *
 * http://schema.org/endTime
 */
var endTime = 'http://schema.org/endTime';
/**
 * endorsee
 *
 * A sub property of participant. The person/organization being supported.
 *
 * http://schema.org/endorsee
 */
var endorsee = 'http://schema.org/endorsee';
/**
 * entertainmentBusiness
 *
 * A sub property of location. The entertainment business where the action occurred.
 *
 * http://schema.org/entertainmentBusiness
 */
var entertainmentBusiness = 'http://schema.org/entertainmentBusiness';
/**
 * episodeNumber
 *
 * Position of the episode within an ordered group of episodes.
 *
 * http://schema.org/episodeNumber
 */
var episodeNumber = 'http://schema.org/episodeNumber';
/**
 * episodes
 *
 * An episode of a TV/radio series or season.
 *
 * http://schema.org/episodes
 */
var episodes = 'http://schema.org/episodes';
/**
 * equal
 *
 * This ordering relation for qualitative values indicates that the subject is equal to the object.
 *
 * http://schema.org/equal
 */
var equal = 'http://schema.org/equal';
/**
 * error
 *
 * For failed actions, more information on the cause of the failure.
 *
 * http://schema.org/error
 */
var error = 'http://schema.org/error';
/**
 * estimatedCost
 *
 * The estimated cost of the supply or supplies consumed when performing instructions.
 *
 * http://schema.org/estimatedCost
 */
var estimatedCost = 'http://schema.org/estimatedCost';
/**
 * estimatedFlightDuration
 *
 * The estimated time the flight will take.
 *
 * http://schema.org/estimatedFlightDuration
 */
var estimatedFlightDuration = 'http://schema.org/estimatedFlightDuration';
/**
 * estimatedSalary
 *
 * An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.
 *
 * http://schema.org/estimatedSalary
 */
var estimatedSalary = 'http://schema.org/estimatedSalary';
/**
 * eventStatus
 *
 * An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
 *
 * http://schema.org/eventStatus
 */
var eventStatus = 'http://schema.org/eventStatus';
/**
 * events
 *
 * Upcoming or past events associated with this place or organization.
 *
 * http://schema.org/events
 */
var events = 'http://schema.org/events';
/**
 * exifData
 *
 * exif data for this object.
 *
 * http://schema.org/exifData
 */
var exifData = 'http://schema.org/exifData';
/**
 * expectedArrivalFrom
 *
 * The earliest date the package may arrive.
 *
 * http://schema.org/expectedArrivalFrom
 */
var expectedArrivalFrom = 'http://schema.org/expectedArrivalFrom';
/**
 * expectedArrivalUntil
 *
 * The latest date the package may arrive.
 *
 * http://schema.org/expectedArrivalUntil
 */
var expectedArrivalUntil = 'http://schema.org/expectedArrivalUntil';
/**
 * expectsAcceptanceOf
 *
 * An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.
 *
 * http://schema.org/expectsAcceptanceOf
 */
var expectsAcceptanceOf = 'http://schema.org/expectsAcceptanceOf';
/**
 * experienceRequirements
 *
 * Description of skills and experience needed for the position or Occupation.
 *
 * http://schema.org/experienceRequirements
 */
var experienceRequirements = 'http://schema.org/experienceRequirements';
/**
 * expires
 *
 * Date the content expires and is no longer useful or available. For example a <a class="localLink" href="http://schema.org/VideoObject">VideoObject</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> whose availability or relevance is time-limited, or a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.
 *
 * http://schema.org/expires
 */
var expires = 'http://schema.org/expires';
/**
 * familyName
 *
 * Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.
 *
 * http://schema.org/familyName
 */
var familyName = 'http://schema.org/familyName';
/**
 * fatContent
 *
 * The number of grams of fat.
 *
 * http://schema.org/fatContent
 */
var fatContent = 'http://schema.org/fatContent';
/**
 * faxNumber
 *
 * The fax number.
 *
 * http://schema.org/faxNumber
 */
var faxNumber = 'http://schema.org/faxNumber';
/**
 * featureList
 *
 * Features or modules provided by this application (and possibly required by other applications).
 *
 * http://schema.org/featureList
 */
var featureList = 'http://schema.org/featureList';
/**
 * feesAndCommissionsSpecification
 *
 * Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.
 *
 * http://schema.org/feesAndCommissionsSpecification
 */
var feesAndCommissionsSpecification = 'http://schema.org/feesAndCommissionsSpecification';
/**
 * fiberContent
 *
 * The number of grams of fiber.
 *
 * http://schema.org/fiberContent
 */
var fiberContent = 'http://schema.org/fiberContent';
/**
 * fileFormat
 *
 * Media type, typically MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.
 *
 * http://schema.org/fileFormat
 */
var fileFormat = 'http://schema.org/fileFormat';
/**
 * fileSize
 *
 * Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
 *
 * http://schema.org/fileSize
 */
var fileSize = 'http://schema.org/fileSize';
/**
 * firstPerformance
 *
 * The date and place the work was first performed.
 *
 * http://schema.org/firstPerformance
 */
var firstPerformance = 'http://schema.org/firstPerformance';
/**
 * flightDistance
 *
 * The distance of the flight.
 *
 * http://schema.org/flightDistance
 */
var flightDistance = 'http://schema.org/flightDistance';
/**
 * flightNumber
 *
 * The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
 *
 * http://schema.org/flightNumber
 */
var flightNumber = 'http://schema.org/flightNumber';
/**
 * floorSize
 *
 * The size of the accommodation, e.g. in square meter or squarefoot.
 * Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard
 *
 * http://schema.org/floorSize
 */
var floorSize = 'http://schema.org/floorSize';
/**
 * followee
 *
 * A sub property of object. The person or organization being followed.
 *
 * http://schema.org/followee
 */
var followee = 'http://schema.org/followee';
/**
 * follows
 *
 * The most generic uni-directional social relation.
 *
 * http://schema.org/follows
 */
var follows = 'http://schema.org/follows';
/**
 * foodEstablishment
 *
 * A sub property of location. The specific food establishment where the action occurred.
 *
 * http://schema.org/foodEstablishment
 */
var foodEstablishment = 'http://schema.org/foodEstablishment';
/**
 * foodEvent
 *
 * A sub property of location. The specific food event where the action occurred.
 *
 * http://schema.org/foodEvent
 */
var foodEvent = 'http://schema.org/foodEvent';
/**
 * founders
 *
 * A person who founded this organization.
 *
 * http://schema.org/founders
 */
var founders = 'http://schema.org/founders';
/**
 * foundingDate
 *
 * The date that this organization was founded.
 *
 * http://schema.org/foundingDate
 */
var foundingDate = 'http://schema.org/foundingDate';
/**
 * foundingLocation
 *
 * The place where the Organization was founded.
 *
 * http://schema.org/foundingLocation
 */
var foundingLocation = 'http://schema.org/foundingLocation';
/**
 * free
 *
 * A flag to signal that the item, event, or place is accessible for free.
 *
 * http://schema.org/free
 */
var free = 'http://schema.org/free';
/**
 * fromLocation
 *
 * A sub property of location. The original location of the object or the agent before the action.
 *
 * http://schema.org/fromLocation
 */
var fromLocation = 'http://schema.org/fromLocation';
/**
 * fuelConsumption
 *
 * The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).<br/><br/>
 *
 * <ul>
 * <li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>
 * <li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
 * <li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel consumption to another value.</li>
 * </ul>
 *
 *
 * http://schema.org/fuelConsumption
 */
var fuelConsumption = 'http://schema.org/fuelConsumption';
/**
 * fuelEfficiency
 *
 * The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).<br/><br/>
 *
 * <ul>
 * <li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>
 * <li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
 * <li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel economy to another value.</li>
 * </ul>
 *
 *
 * http://schema.org/fuelEfficiency
 */
var fuelEfficiency = 'http://schema.org/fuelEfficiency';
/**
 * fuelType
 *
 * The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.
 *
 * http://schema.org/fuelType
 */
var fuelType = 'http://schema.org/fuelType';
/**
 * funder
 *
 * A person or organization that supports (sponsors) something through some kind of financial contribution.
 *
 * http://schema.org/funder
 */
var funder = 'http://schema.org/funder';
/**
 * gameItem
 *
 * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
 *
 * http://schema.org/gameItem
 */
var gameItem = 'http://schema.org/gameItem';
/**
 * gameLocation
 *
 * Real or fictional location of the game (or part of game).
 *
 * http://schema.org/gameLocation
 */
var gameLocation = 'http://schema.org/gameLocation';
/**
 * gamePlatform
 *
 * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
 *
 * http://schema.org/gamePlatform
 */
var gamePlatform = 'http://schema.org/gamePlatform';
/**
 * gameTip
 *
 * Links to tips, tactics, etc.
 *
 * http://schema.org/gameTip
 */
var gameTip = 'http://schema.org/gameTip';
/**
 * gender
 *
 * Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.
 *
 * http://schema.org/gender
 */
var gender = 'http://schema.org/gender';
/**
 * genre
 *
 * Genre of the creative work, broadcast channel or group.
 *
 * http://schema.org/genre
 */
var genre = 'http://schema.org/genre';
/**
 * geo
 *
 * The geo coordinates of the place.
 *
 * http://schema.org/geo
 */
var geo = 'http://schema.org/geo';
/**
 * geoContains
 *
 * Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoContains
 */
var geoContains = 'http://schema.org/geoContains';
/**
 * geoCoveredBy
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoCoveredBy
 */
var geoCoveredBy = 'http://schema.org/geoCoveredBy';
/**
 * geoCovers
 *
 * Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoCovers
 */
var geoCovers = 'http://schema.org/geoCovers';
/**
 * geoCrosses
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoCrosses
 */
var geoCrosses = 'http://schema.org/geoCrosses';
/**
 * geoDisjoint
 *
 * Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>)
 *
 * http://schema.org/geoDisjoint
 */
var geoDisjoint = 'http://schema.org/geoDisjoint';
/**
 * geoEquals
 *
 * Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)
 *
 * http://schema.org/geoEquals
 */
var geoEquals = 'http://schema.org/geoEquals';
/**
 * geoIntersects
 *
 * Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoIntersects
 */
var geoIntersects = 'http://schema.org/geoIntersects';
/**
 * geoMidpoint
 *
 * Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.
 *
 * http://schema.org/geoMidpoint
 */
var geoMidpoint = 'http://schema.org/geoMidpoint';
/**
 * geoOverlaps
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoOverlaps
 */
var geoOverlaps = 'http://schema.org/geoOverlaps';
/**
 * geoRadius
 *
 * Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).
 *
 * http://schema.org/geoRadius
 */
var geoRadius = 'http://schema.org/geoRadius';
/**
 * geoTouches
 *
 * Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a> )
 *
 * http://schema.org/geoTouches
 */
var geoTouches = 'http://schema.org/geoTouches';
/**
 * geoWithin
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
 *
 * http://schema.org/geoWithin
 */
var geoWithin = 'http://schema.org/geoWithin';
/**
 * geographicArea
 *
 * The geographic area associated with the audience.
 *
 * http://schema.org/geographicArea
 */
var geographicArea = 'http://schema.org/geographicArea';
/**
 * givenName
 *
 * Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.
 *
 * http://schema.org/givenName
 */
var givenName = 'http://schema.org/givenName';
/**
 * globalLocationNumber
 *
 * The <a href="http://www.gs1.org/gln">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
 *
 * http://schema.org/globalLocationNumber
 */
var globalLocationNumber = 'http://schema.org/globalLocationNumber';
/**
 * grantee
 *
 * The person, organization, contact point, or audience that has been granted this permission.
 *
 * http://schema.org/grantee
 */
var grantee = 'http://schema.org/grantee';
/**
 * greater
 *
 * This ordering relation for qualitative values indicates that the subject is greater than the object.
 *
 * http://schema.org/greater
 */
var greater = 'http://schema.org/greater';
/**
 * greaterOrEqual
 *
 * This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
 *
 * http://schema.org/greaterOrEqual
 */
var greaterOrEqual = 'http://schema.org/greaterOrEqual';
/**
 * gtin12
 *
 * The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
 *
 * http://schema.org/gtin12
 */
var gtin12 = 'http://schema.org/gtin12';
/**
 * gtin13
 *
 * The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
 *
 * http://schema.org/gtin13
 */
var gtin13 = 'http://schema.org/gtin13';
/**
 * gtin14
 *
 * The GTIN-14 code of the product, or the product to which the offer refers. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
 *
 * http://schema.org/gtin14
 */
var gtin14 = 'http://schema.org/gtin14';
/**
 * gtin8
 *
 * The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
 *
 * http://schema.org/gtin8
 */
var gtin8 = 'http://schema.org/gtin8';
/**
 * hasCourseInstance
 *
 * An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.
 *
 * http://schema.org/hasCourseInstance
 */
var hasCourseInstance = 'http://schema.org/hasCourseInstance';
/**
 * hasDeliveryMethod
 *
 * Method used for delivery or shipping.
 *
 * http://schema.org/hasDeliveryMethod
 */
var hasDeliveryMethod = 'http://schema.org/hasDeliveryMethod';
/**
 * hasDigitalDocumentPermission
 *
 * A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public".
 *
 * http://schema.org/hasDigitalDocumentPermission
 */
var hasDigitalDocumentPermission = 'http://schema.org/hasDigitalDocumentPermission';
/**
 * hasMenuItem
 *
 * A food or drink item contained in a menu or menu section.
 *
 * http://schema.org/hasMenuItem
 */
var hasMenuItem = 'http://schema.org/hasMenuItem';
/**
 * hasMenuSection
 *
 * A subgrouping of the menu (by dishes, course, serving time period, etc.).
 *
 * http://schema.org/hasMenuSection
 */
var hasMenuSection = 'http://schema.org/hasMenuSection';
/**
 * hasOccupation
 *
 * The Person's occupation. For past professions, use Role for expressing dates.
 *
 * http://schema.org/hasOccupation
 */
var hasOccupation = 'http://schema.org/hasOccupation';
/**
 * hasOfferCatalog
 *
 * Indicates an OfferCatalog listing for this Organization, Person, or Service.
 *
 * http://schema.org/hasOfferCatalog
 */
var hasOfferCatalog = 'http://schema.org/hasOfferCatalog';
/**
 * hasPOS
 *
 * Points-of-Sales operated by the organization or person.
 *
 * http://schema.org/hasPOS
 */
var hasPOS = 'http://schema.org/hasPOS';
/**
 * headline
 *
 * Headline of the article.
 *
 * http://schema.org/headline
 */
var headline = 'http://schema.org/headline';
/**
 * height
 *
 * The height of the item.
 *
 * http://schema.org/height
 */
var height = 'http://schema.org/height';
/**
 * highPrice
 *
 * The highest price of all offers available.<br/><br/>
 *
 * Usage guidelines:<br/><br/>
 *
 * <ul>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * </ul>
 *
 *
 * http://schema.org/highPrice
 */
var highPrice = 'http://schema.org/highPrice';
/**
 * hiringOrganization
 *
 * Organization offering the job position.
 *
 * http://schema.org/hiringOrganization
 */
var hiringOrganization = 'http://schema.org/hiringOrganization';
/**
 * homeLocation
 *
 * A contact location for a person's residence.
 *
 * http://schema.org/homeLocation
 */
var homeLocation = 'http://schema.org/homeLocation';
/**
 * homeTeam
 *
 * The home team in a sports event.
 *
 * http://schema.org/homeTeam
 */
var homeTeam = 'http://schema.org/homeTeam';
/**
 * honorificPrefix
 *
 * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
 *
 * http://schema.org/honorificPrefix
 */
var honorificPrefix = 'http://schema.org/honorificPrefix';
/**
 * honorificSuffix
 *
 * An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.
 *
 * http://schema.org/honorificSuffix
 */
var honorificSuffix = 'http://schema.org/honorificSuffix';
/**
 * hostingOrganization
 *
 * The organization (airline, travelers' club, etc.) the membership is made with.
 *
 * http://schema.org/hostingOrganization
 */
var hostingOrganization = 'http://schema.org/hostingOrganization';
/**
 * hoursAvailable
 *
 * The hours during which this service or contact is available.
 *
 * http://schema.org/hoursAvailable
 */
var hoursAvailable = 'http://schema.org/hoursAvailable';
/**
 * httpMethod
 *
 * An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
 *
 * http://schema.org/httpMethod
 */
var httpMethod = 'http://schema.org/httpMethod';
/**
 * iataCode
 *
 * IATA identifier for an airline or airport.
 *
 * http://schema.org/iataCode
 */
var iataCode = 'http://schema.org/iataCode';
/**
 * icaoCode
 *
 * ICAO identifier for an airport.
 *
 * http://schema.org/icaoCode
 */
var icaoCode = 'http://schema.org/icaoCode';
/**
 * illustrator
 *
 * The illustrator of the book.
 *
 * http://schema.org/illustrator
 */
var illustrator = 'http://schema.org/illustrator';
/**
 * inAlbum
 *
 * The album to which this recording belongs.
 *
 * http://schema.org/inAlbum
 */
var inAlbum = 'http://schema.org/inAlbum';
/**
 * inBroadcastLineup
 *
 * The CableOrSatelliteService offering the channel.
 *
 * http://schema.org/inBroadcastLineup
 */
var inBroadcastLineup = 'http://schema.org/inBroadcastLineup';
/**
 * inPlaylist
 *
 * The playlist to which this recording belongs.
 *
 * http://schema.org/inPlaylist
 */
var inPlaylist = 'http://schema.org/inPlaylist';
/**
 * incentives
 *
 * Description of bonus and commission compensation aspects of the job.
 *
 * http://schema.org/incentives
 */
var incentives = 'http://schema.org/incentives';
/**
 * includedComposition
 *
 * Smaller compositions included in this work (e.g. a movement in a symphony).
 *
 * http://schema.org/includedComposition
 */
var includedComposition = 'http://schema.org/includedComposition';
/**
 * includedDataCatalog
 *
 * A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').
 *
 * http://schema.org/includedDataCatalog
 */
var includedDataCatalog = 'http://schema.org/includedDataCatalog';
/**
 * includesObject
 *
 * This links to a node or nodes indicating the exact quantity of the products included in the offer.
 *
 * http://schema.org/includesObject
 */
var includesObject = 'http://schema.org/includesObject';
/**
 * industry
 *
 * The industry associated with the job position.
 *
 * http://schema.org/industry
 */
var industry = 'http://schema.org/industry';
/**
 * ineligibleRegion
 *
 * The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.<br/><br/>
 *
 * See also <a class="localLink" href="http://schema.org/eligibleRegion">eligibleRegion</a>.
 *
 * http://schema.org/ineligibleRegion
 */
var ineligibleRegion = 'http://schema.org/ineligibleRegion';
/**
 * ingredients
 *
 * A single ingredient used in the recipe, e.g. sugar, flour or garlic.
 *
 * http://schema.org/ingredients
 */
var ingredients = 'http://schema.org/ingredients';
/**
 * installUrl
 *
 * URL at which the app may be installed, if different from the URL of the item.
 *
 * http://schema.org/installUrl
 */
var installUrl = 'http://schema.org/installUrl';
/**
 * instructor
 *
 * A person assigned to instruct or provide instructional assistance for the <a class="localLink" href="http://schema.org/CourseInstance">CourseInstance</a>.
 *
 * http://schema.org/instructor
 */
var instructor = 'http://schema.org/instructor';
/**
 * interactionCount
 *
 * This property is deprecated, alongside the UserInteraction types on which it depended.
 *
 * http://schema.org/interactionCount
 */
var interactionCount = 'http://schema.org/interactionCount';
/**
 * interactionService
 *
 * The WebSite or SoftwareApplication where the interactions took place.
 *
 * http://schema.org/interactionService
 */
var interactionService = 'http://schema.org/interactionService';
/**
 * interactionType
 *
 * The Action representing the type of interaction. For up votes, +1s, etc. use <a class="localLink" href="http://schema.org/LikeAction">LikeAction</a>. For down votes use <a class="localLink" href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise, use the most specific Action.
 *
 * http://schema.org/interactionType
 */
var interactionType = 'http://schema.org/interactionType';
/**
 * interactivityType
 *
 * The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
 *
 * http://schema.org/interactivityType
 */
var interactivityType = 'http://schema.org/interactivityType';
/**
 * interestRate
 *
 * The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.
 *
 * http://schema.org/interestRate
 */
var interestRate = 'http://schema.org/interestRate';
/**
 * inventoryLevel
 *
 * The current approximate inventory level for the item or items.
 *
 * http://schema.org/inventoryLevel
 */
var inventoryLevel = 'http://schema.org/inventoryLevel';
/**
 * isAccessoryOrSparePartFor
 *
 * A pointer to another product (or multiple products) for which this product is an accessory or spare part.
 *
 * http://schema.org/isAccessoryOrSparePartFor
 */
var isAccessoryOrSparePartFor = 'http://schema.org/isAccessoryOrSparePartFor';
/**
 * isBasedOnUrl
 *
 * A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.
 *
 * http://schema.org/isBasedOnUrl
 */
var isBasedOnUrl = 'http://schema.org/isBasedOnUrl';
/**
 * isConsumableFor
 *
 * A pointer to another product (or multiple products) for which this product is a consumable.
 *
 * http://schema.org/isConsumableFor
 */
var isConsumableFor = 'http://schema.org/isConsumableFor';
/**
 * isFamilyFriendly
 *
 * Indicates whether this content is family friendly.
 *
 * http://schema.org/isFamilyFriendly
 */
var isFamilyFriendly = 'http://schema.org/isFamilyFriendly';
/**
 * isGift
 *
 * Was the offer accepted as a gift for someone other than the buyer.
 *
 * http://schema.org/isGift
 */
var isGift = 'http://schema.org/isGift';
/**
 * isLiveBroadcast
 *
 * True is the broadcast is of a live event.
 *
 * http://schema.org/isLiveBroadcast
 */
var isLiveBroadcast = 'http://schema.org/isLiveBroadcast';
/**
 * isRelatedTo
 *
 * A pointer to another, somehow related product (or multiple products).
 *
 * http://schema.org/isRelatedTo
 */
var isRelatedTo = 'http://schema.org/isRelatedTo';
/**
 * isSimilarTo
 *
 * A pointer to another, functionally similar product (or multiple products).
 *
 * http://schema.org/isSimilarTo
 */
var isSimilarTo = 'http://schema.org/isSimilarTo';
/**
 * isVariantOf
 *
 * A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.
 *
 * http://schema.org/isVariantOf
 */
var isVariantOf = 'http://schema.org/isVariantOf';
/**
 * isbn
 *
 * The ISBN of the book.
 *
 * http://schema.org/isbn
 */
var isbn = 'http://schema.org/isbn';
/**
 * isicV4
 *
 * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
 *
 * http://schema.org/isicV4
 */
var isicV4 = 'http://schema.org/isicV4';
/**
 * isrcCode
 *
 * The International Standard Recording Code for the recording.
 *
 * http://schema.org/isrcCode
 */
var isrcCode = 'http://schema.org/isrcCode';
/**
 * issn
 *
 * The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.
 *
 * http://schema.org/issn
 */
var issn = 'http://schema.org/issn';
/**
 * issueNumber
 *
 * Identifies the issue of publication; for example, "iii" or "2".
 *
 * http://schema.org/issueNumber
 */
var issueNumber = 'http://schema.org/issueNumber';
/**
 * issuedBy
 *
 * The organization issuing the ticket or permit.
 *
 * http://schema.org/issuedBy
 */
var issuedBy = 'http://schema.org/issuedBy';
/**
 * issuedThrough
 *
 * The service through with the permit was granted.
 *
 * http://schema.org/issuedThrough
 */
var issuedThrough = 'http://schema.org/issuedThrough';
/**
 * iswcCode
 *
 * The International Standard Musical Work Code for the composition.
 *
 * http://schema.org/iswcCode
 */
var iswcCode = 'http://schema.org/iswcCode';
/**
 * item
 *
 * An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’.
 *
 * http://schema.org/item
 */
var item = 'http://schema.org/item';
/**
 * itemCondition
 *
 * A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.
 *
 * http://schema.org/itemCondition
 */
var itemCondition = 'http://schema.org/itemCondition';
/**
 * itemListElement
 *
 * For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.<br/><br/>
 *
 * Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>
 *
 * Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.
 *
 * http://schema.org/itemListElement
 */
var itemListElement = 'http://schema.org/itemListElement';
/**
 * itemListOrder
 *
 * Type of ordering (e.g. Ascending, Descending, Unordered).
 *
 * http://schema.org/itemListOrder
 */
var itemListOrder = 'http://schema.org/itemListOrder';
/**
 * itemOffered
 *
 * The item being offered.
 *
 * http://schema.org/itemOffered
 */
var itemOffered = 'http://schema.org/itemOffered';
/**
 * itemReviewed
 *
 * The item that is being reviewed/rated.
 *
 * http://schema.org/itemReviewed
 */
var itemReviewed = 'http://schema.org/itemReviewed';
/**
 * itemShipped
 *
 * Item(s) being shipped.
 *
 * http://schema.org/itemShipped
 */
var itemShipped = 'http://schema.org/itemShipped';
/**
 * jobLocation
 *
 * A (typically single) geographic location associated with the job position.
 *
 * http://schema.org/jobLocation
 */
var jobLocation = 'http://schema.org/jobLocation';
/**
 * keywords
 *
 * Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.
 *
 * http://schema.org/keywords
 */
var keywords = 'http://schema.org/keywords';
/**
 * knownVehicleDamages
 *
 * A textual description of known damages, both repaired and unrepaired.
 *
 * http://schema.org/knownVehicleDamages
 */
var knownVehicleDamages = 'http://schema.org/knownVehicleDamages';
/**
 * knows
 *
 * The most generic bi-directional social/work relation.
 *
 * http://schema.org/knows
 */
var knows = 'http://schema.org/knows';
/**
 * landlord
 *
 * A sub property of participant. The owner of the real estate property.
 *
 * http://schema.org/landlord
 */
var landlord = 'http://schema.org/landlord';
/**
 * language
 *
 * A sub property of instrument. The language used on this action.
 *
 * http://schema.org/language
 */
var language = 'http://schema.org/language';
/**
 * lastReviewed
 *
 * Date on which the content on this web page was last reviewed for accuracy and/or completeness.
 *
 * http://schema.org/lastReviewed
 */
var lastReviewed = 'http://schema.org/lastReviewed';
/**
 * latitude
 *
 * The latitude of a location. For example <code>37.42242</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>).
 *
 * http://schema.org/latitude
 */
var latitude = 'http://schema.org/latitude';
/**
 * learningResourceType
 *
 * The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
 *
 * http://schema.org/learningResourceType
 */
var learningResourceType = 'http://schema.org/learningResourceType';
/**
 * legalName
 *
 * The official name of the organization, e.g. the registered company name.
 *
 * http://schema.org/legalName
 */
var legalName = 'http://schema.org/legalName';
/**
 * leiCode
 *
 * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
 *
 * http://schema.org/leiCode
 */
var leiCode = 'http://schema.org/leiCode';
/**
 * lender
 *
 * A sub property of participant. The person that lends the object being borrowed.
 *
 * http://schema.org/lender
 */
var lender = 'http://schema.org/lender';
/**
 * lesser
 *
 * This ordering relation for qualitative values indicates that the subject is lesser than the object.
 *
 * http://schema.org/lesser
 */
var lesser = 'http://schema.org/lesser';
/**
 * lesserOrEqual
 *
 * This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
 *
 * http://schema.org/lesserOrEqual
 */
var lesserOrEqual = 'http://schema.org/lesserOrEqual';
/**
 * license
 *
 * A license document that applies to this content, typically indicated by URL.
 *
 * http://schema.org/license
 */
var license = 'http://schema.org/license';
/**
 * line
 *
 * A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.
 *
 * http://schema.org/line
 */
var line = 'http://schema.org/line';
/**
 * liveBlogUpdate
 *
 * An update to the LiveBlog.
 *
 * http://schema.org/liveBlogUpdate
 */
var liveBlogUpdate = 'http://schema.org/liveBlogUpdate';
/**
 * loanTerm
 *
 * The duration of the loan or credit agreement.
 *
 * http://schema.org/loanTerm
 */
var loanTerm = 'http://schema.org/loanTerm';
/**
 * locationCreated
 *
 * The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
 *
 * http://schema.org/locationCreated
 */
var locationCreated = 'http://schema.org/locationCreated';
/**
 * lodgingUnitDescription
 *
 * A full description of the lodging unit.
 *
 * http://schema.org/lodgingUnitDescription
 */
var lodgingUnitDescription = 'http://schema.org/lodgingUnitDescription';
/**
 * lodgingUnitType
 *
 * Textual description of the unit type (including suite vs. room, size of bed, etc.).
 *
 * http://schema.org/lodgingUnitType
 */
var lodgingUnitType = 'http://schema.org/lodgingUnitType';
/**
 * logo
 *
 * An associated logo.
 *
 * http://schema.org/logo
 */
var logo = 'http://schema.org/logo';
/**
 * longitude
 *
 * The longitude of a location. For example <code>-122.08585</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>).
 *
 * http://schema.org/longitude
 */
var longitude = 'http://schema.org/longitude';
/**
 * loser
 *
 * A sub property of participant. The loser of the action.
 *
 * http://schema.org/loser
 */
var loser = 'http://schema.org/loser';
/**
 * lowPrice
 *
 * The lowest price of all offers available.<br/><br/>
 *
 * Usage guidelines:<br/><br/>
 *
 * <ul>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * </ul>
 *
 *
 * http://schema.org/lowPrice
 */
var lowPrice = 'http://schema.org/lowPrice';
/**
 * lyricist
 *
 * The person who wrote the words.
 *
 * http://schema.org/lyricist
 */
var lyricist = 'http://schema.org/lyricist';
/**
 * lyrics
 *
 * The words in the song.
 *
 * http://schema.org/lyrics
 */
var lyrics = 'http://schema.org/lyrics';
/**
 * mainContentOfPage
 *
 * Indicates if this web page element is the main subject of the page.
 *
 * http://schema.org/mainContentOfPage
 */
var mainContentOfPage = 'http://schema.org/mainContentOfPage';
/**
 * manufacturer
 *
 * The manufacturer of the product.
 *
 * http://schema.org/manufacturer
 */
var manufacturer = 'http://schema.org/manufacturer';
/**
 * map
 *
 * A URL to a map of the place.
 *
 * http://schema.org/map
 */
var map = 'http://schema.org/map';
/**
 * mapType
 *
 * Indicates the kind of Map, from the MapCategoryType Enumeration.
 *
 * http://schema.org/mapType
 */
var mapType = 'http://schema.org/mapType';
/**
 * maps
 *
 * A URL to a map of the place.
 *
 * http://schema.org/maps
 */
var maps = 'http://schema.org/maps';
/**
 * maxPrice
 *
 * The highest price if the price is a range.
 *
 * http://schema.org/maxPrice
 */
var maxPrice = 'http://schema.org/maxPrice';
/**
 * maxValue
 *
 * The upper value of some characteristic or property.
 *
 * http://schema.org/maxValue
 */
var maxValue = 'http://schema.org/maxValue';
/**
 * maximumAttendeeCapacity
 *
 * The total number of individuals that may attend an event or venue.
 *
 * http://schema.org/maximumAttendeeCapacity
 */
var maximumAttendeeCapacity = 'http://schema.org/maximumAttendeeCapacity';
/**
 * mealService
 *
 * Description of the meals that will be provided or available for purchase.
 *
 * http://schema.org/mealService
 */
var mealService = 'http://schema.org/mealService';
/**
 * median
 *
 * The median value.
 *
 * http://schema.org/median
 */
var median = 'http://schema.org/median';
/**
 * members
 *
 * A member of this organization.
 *
 * http://schema.org/members
 */
var members = 'http://schema.org/members';
/**
 * membershipNumber
 *
 * A unique identifier for the membership.
 *
 * http://schema.org/membershipNumber
 */
var membershipNumber = 'http://schema.org/membershipNumber';
/**
 * memoryRequirements
 *
 * Minimum memory requirements.
 *
 * http://schema.org/memoryRequirements
 */
var memoryRequirements = 'http://schema.org/memoryRequirements';
/**
 * mentions
 *
 * Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
 *
 * http://schema.org/mentions
 */
var mentions = 'http://schema.org/mentions';
/**
 * menu
 *
 * Either the actual menu as a structured representation, as text, or a URL of the menu.
 *
 * http://schema.org/menu
 */
var menu = 'http://schema.org/menu';
/**
 * menuAddOn
 *
 * Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.
 *
 * http://schema.org/menuAddOn
 */
var menuAddOn = 'http://schema.org/menuAddOn';
/**
 * merchant
 *
 * 'merchant' is an out-dated term for 'seller'.
 *
 * http://schema.org/merchant
 */
var merchant = 'http://schema.org/merchant';
/**
 * messageAttachment
 *
 * A CreativeWork attached to the message.
 *
 * http://schema.org/messageAttachment
 */
var messageAttachment = 'http://schema.org/messageAttachment';
/**
 * mileageFromOdometer
 *
 * The total distance travelled by the particular vehicle since its initial production, as read from its odometer.<br/><br/>
 *
 * Typical unit code(s): KMT for kilometers, SMI for statute miles
 *
 * http://schema.org/mileageFromOdometer
 */
var mileageFromOdometer = 'http://schema.org/mileageFromOdometer';
/**
 * minPrice
 *
 * The lowest price if the price is a range.
 *
 * http://schema.org/minPrice
 */
var minPrice = 'http://schema.org/minPrice';
/**
 * minValue
 *
 * The lower value of some characteristic or property.
 *
 * http://schema.org/minValue
 */
var minValue = 'http://schema.org/minValue';
/**
 * minimumPaymentDue
 *
 * The minimum payment required at this time.
 *
 * http://schema.org/minimumPaymentDue
 */
var minimumPaymentDue = 'http://schema.org/minimumPaymentDue';
/**
 * model
 *
 * The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
 *
 * http://schema.org/model
 */
var model = 'http://schema.org/model';
/**
 * modifiedTime
 *
 * The date and time the reservation was modified.
 *
 * http://schema.org/modifiedTime
 */
var modifiedTime = 'http://schema.org/modifiedTime';
/**
 * mpn
 *
 * The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
 *
 * http://schema.org/mpn
 */
var mpn = 'http://schema.org/mpn';
/**
 * multipleValues
 *
 * Whether multiple values are allowed for the property.  Default is false.
 *
 * http://schema.org/multipleValues
 */
var multipleValues = 'http://schema.org/multipleValues';
/**
 * musicArrangement
 *
 * An arrangement derived from the composition.
 *
 * http://schema.org/musicArrangement
 */
var musicArrangement = 'http://schema.org/musicArrangement';
/**
 * musicBy
 *
 * The composer of the soundtrack.
 *
 * http://schema.org/musicBy
 */
var musicBy = 'http://schema.org/musicBy';
/**
 * musicCompositionForm
 *
 * The type of composition (e.g. overture, sonata, symphony, etc.).
 *
 * http://schema.org/musicCompositionForm
 */
var musicCompositionForm = 'http://schema.org/musicCompositionForm';
/**
 * musicGroupMember
 *
 * A member of a music group&#x2014;for example, John, Paul, George, or Ringo.
 *
 * http://schema.org/musicGroupMember
 */
var musicGroupMember = 'http://schema.org/musicGroupMember';
/**
 * musicReleaseFormat
 *
 * Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).
 *
 * http://schema.org/musicReleaseFormat
 */
var musicReleaseFormat = 'http://schema.org/musicReleaseFormat';
/**
 * musicalKey
 *
 * The key, mode, or scale this composition uses.
 *
 * http://schema.org/musicalKey
 */
var musicalKey = 'http://schema.org/musicalKey';
/**
 * naics
 *
 * The North American Industry Classification System (NAICS) code for a particular organization or business person.
 *
 * http://schema.org/naics
 */
var naics = 'http://schema.org/naics';
/**
 * name
 *
 * The name of the item.
 *
 * http://schema.org/name
 */
var name = 'http://schema.org/name';
/**
 * namedPosition
 *
 * A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.
 *
 * http://schema.org/namedPosition
 */
var namedPosition = 'http://schema.org/namedPosition';
/**
 * nationality
 *
 * Nationality of the person.
 *
 * http://schema.org/nationality
 */
var nationality = 'http://schema.org/nationality';
/**
 * netWorth
 *
 * The total financial value of the person as calculated by subtracting assets from liabilities.
 *
 * http://schema.org/netWorth
 */
var netWorth = 'http://schema.org/netWorth';
/**
 * nextItem
 *
 * A link to the ListItem that follows the current one.
 *
 * http://schema.org/nextItem
 */
var nextItem = 'http://schema.org/nextItem';
/**
 * nonEqual
 *
 * This ordering relation for qualitative values indicates that the subject is not equal to the object.
 *
 * http://schema.org/nonEqual
 */
var nonEqual = 'http://schema.org/nonEqual';
/**
 * numAdults
 *
 * The number of adults staying in the unit.
 *
 * http://schema.org/numAdults
 */
var numAdults = 'http://schema.org/numAdults';
/**
 * numChildren
 *
 * The number of children staying in the unit.
 *
 * http://schema.org/numChildren
 */
var numChildren = 'http://schema.org/numChildren';
/**
 * numTracks
 *
 * The number of tracks in this album or playlist.
 *
 * http://schema.org/numTracks
 */
var numTracks = 'http://schema.org/numTracks';
/**
 * numberOfAirbags
 *
 * The number or type of airbags in the vehicle.
 *
 * http://schema.org/numberOfAirbags
 */
var numberOfAirbags = 'http://schema.org/numberOfAirbags';
/**
 * numberOfAxles
 *
 * The number of axles.<br/><br/>
 *
 * Typical unit code(s): C62
 *
 * http://schema.org/numberOfAxles
 */
var numberOfAxles = 'http://schema.org/numberOfAxles';
/**
 * numberOfBeds
 *
 * The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.
 *
 * http://schema.org/numberOfBeds
 */
var numberOfBeds = 'http://schema.org/numberOfBeds';
/**
 * numberOfDoors
 *
 * The number of doors.<br/><br/>
 *
 * Typical unit code(s): C62
 *
 * http://schema.org/numberOfDoors
 */
var numberOfDoors = 'http://schema.org/numberOfDoors';
/**
 * numberOfEmployees
 *
 * The number of employees in an organization e.g. business.
 *
 * http://schema.org/numberOfEmployees
 */
var numberOfEmployees = 'http://schema.org/numberOfEmployees';
/**
 * numberOfEpisodes
 *
 * The number of episodes in this season or series.
 *
 * http://schema.org/numberOfEpisodes
 */
var numberOfEpisodes = 'http://schema.org/numberOfEpisodes';
/**
 * numberOfForwardGears
 *
 * The total number of forward gears available for the transmission system of the vehicle.<br/><br/>
 *
 * Typical unit code(s): C62
 *
 * http://schema.org/numberOfForwardGears
 */
var numberOfForwardGears = 'http://schema.org/numberOfForwardGears';
/**
 * numberOfItems
 *
 * The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.
 *
 * http://schema.org/numberOfItems
 */
var numberOfItems = 'http://schema.org/numberOfItems';
/**
 * numberOfPages
 *
 * The number of pages in the book.
 *
 * http://schema.org/numberOfPages
 */
var numberOfPages = 'http://schema.org/numberOfPages';
/**
 * numberOfPlayers
 *
 * Indicate how many people can play this game (minimum, maximum, or range).
 *
 * http://schema.org/numberOfPlayers
 */
var numberOfPlayers = 'http://schema.org/numberOfPlayers';
/**
 * numberOfPreviousOwners
 *
 * The number of owners of the vehicle, including the current one.<br/><br/>
 *
 * Typical unit code(s): C62
 *
 * http://schema.org/numberOfPreviousOwners
 */
var numberOfPreviousOwners = 'http://schema.org/numberOfPreviousOwners';
/**
 * numberOfRooms
 *
 * The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
 * Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.
 *
 * http://schema.org/numberOfRooms
 */
var numberOfRooms = 'http://schema.org/numberOfRooms';
/**
 * numberOfSeasons
 *
 * The number of seasons in this series.
 *
 * http://schema.org/numberOfSeasons
 */
var numberOfSeasons = 'http://schema.org/numberOfSeasons';
/**
 * numberedPosition
 *
 * A number associated with a role in an organization, for example, the number on an athlete's jersey.
 *
 * http://schema.org/numberedPosition
 */
var numberedPosition = 'http://schema.org/numberedPosition';
/**
 * nutrition
 *
 * Nutrition information about the recipe or menu item.
 *
 * http://schema.org/nutrition
 */
var nutrition = 'http://schema.org/nutrition';
/**
 * occupancy
 *
 * The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
 * Typical unit code(s): C62 for person
 *
 * http://schema.org/occupancy
 */
var occupancy = 'http://schema.org/occupancy';
/**
 * occupationLocation
 *
 * The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.
 *
 * http://schema.org/occupationLocation
 */
var occupationLocation = 'http://schema.org/occupationLocation';
/**
 * occupationalCategory
 *
 * A category describing the job, preferably using a term from a taxonomy such as <a href="http://www.onetcenter.org/taxonomy.html">BLS O*NET-SOC</a>, <a href="https://www.ilo.org/public/english/bureau/stat/isco/isco08/">ISCO-08</a> or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.<br/><br/>
 *
 * Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.
 *
 * http://schema.org/occupationalCategory
 */
var occupationalCategory = 'http://schema.org/occupationalCategory';
/**
 * offerCount
 *
 * The number of offers for the product.
 *
 * http://schema.org/offerCount
 */
var offerCount = 'http://schema.org/offerCount';
/**
 * offers
 *
 * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.
 *
 * http://schema.org/offers
 */
var offers = 'http://schema.org/offers';
/**
 * openingHours
 *
 * The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>
 *
 * <ul>
 * <li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>
 * <li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>
 * <li>Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>
 * <li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>
 * </ul>
 *
 *
 * http://schema.org/openingHours
 */
var openingHours = 'http://schema.org/openingHours';
/**
 * openingHoursSpecification
 *
 * The opening hours of a certain place.
 *
 * http://schema.org/openingHoursSpecification
 */
var openingHoursSpecification = 'http://schema.org/openingHoursSpecification';
/**
 * opens
 *
 * The opening hour of the place or service on the given day(s) of the week.
 *
 * http://schema.org/opens
 */
var opens = 'http://schema.org/opens';
/**
 * operatingSystem
 *
 * Operating systems supported (Windows 7, OSX 10.6, Android 1.6).
 *
 * http://schema.org/operatingSystem
 */
var operatingSystem = 'http://schema.org/operatingSystem';
/**
 * opponent
 *
 * A sub property of participant. The opponent on this action.
 *
 * http://schema.org/opponent
 */
var opponent = 'http://schema.org/opponent';
/**
 * option
 *
 * A sub property of object. The options subject to this action.
 *
 * http://schema.org/option
 */
var option = 'http://schema.org/option';
/**
 * orderDate
 *
 * Date order was placed.
 *
 * http://schema.org/orderDate
 */
var orderDate = 'http://schema.org/orderDate';
/**
 * orderDelivery
 *
 * The delivery of the parcel related to this order or order item.
 *
 * http://schema.org/orderDelivery
 */
var orderDelivery = 'http://schema.org/orderDelivery';
/**
 * orderItemNumber
 *
 * The identifier of the order item.
 *
 * http://schema.org/orderItemNumber
 */
var orderItemNumber = 'http://schema.org/orderItemNumber';
/**
 * orderItemStatus
 *
 * The current status of the order item.
 *
 * http://schema.org/orderItemStatus
 */
var orderItemStatus = 'http://schema.org/orderItemStatus';
/**
 * orderNumber
 *
 * The identifier of the transaction.
 *
 * http://schema.org/orderNumber
 */
var orderNumber = 'http://schema.org/orderNumber';
/**
 * orderQuantity
 *
 * The number of the item ordered. If the property is not set, assume the quantity is one.
 *
 * http://schema.org/orderQuantity
 */
var orderQuantity = 'http://schema.org/orderQuantity';
/**
 * orderStatus
 *
 * The current status of the order.
 *
 * http://schema.org/orderStatus
 */
var orderStatus = 'http://schema.org/orderStatus';
/**
 * orderedItem
 *
 * The item ordered.
 *
 * http://schema.org/orderedItem
 */
var orderedItem = 'http://schema.org/orderedItem';
/**
 * organizer
 *
 * An organizer of an Event.
 *
 * http://schema.org/organizer
 */
var organizer = 'http://schema.org/organizer';
/**
 * originAddress
 *
 * Shipper's address.
 *
 * http://schema.org/originAddress
 */
var originAddress = 'http://schema.org/originAddress';
/**
 * ownedFrom
 *
 * The date and time of obtaining the product.
 *
 * http://schema.org/ownedFrom
 */
var ownedFrom = 'http://schema.org/ownedFrom';
/**
 * ownedThrough
 *
 * The date and time of giving up ownership on the product.
 *
 * http://schema.org/ownedThrough
 */
var ownedThrough = 'http://schema.org/ownedThrough';
/**
 * owns
 *
 * Products owned by the organization or person.
 *
 * http://schema.org/owns
 */
var owns = 'http://schema.org/owns';
/**
 * pageEnd
 *
 * The page on which the work ends; for example "138" or "xvi".
 *
 * http://schema.org/pageEnd
 */
var pageEnd = 'http://schema.org/pageEnd';
/**
 * pageStart
 *
 * The page on which the work starts; for example "135" or "xiii".
 *
 * http://schema.org/pageStart
 */
var pageStart = 'http://schema.org/pageStart';
/**
 * pagination
 *
 * Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
 *
 * http://schema.org/pagination
 */
var pagination = 'http://schema.org/pagination';
/**
 * parentItem
 *
 * The parent of a question, answer or item in general.
 *
 * http://schema.org/parentItem
 */
var parentItem = 'http://schema.org/parentItem';
/**
 * parentService
 *
 * A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.
 *
 * http://schema.org/parentService
 */
var parentService = 'http://schema.org/parentService';
/**
 * parents
 *
 * A parents of the person.
 *
 * http://schema.org/parents
 */
var parents = 'http://schema.org/parents';
/**
 * partOfEpisode
 *
 * The episode to which this clip belongs.
 *
 * http://schema.org/partOfEpisode
 */
var partOfEpisode = 'http://schema.org/partOfEpisode';
/**
 * partOfInvoice
 *
 * The order is being paid as part of the referenced Invoice.
 *
 * http://schema.org/partOfInvoice
 */
var partOfInvoice = 'http://schema.org/partOfInvoice';
/**
 * partOfOrder
 *
 * The overall order the items in this delivery were included in.
 *
 * http://schema.org/partOfOrder
 */
var partOfOrder = 'http://schema.org/partOfOrder';
/**
 * partOfSeason
 *
 * The season to which this episode belongs.
 *
 * http://schema.org/partOfSeason
 */
var partOfSeason = 'http://schema.org/partOfSeason';
/**
 * partOfTVSeries
 *
 * The TV series to which this episode or season belongs.
 *
 * http://schema.org/partOfTVSeries
 */
var partOfTVSeries = 'http://schema.org/partOfTVSeries';
/**
 * partySize
 *
 * Number of people the reservation should accommodate.
 *
 * http://schema.org/partySize
 */
var partySize = 'http://schema.org/partySize';
/**
 * passengerPriorityStatus
 *
 * The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).
 *
 * http://schema.org/passengerPriorityStatus
 */
var passengerPriorityStatus = 'http://schema.org/passengerPriorityStatus';
/**
 * passengerSequenceNumber
 *
 * The passenger's sequence number as assigned by the airline.
 *
 * http://schema.org/passengerSequenceNumber
 */
var passengerSequenceNumber = 'http://schema.org/passengerSequenceNumber';
/**
 * paymentAccepted
 *
 * Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
 *
 * http://schema.org/paymentAccepted
 */
var paymentAccepted = 'http://schema.org/paymentAccepted';
/**
 * paymentDue
 *
 * The date that payment is due.
 *
 * http://schema.org/paymentDue
 */
var paymentDue = 'http://schema.org/paymentDue';
/**
 * paymentMethod
 *
 * The name of the credit card or other method of payment for the order.
 *
 * http://schema.org/paymentMethod
 */
var paymentMethod = 'http://schema.org/paymentMethod';
/**
 * paymentMethodId
 *
 * An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
 *
 * http://schema.org/paymentMethodId
 */
var paymentMethodId = 'http://schema.org/paymentMethodId';
/**
 * paymentStatus
 *
 * The status of payment; whether the invoice has been paid or not.
 *
 * http://schema.org/paymentStatus
 */
var paymentStatus = 'http://schema.org/paymentStatus';
/**
 * paymentUrl
 *
 * The URL for sending a payment.
 *
 * http://schema.org/paymentUrl
 */
var paymentUrl = 'http://schema.org/paymentUrl';
/**
 * percentile10
 *
 * The 10th percentile value.
 *
 * http://schema.org/percentile10
 */
var percentile10 = 'http://schema.org/percentile10';
/**
 * percentile25
 *
 * The 25th percentile value.
 *
 * http://schema.org/percentile25
 */
var percentile25 = 'http://schema.org/percentile25';
/**
 * percentile75
 *
 * The 75th percentile value.
 *
 * http://schema.org/percentile75
 */
var percentile75 = 'http://schema.org/percentile75';
/**
 * percentile90
 *
 * The 90th percentile value.
 *
 * http://schema.org/percentile90
 */
var percentile90 = 'http://schema.org/percentile90';
/**
 * performerIn
 *
 * Event that this person is a performer or participant in.
 *
 * http://schema.org/performerIn
 */
var performerIn = 'http://schema.org/performerIn';
/**
 * performers
 *
 * The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.
 *
 * http://schema.org/performers
 */
var performers = 'http://schema.org/performers';
/**
 * permissionType
 *
 * The type of permission granted the person, organization, or audience.
 *
 * http://schema.org/permissionType
 */
var permissionType = 'http://schema.org/permissionType';
/**
 * permissions
 *
 * Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
 *
 * http://schema.org/permissions
 */
var permissions = 'http://schema.org/permissions';
/**
 * permitAudience
 *
 * The target audience for this permit.
 *
 * http://schema.org/permitAudience
 */
var permitAudience = 'http://schema.org/permitAudience';
/**
 * permittedUsage
 *
 * Indications regarding the permitted usage of the accommodation.
 *
 * http://schema.org/permittedUsage
 */
var permittedUsage = 'http://schema.org/permittedUsage';
/**
 * petsAllowed
 *
 * Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.
 *
 * http://schema.org/petsAllowed
 */
var petsAllowed = 'http://schema.org/petsAllowed';
/**
 * photos
 *
 * Photographs of this place.
 *
 * http://schema.org/photos
 */
var photos = 'http://schema.org/photos';
/**
 * pickupLocation
 *
 * Where a taxi will pick up a passenger or a rental car can be picked up.
 *
 * http://schema.org/pickupLocation
 */
var pickupLocation = 'http://schema.org/pickupLocation';
/**
 * pickupTime
 *
 * When a taxi will pickup a passenger or a rental car can be picked up.
 *
 * http://schema.org/pickupTime
 */
var pickupTime = 'http://schema.org/pickupTime';
/**
 * playMode
 *
 * Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
 *
 * http://schema.org/playMode
 */
var playMode = 'http://schema.org/playMode';
/**
 * playerType
 *
 * Player type required&#x2014;for example, Flash or Silverlight.
 *
 * http://schema.org/playerType
 */
var playerType = 'http://schema.org/playerType';
/**
 * playersOnline
 *
 * Number of players on the server.
 *
 * http://schema.org/playersOnline
 */
var playersOnline = 'http://schema.org/playersOnline';
/**
 * polygon
 *
 * A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
 *
 * http://schema.org/polygon
 */
var polygon = 'http://schema.org/polygon';
/**
 * postOfficeBoxNumber
 *
 * The post office box number for PO box addresses.
 *
 * http://schema.org/postOfficeBoxNumber
 */
var postOfficeBoxNumber = 'http://schema.org/postOfficeBoxNumber';
/**
 * postalCode
 *
 * The postal code. For example, 94043.
 *
 * http://schema.org/postalCode
 */
var postalCode = 'http://schema.org/postalCode';
/**
 * potentialAction
 *
 * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
 *
 * http://schema.org/potentialAction
 */
var potentialAction = 'http://schema.org/potentialAction';
/**
 * predecessorOf
 *
 * A pointer from a previous, often discontinued variant of the product to its newer variant.
 *
 * http://schema.org/predecessorOf
 */
var predecessorOf = 'http://schema.org/predecessorOf';
/**
 * prepTime
 *
 * The length of time it takes to prepare the items to be used in instructions or a direction, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
 *
 * http://schema.org/prepTime
 */
var prepTime = 'http://schema.org/prepTime';
/**
 * previousItem
 *
 * A link to the ListItem that preceeds the current one.
 *
 * http://schema.org/previousItem
 */
var previousItem = 'http://schema.org/previousItem';
/**
 * previousStartDate
 *
 * Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
 *
 * http://schema.org/previousStartDate
 */
var previousStartDate = 'http://schema.org/previousStartDate';
/**
 * price
 *
 * The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>
 *
 * Usage guidelines:<br/><br/>
 *
 * <ul>
 * <li>Use the <a class="localLink" href="http://schema.org/priceCurrency">priceCurrency</a> property (with standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR") instead of including <a href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous symbols</a> such as '$' in the value.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * <li>Note that both <a href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a> and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * </ul>
 *
 *
 * http://schema.org/price
 */
var price = 'http://schema.org/price';
/**
 * priceComponent
 *
 * This property links to all <a class="localLink" href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a> nodes that apply in parallel for the <a class="localLink" href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a> node.
 *
 * http://schema.org/priceComponent
 */
var priceComponent = 'http://schema.org/priceComponent';
/**
 * priceCurrency
 *
 * The currency of the price, or a price component when attached to <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> and its subtypes.<br/><br/>
 *
 * Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
 *
 * http://schema.org/priceCurrency
 */
var priceCurrency = 'http://schema.org/priceCurrency';
/**
 * priceRange
 *
 * The price range of the business, for example <code>$$$</code>.
 *
 * http://schema.org/priceRange
 */
var priceRange = 'http://schema.org/priceRange';
/**
 * priceSpecification
 *
 * One or more detailed price specifications, indicating the unit price and delivery or payment charges.
 *
 * http://schema.org/priceSpecification
 */
var priceSpecification = 'http://schema.org/priceSpecification';
/**
 * priceType
 *
 * A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry.
 *
 * http://schema.org/priceType
 */
var priceType = 'http://schema.org/priceType';
/**
 * priceValidUntil
 *
 * The date after which the price is no longer available.
 *
 * http://schema.org/priceValidUntil
 */
var priceValidUntil = 'http://schema.org/priceValidUntil';
/**
 * primaryImageOfPage
 *
 * Indicates the main image on the page.
 *
 * http://schema.org/primaryImageOfPage
 */
var primaryImageOfPage = 'http://schema.org/primaryImageOfPage';
/**
 * printColumn
 *
 * The number of the column in which the NewsArticle appears in the print edition.
 *
 * http://schema.org/printColumn
 */
var printColumn = 'http://schema.org/printColumn';
/**
 * printEdition
 *
 * The edition of the print product in which the NewsArticle appears.
 *
 * http://schema.org/printEdition
 */
var printEdition = 'http://schema.org/printEdition';
/**
 * printPage
 *
 * If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
 *
 * http://schema.org/printPage
 */
var printPage = 'http://schema.org/printPage';
/**
 * printSection
 *
 * If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
 *
 * http://schema.org/printSection
 */
var printSection = 'http://schema.org/printSection';
/**
 * processingTime
 *
 * Estimated processing time for the service using this channel.
 *
 * http://schema.org/processingTime
 */
var processingTime = 'http://schema.org/processingTime';
/**
 * processorRequirements
 *
 * Processor architecture required to run the application (e.g. IA64).
 *
 * http://schema.org/processorRequirements
 */
var processorRequirements = 'http://schema.org/processorRequirements';
/**
 * producer
 *
 * The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).
 *
 * http://schema.org/producer
 */
var producer = 'http://schema.org/producer';
/**
 * produces
 *
 * The tangible thing generated by the service, e.g. a passport, permit, etc.
 *
 * http://schema.org/produces
 */
var produces = 'http://schema.org/produces';
/**
 * productID
 *
 * The product identifier, such as ISBN. For example: <code>meta itemprop="productID" content="isbn:123-456-789"</code>.
 *
 * http://schema.org/productID
 */
var productID = 'http://schema.org/productID';
/**
 * productSupported
 *
 * The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").
 *
 * http://schema.org/productSupported
 */
var productSupported = 'http://schema.org/productSupported';
/**
 * productionCompany
 *
 * The production company or studio responsible for the item e.g. series, video game, episode etc.
 *
 * http://schema.org/productionCompany
 */
var productionCompany = 'http://schema.org/productionCompany';
/**
 * productionDate
 *
 * The date of production of the item, e.g. vehicle.
 *
 * http://schema.org/productionDate
 */
var productionDate = 'http://schema.org/productionDate';
/**
 * proficiencyLevel
 *
 * Proficiency needed for this content; expected values: 'Beginner', 'Expert'.
 *
 * http://schema.org/proficiencyLevel
 */
var proficiencyLevel = 'http://schema.org/proficiencyLevel';
/**
 * programMembershipUsed
 *
 * Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.
 *
 * http://schema.org/programMembershipUsed
 */
var programMembershipUsed = 'http://schema.org/programMembershipUsed';
/**
 * programName
 *
 * The program providing the membership.
 *
 * http://schema.org/programName
 */
var programName = 'http://schema.org/programName';
/**
 * programmingLanguage
 *
 * The computer programming language.
 *
 * http://schema.org/programmingLanguage
 */
var programmingLanguage = 'http://schema.org/programmingLanguage';
/**
 * programmingModel
 *
 * Indicates whether API is managed or unmanaged.
 *
 * http://schema.org/programmingModel
 */
var programmingModel = 'http://schema.org/programmingModel';
/**
 * propertyID
 *
 * A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
 * (1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)
 * a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
 * Standards bodies should promote a standard prefix for the identifiers of properties from their standards.
 *
 * http://schema.org/propertyID
 */
var propertyID = 'http://schema.org/propertyID';
/**
 * proteinContent
 *
 * The number of grams of protein.
 *
 * http://schema.org/proteinContent
 */
var proteinContent = 'http://schema.org/proteinContent';
/**
 * providerMobility
 *
 * Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
 *
 * http://schema.org/providerMobility
 */
var providerMobility = 'http://schema.org/providerMobility';
/**
 * providesService
 *
 * The service provided by this channel.
 *
 * http://schema.org/providesService
 */
var providesService = 'http://schema.org/providesService';
/**
 * publicAccess
 *
 * A flag to signal that the <a class="localLink" href="http://schema.org/Place">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value
 *
 * http://schema.org/publicAccess
 */
var publicAccess = 'http://schema.org/publicAccess';
/**
 * publication
 *
 * A publication event associated with the item.
 *
 * http://schema.org/publication
 */
var publication = 'http://schema.org/publication';
/**
 * publishedOn
 *
 * A broadcast service associated with the publication event.
 *
 * http://schema.org/publishedOn
 */
var publishedOn = 'http://schema.org/publishedOn';
/**
 * publisher
 *
 * The publisher of the creative work.
 *
 * http://schema.org/publisher
 */
var publisher = 'http://schema.org/publisher';
/**
 * publishingPrinciples
 *
 * The publishingPrinciples property indicates (typically via <a class="localLink" href="http://schema.org/URL">URL</a>) a document describing the editorial principles of an <a class="localLink" href="http://schema.org/Organization">Organization</a> (or individual e.g. a <a class="localLink" href="http://schema.org/Person">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>
 *
 * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class="localLink" href="http://schema.org/funder">funder</a>) can be expressed using schema.org terminology.
 *
 * http://schema.org/publishingPrinciples
 */
var publishingPrinciples = 'http://schema.org/publishingPrinciples';
/**
 * purchaseDate
 *
 * The date the item e.g. vehicle was purchased by the current owner.
 *
 * http://schema.org/purchaseDate
 */
var purchaseDate = 'http://schema.org/purchaseDate';
/**
 * query
 *
 * A sub property of instrument. The query used on this action.
 *
 * http://schema.org/query
 */
var query = 'http://schema.org/query';
/**
 * quest
 *
 * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
 *
 * http://schema.org/quest
 */
var quest = 'http://schema.org/quest';
/**
 * question
 *
 * A sub property of object. A question.
 *
 * http://schema.org/question
 */
var question = 'http://schema.org/question';
/**
 * ratingCount
 *
 * The count of total number of ratings.
 *
 * http://schema.org/ratingCount
 */
var ratingCount = 'http://schema.org/ratingCount';
/**
 * ratingValue
 *
 * The rating for the content.<br/><br/>
 *
 * Usage guidelines:<br/><br/>
 *
 * <ul>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * </ul>
 *
 *
 * http://schema.org/ratingValue
 */
var ratingValue = 'http://schema.org/ratingValue';
/**
 * readonlyValue
 *
 * Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
 *
 * http://schema.org/readonlyValue
 */
var readonlyValue = 'http://schema.org/readonlyValue';
/**
 * realEstateAgent
 *
 * A sub property of participant. The real estate agent involved in the action.
 *
 * http://schema.org/realEstateAgent
 */
var realEstateAgent = 'http://schema.org/realEstateAgent';
/**
 * recipe
 *
 * A sub property of instrument. The recipe/instructions used to perform the action.
 *
 * http://schema.org/recipe
 */
var recipe = 'http://schema.org/recipe';
/**
 * recipeCategory
 *
 * The category of the recipe—for example, appetizer, entree, etc.
 *
 * http://schema.org/recipeCategory
 */
var recipeCategory = 'http://schema.org/recipeCategory';
/**
 * recipeCuisine
 *
 * The cuisine of the recipe (for example, French or Ethiopian).
 *
 * http://schema.org/recipeCuisine
 */
var recipeCuisine = 'http://schema.org/recipeCuisine';
/**
 * recipeInstructions
 *
 * A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.
 *
 * http://schema.org/recipeInstructions
 */
var recipeInstructions = 'http://schema.org/recipeInstructions';
/**
 * recipeYield
 *
 * The quantity produced by the recipe (for example, number of people served, number of servings, etc).
 *
 * http://schema.org/recipeYield
 */
var recipeYield = 'http://schema.org/recipeYield';
/**
 * recordLabel
 *
 * The label that issued the release.
 *
 * http://schema.org/recordLabel
 */
var recordLabel = 'http://schema.org/recordLabel';
/**
 * referenceQuantity
 *
 * The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.
 *
 * http://schema.org/referenceQuantity
 */
var referenceQuantity = 'http://schema.org/referenceQuantity';
/**
 * referencesOrder
 *
 * The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.
 *
 * http://schema.org/referencesOrder
 */
var referencesOrder = 'http://schema.org/referencesOrder';
/**
 * regionsAllowed
 *
 * The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href="http://en.wikipedia.org/wiki/ISO_3166">ISO 3166 format</a>.
 *
 * http://schema.org/regionsAllowed
 */
var regionsAllowed = 'http://schema.org/regionsAllowed';
/**
 * relatedLink
 *
 * A link related to this web page, for example to other related web pages.
 *
 * http://schema.org/relatedLink
 */
var relatedLink = 'http://schema.org/relatedLink';
/**
 * relatedTo
 *
 * The most generic familial relation.
 *
 * http://schema.org/relatedTo
 */
var relatedTo = 'http://schema.org/relatedTo';
/**
 * releaseDate
 *
 * The release date of a product or product model. This can be used to distinguish the exact variant of a product.
 *
 * http://schema.org/releaseDate
 */
var releaseDate = 'http://schema.org/releaseDate';
/**
 * releaseNotes
 *
 * Description of what changed in this version.
 *
 * http://schema.org/releaseNotes
 */
var releaseNotes = 'http://schema.org/releaseNotes';
/**
 * releasedEvent
 *
 * The place and time the release was issued, expressed as a PublicationEvent.
 *
 * http://schema.org/releasedEvent
 */
var releasedEvent = 'http://schema.org/releasedEvent';
/**
 * relevantOccupation
 *
 * The Occupation for the JobPosting.
 *
 * http://schema.org/relevantOccupation
 */
var relevantOccupation = 'http://schema.org/relevantOccupation';
/**
 * remainingAttendeeCapacity
 *
 * The number of attendee places for an event that remain unallocated.
 *
 * http://schema.org/remainingAttendeeCapacity
 */
var remainingAttendeeCapacity = 'http://schema.org/remainingAttendeeCapacity';
/**
 * replacee
 *
 * A sub property of object. The object that is being replaced.
 *
 * http://schema.org/replacee
 */
var replacee = 'http://schema.org/replacee';
/**
 * replacer
 *
 * A sub property of object. The object that replaces.
 *
 * http://schema.org/replacer
 */
var replacer = 'http://schema.org/replacer';
/**
 * replyToUrl
 *
 * The URL at which a reply may be posted to the specified UserComment.
 *
 * http://schema.org/replyToUrl
 */
var replyToUrl = 'http://schema.org/replyToUrl';
/**
 * reportNumber
 *
 * The number or other unique designator assigned to a Report by the publishing organization.
 *
 * http://schema.org/reportNumber
 */
var reportNumber = 'http://schema.org/reportNumber';
/**
 * representativeOfPage
 *
 * Indicates whether this image is representative of the content of the page.
 *
 * http://schema.org/representativeOfPage
 */
var representativeOfPage = 'http://schema.org/representativeOfPage';
/**
 * requiredCollateral
 *
 * Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)
 *
 * http://schema.org/requiredCollateral
 */
var requiredCollateral = 'http://schema.org/requiredCollateral';
/**
 * requiredGender
 *
 * Audiences defined by a person's gender.
 *
 * http://schema.org/requiredGender
 */
var requiredGender = 'http://schema.org/requiredGender';
/**
 * requiredMaxAge
 *
 * Audiences defined by a person's maximum age.
 *
 * http://schema.org/requiredMaxAge
 */
var requiredMaxAge = 'http://schema.org/requiredMaxAge';
/**
 * requiredMinAge
 *
 * Audiences defined by a person's minimum age.
 *
 * http://schema.org/requiredMinAge
 */
var requiredMinAge = 'http://schema.org/requiredMinAge';
/**
 * requiredQuantity
 *
 * The required quantity of the item(s).
 *
 * http://schema.org/requiredQuantity
 */
var requiredQuantity = 'http://schema.org/requiredQuantity';
/**
 * requirements
 *
 * Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
 *
 * http://schema.org/requirements
 */
var requirements = 'http://schema.org/requirements';
/**
 * requiresSubscription
 *
 * Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').
 *
 * http://schema.org/requiresSubscription
 */
var requiresSubscription = 'http://schema.org/requiresSubscription';
/**
 * reservationFor
 *
 * The thing -- flight, event, restaurant,etc. being reserved.
 *
 * http://schema.org/reservationFor
 */
var reservationFor = 'http://schema.org/reservationFor';
/**
 * reservationId
 *
 * A unique identifier for the reservation.
 *
 * http://schema.org/reservationId
 */
var reservationId = 'http://schema.org/reservationId';
/**
 * reservationStatus
 *
 * The current status of the reservation.
 *
 * http://schema.org/reservationStatus
 */
var reservationStatus = 'http://schema.org/reservationStatus';
/**
 * reservedTicket
 *
 * A ticket associated with the reservation.
 *
 * http://schema.org/reservedTicket
 */
var reservedTicket = 'http://schema.org/reservedTicket';
/**
 * responsibilities
 *
 * Responsibilities associated with this role or Occupation.
 *
 * http://schema.org/responsibilities
 */
var responsibilities = 'http://schema.org/responsibilities';
/**
 * resultComment
 *
 * A sub property of result. The Comment created or sent as a result of this action.
 *
 * http://schema.org/resultComment
 */
var resultComment = 'http://schema.org/resultComment';
/**
 * resultReview
 *
 * A sub property of result. The review that resulted in the performing of the action.
 *
 * http://schema.org/resultReview
 */
var resultReview = 'http://schema.org/resultReview';
/**
 * reviewAspect
 *
 * This Review or Rating is relevant to this part or facet of the itemReviewed.
 *
 * http://schema.org/reviewAspect
 */
var reviewAspect = 'http://schema.org/reviewAspect';
/**
 * reviewBody
 *
 * The actual body of the review.
 *
 * http://schema.org/reviewBody
 */
var reviewBody = 'http://schema.org/reviewBody';
/**
 * reviewCount
 *
 * The count of total number of reviews.
 *
 * http://schema.org/reviewCount
 */
var reviewCount = 'http://schema.org/reviewCount';
/**
 * reviewRating
 *
 * The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class="localLink" href="http://schema.org/aggregateRating">aggregateRating</a> property applies to the review itself, as a creative work.
 *
 * http://schema.org/reviewRating
 */
var reviewRating = 'http://schema.org/reviewRating';
/**
 * reviewedBy
 *
 * People or organizations that have reviewed the content on this web page for accuracy and/or completeness.
 *
 * http://schema.org/reviewedBy
 */
var reviewedBy = 'http://schema.org/reviewedBy';
/**
 * reviews
 *
 * Review of the item.
 *
 * http://schema.org/reviews
 */
var reviews = 'http://schema.org/reviews';
/**
 * rsvpResponse
 *
 * The response (yes, no, maybe) to the RSVP.
 *
 * http://schema.org/rsvpResponse
 */
var rsvpResponse = 'http://schema.org/rsvpResponse';
/**
 * runtime
 *
 * Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).
 *
 * http://schema.org/runtime
 */
var runtime = 'http://schema.org/runtime';
/**
 * salaryCurrency
 *
 * The currency (coded using <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for the main salary information in this job posting or for this employee.
 *
 * http://schema.org/salaryCurrency
 */
var salaryCurrency = 'http://schema.org/salaryCurrency';
/**
 * sameAs
 *
 * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
 *
 * http://schema.org/sameAs
 */
var sameAs = 'http://schema.org/sameAs';
/**
 * sampleType
 *
 * What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
 *
 * http://schema.org/sampleType
 */
var sampleType = 'http://schema.org/sampleType';
/**
 * saturatedFatContent
 *
 * The number of grams of saturated fat.
 *
 * http://schema.org/saturatedFatContent
 */
var saturatedFatContent = 'http://schema.org/saturatedFatContent';
/**
 * scheduledPaymentDate
 *
 * The date the invoice is scheduled to be paid.
 *
 * http://schema.org/scheduledPaymentDate
 */
var scheduledPaymentDate = 'http://schema.org/scheduledPaymentDate';
/**
 * scheduledTime
 *
 * The time the object is scheduled to.
 *
 * http://schema.org/scheduledTime
 */
var scheduledTime = 'http://schema.org/scheduledTime';
/**
 * schemaVersion
 *
 * Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.
 *
 * http://schema.org/schemaVersion
 */
var schemaVersion = 'http://schema.org/schemaVersion';
/**
 * screenCount
 *
 * The number of screens in the movie theater.
 *
 * http://schema.org/screenCount
 */
var screenCount = 'http://schema.org/screenCount';
/**
 * screenshot
 *
 * A link to a screenshot image of the app.
 *
 * http://schema.org/screenshot
 */
var screenshot = 'http://schema.org/screenshot';
/**
 * seasonNumber
 *
 * Position of the season within an ordered group of seasons.
 *
 * http://schema.org/seasonNumber
 */
var seasonNumber = 'http://schema.org/seasonNumber';
/**
 * seasons
 *
 * A season in a media series.
 *
 * http://schema.org/seasons
 */
var seasons = 'http://schema.org/seasons';
/**
 * seatNumber
 *
 * The location of the reserved seat (e.g., 27).
 *
 * http://schema.org/seatNumber
 */
var seatNumber = 'http://schema.org/seatNumber';
/**
 * seatRow
 *
 * The row location of the reserved seat (e.g., B).
 *
 * http://schema.org/seatRow
 */
var seatRow = 'http://schema.org/seatRow';
/**
 * seatSection
 *
 * The section location of the reserved seat (e.g. Orchestra).
 *
 * http://schema.org/seatSection
 */
var seatSection = 'http://schema.org/seatSection';
/**
 * seatingType
 *
 * The type/class of the seat.
 *
 * http://schema.org/seatingType
 */
var seatingType = 'http://schema.org/seatingType';
/**
 * securityScreening
 *
 * The type of security screening the passenger is subject to.
 *
 * http://schema.org/securityScreening
 */
var securityScreening = 'http://schema.org/securityScreening';
/**
 * seeks
 *
 * A pointer to products or services sought by the organization or person (demand).
 *
 * http://schema.org/seeks
 */
var seeks = 'http://schema.org/seeks';
/**
 * sender
 *
 * A sub property of participant. The participant who is at the sending end of the action.
 *
 * http://schema.org/sender
 */
var sender = 'http://schema.org/sender';
/**
 * serverStatus
 *
 * Status of a game server.
 *
 * http://schema.org/serverStatus
 */
var serverStatus = 'http://schema.org/serverStatus';
/**
 * servesCuisine
 *
 * The cuisine of the restaurant.
 *
 * http://schema.org/servesCuisine
 */
var servesCuisine = 'http://schema.org/servesCuisine';
/**
 * serviceAudience
 *
 * The audience eligible for this service.
 *
 * http://schema.org/serviceAudience
 */
var serviceAudience = 'http://schema.org/serviceAudience';
/**
 * serviceLocation
 *
 * The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
 *
 * http://schema.org/serviceLocation
 */
var serviceLocation = 'http://schema.org/serviceLocation';
/**
 * serviceOperator
 *
 * The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.
 *
 * http://schema.org/serviceOperator
 */
var serviceOperator = 'http://schema.org/serviceOperator';
/**
 * servicePhone
 *
 * The phone number to use to access the service.
 *
 * http://schema.org/servicePhone
 */
var servicePhone = 'http://schema.org/servicePhone';
/**
 * servicePostalAddress
 *
 * The address for accessing the service by mail.
 *
 * http://schema.org/servicePostalAddress
 */
var servicePostalAddress = 'http://schema.org/servicePostalAddress';
/**
 * serviceSmsNumber
 *
 * The number to access the service by text message.
 *
 * http://schema.org/serviceSmsNumber
 */
var serviceSmsNumber = 'http://schema.org/serviceSmsNumber';
/**
 * serviceType
 *
 * The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
 *
 * http://schema.org/serviceType
 */
var serviceType = 'http://schema.org/serviceType';
/**
 * serviceUrl
 *
 * The website to access the service.
 *
 * http://schema.org/serviceUrl
 */
var serviceUrl = 'http://schema.org/serviceUrl';
/**
 * servingSize
 *
 * The serving size, in terms of the number of volume or mass.
 *
 * http://schema.org/servingSize
 */
var servingSize = 'http://schema.org/servingSize';
/**
 * sharedContent
 *
 * A CreativeWork such as an image, video, or audio clip shared as part of this posting.
 *
 * http://schema.org/sharedContent
 */
var sharedContent = 'http://schema.org/sharedContent';
/**
 * siblings
 *
 * A sibling of the person.
 *
 * http://schema.org/siblings
 */
var siblings = 'http://schema.org/siblings';
/**
 * significantLinks
 *
 * The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
 *
 * http://schema.org/significantLinks
 */
var significantLinks = 'http://schema.org/significantLinks';
/**
 * skills
 *
 * Skills required to fulfill this role or in this Occupation.
 *
 * http://schema.org/skills
 */
var skills = 'http://schema.org/skills';
/**
 * sku
 *
 * The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
 *
 * http://schema.org/sku
 */
var sku = 'http://schema.org/sku';
/**
 * slogan
 *
 * A slogan or motto associated with the item.
 *
 * http://schema.org/slogan
 */
var slogan = 'http://schema.org/slogan';
/**
 * smokingAllowed
 *
 * Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
 *
 * http://schema.org/smokingAllowed
 */
var smokingAllowed = 'http://schema.org/smokingAllowed';
/**
 * sodiumContent
 *
 * The number of milligrams of sodium.
 *
 * http://schema.org/sodiumContent
 */
var sodiumContent = 'http://schema.org/sodiumContent';
/**
 * softwareAddOn
 *
 * Additional content for a software application.
 *
 * http://schema.org/softwareAddOn
 */
var softwareAddOn = 'http://schema.org/softwareAddOn';
/**
 * softwareHelp
 *
 * Software application help.
 *
 * http://schema.org/softwareHelp
 */
var softwareHelp = 'http://schema.org/softwareHelp';
/**
 * softwareVersion
 *
 * Version of the software instance.
 *
 * http://schema.org/softwareVersion
 */
var softwareVersion = 'http://schema.org/softwareVersion';
/**
 * sourceOrganization
 *
 * The Organization on whose behalf the creator was working.
 *
 * http://schema.org/sourceOrganization
 */
var sourceOrganization = 'http://schema.org/sourceOrganization';
/**
 * spatial
 *
 * The "spatial" property can be used in cases when more specific properties
 * (e.g. <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a>, <a class="localLink" href="http://schema.org/spatialCoverage">spatialCoverage</a>, <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>) are not known to be appropriate.
 *
 * http://schema.org/spatial
 */
var spatial = 'http://schema.org/spatial';
/**
 * spatialCoverage
 *
 * The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
 *       contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
 *       areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
 *
 * http://schema.org/spatialCoverage
 */
var spatialCoverage = 'http://schema.org/spatialCoverage';
/**
 * speakable
 *
 * Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.<br/><br/>
 *
 * The <em>speakable</em> property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:<br/><br/>
 *
 * 1.) <em>id-value</em> URL references - uses <em>id-value</em> of an element in the page being annotated. The simplest use of <em>speakable</em> has (potentially relative) URL values, referencing identified sections of the document concerned.<br/><br/>
 *
 * 2.) CSS Selectors - addresses content in the annotated page, eg. via class attribute. Use the <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a> property.<br/><br/>
 *
 * 3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the <a class="localLink" href="http://schema.org/xpath">xpath</a> property.<br/><br/>
 *
 * For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
 * we define a supporting type, <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>  which is defined to be a possible value of the <em>speakable</em> property.
 *
 * http://schema.org/speakable
 */
var speakable = 'http://schema.org/speakable';
/**
 * specialCommitments
 *
 * Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.
 *
 * http://schema.org/specialCommitments
 */
var specialCommitments = 'http://schema.org/specialCommitments';
/**
 * specialOpeningHoursSpecification
 *
 * The special opening hours of a certain place.<br/><br/>
 *
 * Use this to explicitly override general opening hours brought in scope by <a class="localLink" href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a> or <a class="localLink" href="http://schema.org/openingHours">openingHours</a>.
 *
 * http://schema.org/specialOpeningHoursSpecification
 */
var specialOpeningHoursSpecification = 'http://schema.org/specialOpeningHoursSpecification';
/**
 * specialty
 *
 * One of the domain specialities to which this web page's content applies.
 *
 * http://schema.org/specialty
 */
var specialty = 'http://schema.org/specialty';
/**
 * sport
 *
 * A type of sport (e.g. Baseball).
 *
 * http://schema.org/sport
 */
var sport = 'http://schema.org/sport';
/**
 * sportsActivityLocation
 *
 * A sub property of location. The sports activity location where this action occurred.
 *
 * http://schema.org/sportsActivityLocation
 */
var sportsActivityLocation = 'http://schema.org/sportsActivityLocation';
/**
 * sportsEvent
 *
 * A sub property of location. The sports event where this action occurred.
 *
 * http://schema.org/sportsEvent
 */
var sportsEvent = 'http://schema.org/sportsEvent';
/**
 * sportsTeam
 *
 * A sub property of participant. The sports team that participated on this action.
 *
 * http://schema.org/sportsTeam
 */
var sportsTeam = 'http://schema.org/sportsTeam';
/**
 * spouse
 *
 * The person's spouse.
 *
 * http://schema.org/spouse
 */
var spouse = 'http://schema.org/spouse';
/**
 * starRating
 *
 * An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
 *
 * http://schema.org/starRating
 */
var starRating = 'http://schema.org/starRating';
/**
 * startDate
 *
 * The start date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
 *
 * http://schema.org/startDate
 */
var startDate = 'http://schema.org/startDate';
/**
 * startTime
 *
 * The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.<br/><br/>
 *
 * Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
 *
 * http://schema.org/startTime
 */
var startTime = 'http://schema.org/startTime';
/**
 * steeringPosition
 *
 * The position of the steering wheel or similar device (mostly for cars).
 *
 * http://schema.org/steeringPosition
 */
var steeringPosition = 'http://schema.org/steeringPosition';
/**
 * stepValue
 *
 * The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
 *
 * http://schema.org/stepValue
 */
var stepValue = 'http://schema.org/stepValue';
/**
 * steps
 *
 * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
 *
 * http://schema.org/steps
 */
var steps = 'http://schema.org/steps';
/**
 * storageRequirements
 *
 * Storage requirements (free space required).
 *
 * http://schema.org/storageRequirements
 */
var storageRequirements = 'http://schema.org/storageRequirements';
/**
 * streetAddress
 *
 * The street address. For example, 1600 Amphitheatre Pkwy.
 *
 * http://schema.org/streetAddress
 */
var streetAddress = 'http://schema.org/streetAddress';
/**
 * subEvents
 *
 * Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.
 *
 * http://schema.org/subEvents
 */
var subEvents = 'http://schema.org/subEvents';
/**
 * subReservation
 *
 * The individual reservations included in the package. Typically a repeated property.
 *
 * http://schema.org/subReservation
 */
var subReservation = 'http://schema.org/subReservation';
/**
 * subtitleLanguage
 *
 * Languages in which subtitles/captions are available, in <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard format</a>.
 *
 * http://schema.org/subtitleLanguage
 */
var subtitleLanguage = 'http://schema.org/subtitleLanguage';
/**
 * successorOf
 *
 * A pointer from a newer variant of a product  to its previous, often discontinued predecessor.
 *
 * http://schema.org/successorOf
 */
var successorOf = 'http://schema.org/successorOf';
/**
 * sugarContent
 *
 * The number of grams of sugar.
 *
 * http://schema.org/sugarContent
 */
var sugarContent = 'http://schema.org/sugarContent';
/**
 * suggestedGender
 *
 * The gender of the person or audience.
 *
 * http://schema.org/suggestedGender
 */
var suggestedGender = 'http://schema.org/suggestedGender';
/**
 * suggestedMaxAge
 *
 * Maximal age recommended for viewing content.
 *
 * http://schema.org/suggestedMaxAge
 */
var suggestedMaxAge = 'http://schema.org/suggestedMaxAge';
/**
 * suggestedMinAge
 *
 * Minimal age recommended for viewing content.
 *
 * http://schema.org/suggestedMinAge
 */
var suggestedMinAge = 'http://schema.org/suggestedMinAge';
/**
 * suitableForDiet
 *
 * Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.
 *
 * http://schema.org/suitableForDiet
 */
var suitableForDiet = 'http://schema.org/suitableForDiet';
/**
 * supportingData
 *
 * Supporting data for a SoftwareApplication.
 *
 * http://schema.org/supportingData
 */
var supportingData = 'http://schema.org/supportingData';
/**
 * surface
 *
 * A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.
 *
 * http://schema.org/surface
 */
var surface = 'http://schema.org/surface';
/**
 * target
 *
 * Indicates a target EntryPoint for an Action.
 *
 * http://schema.org/target
 */
var target = 'http://schema.org/target';
/**
 * targetDescription
 *
 * The description of a node in an established educational framework.
 *
 * http://schema.org/targetDescription
 */
var targetDescription = 'http://schema.org/targetDescription';
/**
 * targetName
 *
 * The name of a node in an established educational framework.
 *
 * http://schema.org/targetName
 */
var targetName = 'http://schema.org/targetName';
/**
 * targetPlatform
 *
 * Type of app development: phone, Metro style, desktop, XBox, etc.
 *
 * http://schema.org/targetPlatform
 */
var targetPlatform = 'http://schema.org/targetPlatform';
/**
 * targetProduct
 *
 * Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.
 *
 * http://schema.org/targetProduct
 */
var targetProduct = 'http://schema.org/targetProduct';
/**
 * targetUrl
 *
 * The URL of a node in an established educational framework.
 *
 * http://schema.org/targetUrl
 */
var targetUrl = 'http://schema.org/targetUrl';
/**
 * taxID
 *
 * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
 *
 * http://schema.org/taxID
 */
var taxID = 'http://schema.org/taxID';
/**
 * telephone
 *
 * The telephone number.
 *
 * http://schema.org/telephone
 */
var telephone = 'http://schema.org/telephone';
/**
 * temporal
 *
 * The "temporal" property can be used in cases where more specific properties
 * (e.g. <a class="localLink" href="http://schema.org/temporalCoverage">temporalCoverage</a>, <a class="localLink" href="http://schema.org/dateCreated">dateCreated</a>, <a class="localLink" href="http://schema.org/dateModified">dateModified</a>, <a class="localLink" href="http://schema.org/datePublished">datePublished</a>) are not known to be appropriate.
 *
 * http://schema.org/temporal
 */
var temporal = 'http://schema.org/temporal';
/**
 * text
 *
 * The textual content of this CreativeWork.
 *
 * http://schema.org/text
 */
var text = 'http://schema.org/text';
/**
 * thumbnail
 *
 * Thumbnail image for an image or video.
 *
 * http://schema.org/thumbnail
 */
var thumbnail = 'http://schema.org/thumbnail';
/**
 * thumbnailUrl
 *
 * A thumbnail image relevant to the Thing.
 *
 * http://schema.org/thumbnailUrl
 */
var thumbnailUrl = 'http://schema.org/thumbnailUrl';
/**
 * tickerSymbol
 *
 * The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO15022.
 *
 * http://schema.org/tickerSymbol
 */
var tickerSymbol = 'http://schema.org/tickerSymbol';
/**
 * ticketNumber
 *
 * The unique identifier for the ticket.
 *
 * http://schema.org/ticketNumber
 */
var ticketNumber = 'http://schema.org/ticketNumber';
/**
 * ticketToken
 *
 * Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.
 *
 * http://schema.org/ticketToken
 */
var ticketToken = 'http://schema.org/ticketToken';
/**
 * ticketedSeat
 *
 * The seat associated with the ticket.
 *
 * http://schema.org/ticketedSeat
 */
var ticketedSeat = 'http://schema.org/ticketedSeat';
/**
 * timeRequired
 *
 * Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'PT30M', 'PT1H25M'.
 *
 * http://schema.org/timeRequired
 */
var timeRequired = 'http://schema.org/timeRequired';
/**
 * title
 *
 * The title of the job.
 *
 * http://schema.org/title
 */
var title = 'http://schema.org/title';
/**
 * toLocation
 *
 * A sub property of location. The final location of the object or the agent after the action.
 *
 * http://schema.org/toLocation
 */
var toLocation = 'http://schema.org/toLocation';
/**
 * toRecipient
 *
 * A sub property of recipient. The recipient who was directly sent the message.
 *
 * http://schema.org/toRecipient
 */
var toRecipient = 'http://schema.org/toRecipient';
/**
 * tool
 *
 * A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
 *
 * http://schema.org/tool
 */
var tool = 'http://schema.org/tool';
/**
 * totalPaymentDue
 *
 * The total amount due.
 *
 * http://schema.org/totalPaymentDue
 */
var totalPaymentDue = 'http://schema.org/totalPaymentDue';
/**
 * totalPrice
 *
 * The total price for the reservation or ticket, including applicable taxes, shipping, etc.<br/><br/>
 *
 * Usage guidelines:<br/><br/>
 *
 * <ul>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * </ul>
 *
 *
 * http://schema.org/totalPrice
 */
var totalPrice = 'http://schema.org/totalPrice';
/**
 * totalTime
 *
 * The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
 *
 * http://schema.org/totalTime
 */
var totalTime = 'http://schema.org/totalTime';
/**
 * touristType
 *
 * Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc.
 *
 * http://schema.org/touristType
 */
var touristType = 'http://schema.org/touristType';
/**
 * trackingNumber
 *
 * Shipper tracking number.
 *
 * http://schema.org/trackingNumber
 */
var trackingNumber = 'http://schema.org/trackingNumber';
/**
 * trackingUrl
 *
 * Tracking url for the parcel delivery.
 *
 * http://schema.org/trackingUrl
 */
var trackingUrl = 'http://schema.org/trackingUrl';
/**
 * tracks
 *
 * A music recording (track)&#x2014;usually a single song.
 *
 * http://schema.org/tracks
 */
var tracks = 'http://schema.org/tracks';
/**
 * trailer
 *
 * The trailer of a movie or tv/radio series, season, episode, etc.
 *
 * http://schema.org/trailer
 */
var trailer = 'http://schema.org/trailer';
/**
 * trainName
 *
 * The name of the train (e.g. The Orient Express).
 *
 * http://schema.org/trainName
 */
var trainName = 'http://schema.org/trainName';
/**
 * trainNumber
 *
 * The unique identifier for the train.
 *
 * http://schema.org/trainNumber
 */
var trainNumber = 'http://schema.org/trainNumber';
/**
 * transFatContent
 *
 * The number of grams of trans fat.
 *
 * http://schema.org/transFatContent
 */
var transFatContent = 'http://schema.org/transFatContent';
/**
 * transcript
 *
 * If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
 *
 * http://schema.org/transcript
 */
var transcript = 'http://schema.org/transcript';
/**
 * translator
 *
 * Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
 *
 * http://schema.org/translator
 */
var translator = 'http://schema.org/translator';
/**
 * typeOfBed
 *
 * The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.
 *
 * http://schema.org/typeOfBed
 */
var typeOfBed = 'http://schema.org/typeOfBed';
/**
 * typeOfGood
 *
 * The product that this structured value is referring to.
 *
 * http://schema.org/typeOfGood
 */
var typeOfGood = 'http://schema.org/typeOfGood';
/**
 * typicalAgeRange
 *
 * The typical expected age range, e.g. '7-9', '11-'.
 *
 * http://schema.org/typicalAgeRange
 */
var typicalAgeRange = 'http://schema.org/typicalAgeRange';
/**
 * underName
 *
 * The person or organization the reservation or ticket is for.
 *
 * http://schema.org/underName
 */
var underName = 'http://schema.org/underName';
/**
 * unitCode
 *
 * The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
 *
 * http://schema.org/unitCode
 */
var unitCode = 'http://schema.org/unitCode';
/**
 * unitText
 *
 * A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
 * <a href='unitCode'>unitCode</a>.
 *
 * http://schema.org/unitText
 */
var unitText = 'http://schema.org/unitText';
/**
 * unsaturatedFatContent
 *
 * The number of grams of unsaturated fat.
 *
 * http://schema.org/unsaturatedFatContent
 */
var unsaturatedFatContent = 'http://schema.org/unsaturatedFatContent';
/**
 * uploadDate
 *
 * Date when this media object was uploaded to this site.
 *
 * http://schema.org/uploadDate
 */
var uploadDate = 'http://schema.org/uploadDate';
/**
 * upvoteCount
 *
 * The number of upvotes this question, answer or comment has received from the community.
 *
 * http://schema.org/upvoteCount
 */
var upvoteCount = 'http://schema.org/upvoteCount';
/**
 * url
 *
 * URL of the item.
 *
 * http://schema.org/url
 */
var url = 'http://schema.org/url';
/**
 * urlTemplate
 *
 * An url template (RFC6570) that will be used to construct the target of the execution of the action.
 *
 * http://schema.org/urlTemplate
 */
var urlTemplate = 'http://schema.org/urlTemplate';
/**
 * userInteractionCount
 *
 * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.
 *
 * http://schema.org/userInteractionCount
 */
var userInteractionCount = 'http://schema.org/userInteractionCount';
/**
 * validFor
 *
 * The duration of validity of a permit or similar thing.
 *
 * http://schema.org/validFor
 */
var validFor = 'http://schema.org/validFor';
/**
 * validFrom
 *
 * The date when the item becomes valid.
 *
 * http://schema.org/validFrom
 */
var validFrom = 'http://schema.org/validFrom';
/**
 * validIn
 *
 * The geographic area where a permit or similar thing is valid.
 *
 * http://schema.org/validIn
 */
var validIn = 'http://schema.org/validIn';
/**
 * validThrough
 *
 * The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.
 *
 * http://schema.org/validThrough
 */
var validThrough = 'http://schema.org/validThrough';
/**
 * validUntil
 *
 * The date when the item is no longer valid.
 *
 * http://schema.org/validUntil
 */
var validUntil = 'http://schema.org/validUntil';
/**
 * value
 *
 * The value of the quantitative value or property value node.<br/><br/>
 *
 * <ul>
 * <li>For <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>
 * <li>For <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * </ul>
 *
 *
 * http://schema.org/value
 */
var value = 'http://schema.org/value';
/**
 * valueAddedTaxIncluded
 *
 * Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
 *
 * http://schema.org/valueAddedTaxIncluded
 */
var valueAddedTaxIncluded = 'http://schema.org/valueAddedTaxIncluded';
/**
 * valueMaxLength
 *
 * Specifies the allowed range for number of characters in a literal value.
 *
 * http://schema.org/valueMaxLength
 */
var valueMaxLength = 'http://schema.org/valueMaxLength';
/**
 * valueMinLength
 *
 * Specifies the minimum allowed range for number of characters in a literal value.
 *
 * http://schema.org/valueMinLength
 */
var valueMinLength = 'http://schema.org/valueMinLength';
/**
 * valueName
 *
 * Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
 *
 * http://schema.org/valueName
 */
var valueName = 'http://schema.org/valueName';
/**
 * valuePattern
 *
 * Specifies a regular expression for testing literal values according to the HTML spec.
 *
 * http://schema.org/valuePattern
 */
var valuePattern = 'http://schema.org/valuePattern';
/**
 * valueReference
 *
 * A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.
 *
 * http://schema.org/valueReference
 */
var valueReference = 'http://schema.org/valueReference';
/**
 * valueRequired
 *
 * Whether the property must be filled in to complete the action.  Default is false.
 *
 * http://schema.org/valueRequired
 */
var valueRequired = 'http://schema.org/valueRequired';
/**
 * vatID
 *
 * The Value-added Tax ID of the organization or person.
 *
 * http://schema.org/vatID
 */
var vatID = 'http://schema.org/vatID';
/**
 * vehicleConfiguration
 *
 * A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.
 *
 * http://schema.org/vehicleConfiguration
 */
var vehicleConfiguration = 'http://schema.org/vehicleConfiguration';
/**
 * vehicleEngine
 *
 * Information about the engine or engines of the vehicle.
 *
 * http://schema.org/vehicleEngine
 */
var vehicleEngine = 'http://schema.org/vehicleEngine';
/**
 * vehicleIdentificationNumber
 *
 * The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.
 *
 * http://schema.org/vehicleIdentificationNumber
 */
var vehicleIdentificationNumber = 'http://schema.org/vehicleIdentificationNumber';
/**
 * vehicleInteriorColor
 *
 * The color or color combination of the interior of the vehicle.
 *
 * http://schema.org/vehicleInteriorColor
 */
var vehicleInteriorColor = 'http://schema.org/vehicleInteriorColor';
/**
 * vehicleInteriorType
 *
 * The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.
 *
 * http://schema.org/vehicleInteriorType
 */
var vehicleInteriorType = 'http://schema.org/vehicleInteriorType';
/**
 * vehicleModelDate
 *
 * The release date of a vehicle model (often used to differentiate versions of the same make and model).
 *
 * http://schema.org/vehicleModelDate
 */
var vehicleModelDate = 'http://schema.org/vehicleModelDate';
/**
 * vehicleSeatingCapacity
 *
 * The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>
 *
 * Typical unit code(s): C62 for persons.
 *
 * http://schema.org/vehicleSeatingCapacity
 */
var vehicleSeatingCapacity = 'http://schema.org/vehicleSeatingCapacity';
/**
 * vehicleTransmission
 *
 * The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars).
 *
 * http://schema.org/vehicleTransmission
 */
var vehicleTransmission = 'http://schema.org/vehicleTransmission';
/**
 * vendor
 *
 * 'vendor' is an earlier term for 'seller'.
 *
 * http://schema.org/vendor
 */
var vendor = 'http://schema.org/vendor';
/**
 * version
 *
 * The version of the CreativeWork embodied by a specified resource.
 *
 * http://schema.org/version
 */
var version = 'http://schema.org/version';
/**
 * video
 *
 * An embedded video object.
 *
 * http://schema.org/video
 */
var video = 'http://schema.org/video';
/**
 * videoFormat
 *
 * The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).
 *
 * http://schema.org/videoFormat
 */
var videoFormat = 'http://schema.org/videoFormat';
/**
 * videoFrameSize
 *
 * The frame size of the video.
 *
 * http://schema.org/videoFrameSize
 */
var videoFrameSize = 'http://schema.org/videoFrameSize';
/**
 * videoQuality
 *
 * The quality of the video.
 *
 * http://schema.org/videoQuality
 */
var videoQuality = 'http://schema.org/videoQuality';
/**
 * volumeNumber
 *
 * Identifies the volume of publication or multi-part work; for example, "iii" or "2".
 *
 * http://schema.org/volumeNumber
 */
var volumeNumber = 'http://schema.org/volumeNumber';
/**
 * warrantyPromise
 *
 * The warranty promise(s) included in the offer.
 *
 * http://schema.org/warrantyPromise
 */
var warrantyPromise = 'http://schema.org/warrantyPromise';
/**
 * warrantyScope
 *
 * The scope of the warranty promise.
 *
 * http://schema.org/warrantyScope
 */
var warrantyScope = 'http://schema.org/warrantyScope';
/**
 * webCheckinTime
 *
 * The time when a passenger can check into the flight online.
 *
 * http://schema.org/webCheckinTime
 */
var webCheckinTime = 'http://schema.org/webCheckinTime';
/**
 * weight
 *
 * The weight of the product or person.
 *
 * http://schema.org/weight
 */
var weight = 'http://schema.org/weight';
/**
 * width
 *
 * The width of the item.
 *
 * http://schema.org/width
 */
var width = 'http://schema.org/width';
/**
 * winner
 *
 * A sub property of participant. The winner of the action.
 *
 * http://schema.org/winner
 */
var winner = 'http://schema.org/winner';
/**
 * wordCount
 *
 * The number of words in the text of the Article.
 *
 * http://schema.org/wordCount
 */
var wordCount = 'http://schema.org/wordCount';
/**
 * workHours
 *
 * The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).
 *
 * http://schema.org/workHours
 */
var workHours = 'http://schema.org/workHours';
/**
 * workLocation
 *
 * A contact location for a person's place of work.
 *
 * http://schema.org/workLocation
 */
var workLocation = 'http://schema.org/workLocation';
/**
 * workPerformed
 *
 * A work performed in some event, for example a play performed in a TheaterEvent.
 *
 * http://schema.org/workPerformed
 */
var workPerformed = 'http://schema.org/workPerformed';
/**
 * workPresented
 *
 * The movie presented during this event.
 *
 * http://schema.org/workPresented
 */
var workPresented = 'http://schema.org/workPresented';
/**
 * worksFor
 *
 * Organizations that the person works for.
 *
 * http://schema.org/worksFor
 */
var worksFor = 'http://schema.org/worksFor';
/**
 * worstRating
 *
 * The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.
 *
 * http://schema.org/worstRating
 */
var worstRating = 'http://schema.org/worstRating';
/**
 * xpath
 *
 * An XPath, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
 *
 * http://schema.org/xpath
 */
var xpath = 'http://schema.org/xpath';
/**
 * yearlyRevenue
 *
 * The size of the business in annual revenue.
 *
 * http://schema.org/yearlyRevenue
 */
var yearlyRevenue = 'http://schema.org/yearlyRevenue';
/**
 * yearsInOperation
 *
 * The age of the business.
 *
 * http://schema.org/yearsInOperation
 */
var yearsInOperation = 'http://schema.org/yearsInOperation';
/**
 * actionApplication
 *
 * An application that can complete the request.
 *
 * http://schema.org/actionApplication
 */
var actionApplication = 'http://schema.org/actionApplication';
/**
 * actionOption
 *
 * A sub property of object. The options subject to this action.
 *
 * http://schema.org/actionOption
 */
var actionOption = 'http://schema.org/actionOption';
/**
 * actor
 *
 * An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/actor
 */
var actor = 'http://schema.org/actor';
/**
 * album
 *
 * A music album.
 *
 * http://schema.org/album
 */
var album = 'http://schema.org/album';
/**
 * albumRelease
 *
 * A release of this album.
 *
 * http://schema.org/albumRelease
 */
var albumRelease = 'http://schema.org/albumRelease';
/**
 * alumni
 *
 * Alumni of an organization.
 *
 * http://schema.org/alumni
 */
var alumni = 'http://schema.org/alumni';
/**
 * alumniOf
 *
 * An organization that the person is an alumni of.
 *
 * http://schema.org/alumniOf
 */
var alumniOf = 'http://schema.org/alumniOf';
/**
 * artworkSurface
 *
 * The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.
 *
 * http://schema.org/artworkSurface
 */
var artworkSurface = 'http://schema.org/artworkSurface';
/**
 * attendee
 *
 * A person or organization attending the event.
 *
 * http://schema.org/attendee
 */
var attendee = 'http://schema.org/attendee';
/**
 * audience
 *
 * An intended audience, i.e. a group for whom something was created.
 *
 * http://schema.org/audience
 */
var audience = 'http://schema.org/audience';
/**
 * availableOnDevice
 *
 * Device required to run the application. Used in cases where a specific make/model is required to run the application.
 *
 * http://schema.org/availableOnDevice
 */
var availableOnDevice = 'http://schema.org/availableOnDevice';
/**
 * award
 *
 * An award won by or for this item.
 *
 * http://schema.org/award
 */
var award = 'http://schema.org/award';
/**
 * blogPost
 *
 * A posting that is part of this blog.
 *
 * http://schema.org/blogPost
 */
var blogPost = 'http://schema.org/blogPost';
/**
 * broker
 *
 * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
 *
 * http://schema.org/broker
 */
var broker = 'http://schema.org/broker';
/**
 * codeSampleType
 *
 * What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
 *
 * http://schema.org/codeSampleType
 */
var codeSampleType = 'http://schema.org/codeSampleType';
/**
 * colleague
 *
 * A colleague of the person.
 *
 * http://schema.org/colleague
 */
var colleague = 'http://schema.org/colleague';
/**
 * contactPoint
 *
 * A contact point for a person or organization.
 *
 * http://schema.org/contactPoint
 */
var contactPoint = 'http://schema.org/contactPoint';
/**
 * containsPlace
 *
 * The basic containment relation between a place and another that it contains.
 *
 * http://schema.org/containsPlace
 */
var containsPlace = 'http://schema.org/containsPlace';
/**
 * containsSeason
 *
 * A season that is part of the media series.
 *
 * http://schema.org/containsSeason
 */
var containsSeason = 'http://schema.org/containsSeason';
/**
 * contentLocation
 *
 * The location depicted or described in the content. For example, the location in a photograph or painting.
 *
 * http://schema.org/contentLocation
 */
var contentLocation = 'http://schema.org/contentLocation';
/**
 * dataset
 *
 * A dataset contained in this catalog.
 *
 * http://schema.org/dataset
 */
var dataset = 'http://schema.org/dataset';
/**
 * description
 *
 * A description of the item.
 *
 * http://schema.org/description
 */
var description = 'http://schema.org/description';
/**
 * director
 *
 * A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/director
 */
var director = 'http://schema.org/director';
/**
 * duration
 *
 * The duration of the item (movie, audio recording, event, etc.) in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>.
 *
 * http://schema.org/duration
 */
var duration = 'http://schema.org/duration';
/**
 * employee
 *
 * Someone working for this organization.
 *
 * http://schema.org/employee
 */
var employee = 'http://schema.org/employee';
/**
 * encodesCreativeWork
 *
 * The CreativeWork encoded by this media object.
 *
 * http://schema.org/encodesCreativeWork
 */
var encodesCreativeWork = 'http://schema.org/encodesCreativeWork';
/**
 * encodingFormat
 *
 * Media type typically expressed using a MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>
 *
 * In cases where a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> has several media type representations, <a class="localLink" href="http://schema.org/encoding">encoding</a> can be used to indicate each <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a> alongside particular <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> information.<br/><br/>
 *
 * Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.
 *
 * http://schema.org/encodingFormat
 */
var encodingFormat = 'http://schema.org/encodingFormat';
/**
 * episode
 *
 * An episode of a tv, radio or game media within a series or season.
 *
 * http://schema.org/episode
 */
var episode = 'http://schema.org/episode';
/**
 * event
 *
 * Upcoming or past event associated with this place, organization, or action.
 *
 * http://schema.org/event
 */
var event = 'http://schema.org/event';
/**
 * exampleOfWork
 *
 * A creative work that this work is an example/instance/realization/derivation of.
 *
 * http://schema.org/exampleOfWork
 */
var exampleOfWork = 'http://schema.org/exampleOfWork';
/**
 * executableLibraryName
 *
 * Library file name e.g., mscorlib.dll, system.web.dll.
 *
 * http://schema.org/executableLibraryName
 */
var executableLibraryName = 'http://schema.org/executableLibraryName';
/**
 * exerciseCourse
 *
 * A sub property of location. The course where this action was taken.
 *
 * http://schema.org/exerciseCourse
 */
var exerciseCourse = 'http://schema.org/exerciseCourse';
/**
 * founder
 *
 * A person who founded this organization.
 *
 * http://schema.org/founder
 */
var founder = 'http://schema.org/founder';
/**
 * game
 *
 * Video game which is played on this server.
 *
 * http://schema.org/game
 */
var game = 'http://schema.org/game';
/**
 * gameServer
 *
 * The server on which  it is possible to play the game.
 *
 * http://schema.org/gameServer
 */
var gameServer = 'http://schema.org/gameServer';
/**
 * hasBroadcastChannel
 *
 * A broadcast channel of a broadcast service.
 *
 * http://schema.org/hasBroadcastChannel
 */
var hasBroadcastChannel = 'http://schema.org/hasBroadcastChannel';
/**
 * hasMenu
 *
 * Either the actual menu as a structured representation, as text, or a URL of the menu.
 *
 * http://schema.org/hasMenu
 */
var hasMenu = 'http://schema.org/hasMenu';
/**
 * inLanguage
 *
 * The language of the content or performance or used in an action. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/availableLanguage">availableLanguage</a>.
 *
 * http://schema.org/inLanguage
 */
var inLanguage = 'http://schema.org/inLanguage';
/**
 * incentiveCompensation
 *
 * Description of bonus and commission compensation aspects of the job.
 *
 * http://schema.org/incentiveCompensation
 */
var incentiveCompensation = 'http://schema.org/incentiveCompensation';
/**
 * interactionStatistic
 *
 * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
 *
 * http://schema.org/interactionStatistic
 */
var interactionStatistic = 'http://schema.org/interactionStatistic';
/**
 * isAccessibleForFree
 *
 * A flag to signal that the item, event, or place is accessible for free.
 *
 * http://schema.org/isAccessibleForFree
 */
var isAccessibleForFree = 'http://schema.org/isAccessibleForFree';
/**
 * isBasedOn
 *
 * A resource from which this work is derived or from which it is a modification or adaption.
 *
 * http://schema.org/isBasedOn
 */
var isBasedOn = 'http://schema.org/isBasedOn';
/**
 * jobBenefits
 *
 * Description of benefits associated with the job.
 *
 * http://schema.org/jobBenefits
 */
var jobBenefits = 'http://schema.org/jobBenefits';
/**
 * mainEntity
 *
 * Indicates the primary entity described in some page or other CreativeWork.
 *
 * http://schema.org/mainEntity
 */
var mainEntity = 'http://schema.org/mainEntity';
/**
 * mainEntityOfPage
 *
 * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href="/docs/datamodel.html#mainEntityBackground">background notes</a> for details.
 *
 * http://schema.org/mainEntityOfPage
 */
var mainEntityOfPage = 'http://schema.org/mainEntityOfPage';
/**
 * makesOffer
 *
 * A pointer to products or services offered by the organization or person.
 *
 * http://schema.org/makesOffer
 */
var makesOffer = 'http://schema.org/makesOffer';
/**
 * offeredBy
 *
 * A pointer to the organization or person making the offer.
 *
 * http://schema.org/offeredBy
 */
var offeredBy = 'http://schema.org/offeredBy';
/**
 * parent
 *
 * A parent of this person.
 *
 * http://schema.org/parent
 */
var parent = 'http://schema.org/parent';
/**
 * partOfSeries
 *
 * The series to which this episode or season belongs.
 *
 * http://schema.org/partOfSeries
 */
var partOfSeries = 'http://schema.org/partOfSeries';
/**
 * paymentDueDate
 *
 * The date that payment is due.
 *
 * http://schema.org/paymentDueDate
 */
var paymentDueDate = 'http://schema.org/paymentDueDate';
/**
 * performTime
 *
 * The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
 *
 * http://schema.org/performTime
 */
var performTime = 'http://schema.org/performTime';
/**
 * performer
 *
 * A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
 *
 * http://schema.org/performer
 */
var performer = 'http://schema.org/performer';
/**
 * photo
 *
 * A photograph of this place.
 *
 * http://schema.org/photo
 */
var photo = 'http://schema.org/photo';
/**
 * provider
 *
 * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
 *
 * http://schema.org/provider
 */
var provider = 'http://schema.org/provider';
/**
 * providesBroadcastService
 *
 * The BroadcastService offered on this channel.
 *
 * http://schema.org/providesBroadcastService
 */
var providesBroadcastService = 'http://schema.org/providesBroadcastService';
/**
 * recipeIngredient
 *
 * A single ingredient used in the recipe, e.g. sugar, flour or garlic.
 *
 * http://schema.org/recipeIngredient
 */
var recipeIngredient = 'http://schema.org/recipeIngredient';
/**
 * recordedAs
 *
 * An audio recording of the work.
 *
 * http://schema.org/recordedAs
 */
var recordedAs = 'http://schema.org/recordedAs';
/**
 * recordedAt
 *
 * The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.
 *
 * http://schema.org/recordedAt
 */
var recordedAt = 'http://schema.org/recordedAt';
/**
 * recordedIn
 *
 * The CreativeWork that captured all or part of this Event.
 *
 * http://schema.org/recordedIn
 */
var recordedIn = 'http://schema.org/recordedIn';
/**
 * recordingOf
 *
 * The composition this track is a recording of.
 *
 * http://schema.org/recordingOf
 */
var recordingOf = 'http://schema.org/recordingOf';
/**
 * releaseOf
 *
 * The album this is a release of.
 *
 * http://schema.org/releaseOf
 */
var releaseOf = 'http://schema.org/releaseOf';
/**
 * review
 *
 * A review of the item.
 *
 * http://schema.org/review
 */
var review = 'http://schema.org/review';
/**
 * roleName
 *
 * A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.
 *
 * http://schema.org/roleName
 */
var roleName = 'http://schema.org/roleName';
/**
 * runtimePlatform
 *
 * Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).
 *
 * http://schema.org/runtimePlatform
 */
var runtimePlatform = 'http://schema.org/runtimePlatform';
/**
 * season
 *
 * A season in a media series.
 *
 * http://schema.org/season
 */
var season = 'http://schema.org/season';
/**
 * serialNumber
 *
 * The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.
 *
 * http://schema.org/serialNumber
 */
var serialNumber = 'http://schema.org/serialNumber';
/**
 * serviceArea
 *
 * The geographic area where the service is provided.
 *
 * http://schema.org/serviceArea
 */
var serviceArea = 'http://schema.org/serviceArea';
/**
 * serviceOutput
 *
 * The tangible thing generated by the service, e.g. a passport, permit, etc.
 *
 * http://schema.org/serviceOutput
 */
var serviceOutput = 'http://schema.org/serviceOutput';
/**
 * sibling
 *
 * A sibling of the person.
 *
 * http://schema.org/sibling
 */
var sibling = 'http://schema.org/sibling';
/**
 * significantLink
 *
 * One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
 *
 * http://schema.org/significantLink
 */
var significantLink = 'http://schema.org/significantLink';
/**
 * softwareRequirements
 *
 * Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
 *
 * http://schema.org/softwareRequirements
 */
var softwareRequirements = 'http://schema.org/softwareRequirements';
/**
 * sponsor
 *
 * A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
 *
 * http://schema.org/sponsor
 */
var sponsor = 'http://schema.org/sponsor';
/**
 * subOrganization
 *
 * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
 *
 * http://schema.org/subOrganization
 */
var subOrganization = 'http://schema.org/subOrganization';
/**
 * subjectOf
 *
 * A CreativeWork or Event about this Thing.
 *
 * http://schema.org/subjectOf
 */
var subjectOf = 'http://schema.org/subjectOf';
/**
 * suggestedAnswer
 *
 * An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.
 *
 * http://schema.org/suggestedAnswer
 */
var suggestedAnswer = 'http://schema.org/suggestedAnswer';
/**
 * superEvent
 *
 * An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
 *
 * http://schema.org/superEvent
 */
var superEvent = 'http://schema.org/superEvent';
/**
 * targetCollection
 *
 * A sub property of object. The collection target of the action.
 *
 * http://schema.org/targetCollection
 */
var targetCollection = 'http://schema.org/targetCollection';
/**
 * temporalCoverage
 *
 * The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO 8601 time interval format</a>. In
 *       the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
 *       Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".<br/><br/>
 *
 * Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.
 *
 * http://schema.org/temporalCoverage
 */
var temporalCoverage = 'http://schema.org/temporalCoverage';
/**
 * track
 *
 * A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.
 *
 * http://schema.org/track
 */
var track = 'http://schema.org/track';
/**
 * warranty
 *
 * The warranty promise(s) included in the offer.
 *
 * http://schema.org/warranty
 */
var warranty = 'http://schema.org/warranty';
/**
 * workExample
 *
 * Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.
 *
 * http://schema.org/workExample
 */
var workExample = 'http://schema.org/workExample';
/**
 * yield
 *
 * The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
 * Note that `yield` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://schema.org/yield
 */
var yield__workaround = 'http://schema.org/yield';
/**
 * about
 *
 * The subject matter of the content.
 *
 * http://schema.org/about
 */
var about = 'http://schema.org/about';
/**
 * competitor
 *
 * A competitor in a sports event.
 *
 * http://schema.org/competitor
 */
var competitor = 'http://schema.org/competitor';
/**
 * containedInPlace
 *
 * The basic containment relation between a place and one that contains it.
 *
 * http://schema.org/containedInPlace
 */
var containedInPlace = 'http://schema.org/containedInPlace';
/**
 * encoding
 *
 * A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.
 *
 * http://schema.org/encoding
 */
var encoding = 'http://schema.org/encoding';
/**
 * hasMap
 *
 * A URL to a map of the place.
 *
 * http://schema.org/hasMap
 */
var hasMap = 'http://schema.org/hasMap';
/**
 * image
 *
 * An image of the item. This can be a <a class="localLink" href="http://schema.org/URL">URL</a> or a fully described <a class="localLink" href="http://schema.org/ImageObject">ImageObject</a>.
 *
 * http://schema.org/image
 */
var image = 'http://schema.org/image';
/**
 * material
 *
 * A material that something is made from, e.g. leather, wool, cotton, paper.
 *
 * http://schema.org/material
 */
var material = 'http://schema.org/material';
/**
 * memberOf
 *
 * An Organization (or ProgramMembership) to which this Person or Organization belongs.
 *
 * http://schema.org/memberOf
 */
var memberOf = 'http://schema.org/memberOf';
/**
 * parentOrganization
 *
 * The larger organization that this organization is a <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a> of, if any.
 *
 * http://schema.org/parentOrganization
 */
var parentOrganization = 'http://schema.org/parentOrganization';
/**
 * result
 *
 * The result produced in the action. e.g. John wrote <em>a book</em>.
 *
 * http://schema.org/result
 */
var result = 'http://schema.org/result';
/**
 * seller
 *
 * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
 *
 * http://schema.org/seller
 */
var seller = 'http://schema.org/seller';
/**
 * step
 *
 * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
 *
 * http://schema.org/step
 */
var step = 'http://schema.org/step';
/**
 * subEvent
 *
 * An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
 *
 * http://schema.org/subEvent
 */
var subEvent = 'http://schema.org/subEvent';
/**
 * supply
 *
 * A sub-property of instrument. A supply consumed when performing instructions or a direction.
 *
 * http://schema.org/supply
 */
var supply = 'http://schema.org/supply';
/**
 * workFeatured
 *
 * A work featured in some event, e.g. exhibited in an ExhibitionEvent.
 *        Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
 *
 * http://schema.org/workFeatured
 */
var workFeatured = 'http://schema.org/workFeatured';
/**
 * areaServed
 *
 * The geographic area where a service or offered item is provided.
 *
 * http://schema.org/areaServed
 */
var areaServed = 'http://schema.org/areaServed';
/**
 * includedInDataCatalog
 *
 * A data catalog which contains this dataset.
 *
 * http://schema.org/includedInDataCatalog
 */
var includedInDataCatalog = 'http://schema.org/includedInDataCatalog';
/**
 * member
 *
 * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
 *
 * http://schema.org/member
 */
var member = 'http://schema.org/member';
/**
 * recipient
 *
 * A sub property of participant. The participant who is at the receiving end of the action.
 *
 * http://schema.org/recipient
 */
var recipient = 'http://schema.org/recipient';
/**
 * hasPart
 *
 * Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).
 *
 * http://schema.org/hasPart
 */
var hasPart = 'http://schema.org/hasPart';
/**
 * isPartOf
 *
 * Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
 *
 * http://schema.org/isPartOf
 */
var isPartOf = 'http://schema.org/isPartOf';
/**
 * position
 *
 * The position of an item in a series or sequence of items.
 *
 * http://schema.org/position
 */
var position = 'http://schema.org/position';
/**
 * instrument
 *
 * The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.
 *
 * http://schema.org/instrument
 */
var instrument = 'http://schema.org/instrument';
/**
 * object
 *
 * The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.
 *
 * http://schema.org/object
 */
var object = 'http://schema.org/object';
/**
 * location
 *
 * The location of for example where the event is happening, an organization is located, or where an action takes place.
 *
 * http://schema.org/location
 */
var location = 'http://schema.org/location';
/**
 * participant
 *
 * Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.
 *
 * http://schema.org/participant
 */
var participant = 'http://schema.org/participant';
/**
 * identifier
 *
 * The identifier property represents any kind of identifier for any kind of <a class="localLink" href="http://schema.org/Thing">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href="/docs/datamodel.html#identifierBg">background notes</a> for more details.
 *
 * http://schema.org/identifier
 */
var identifier = 'http://schema.org/identifier';
/**
 * AMRadioChannel
 *
 * A radio channel that uses AM.
 *
 * http://schema.org/AMRadioChannel
 */
var AMRadioChannel = 'http://schema.org/AMRadioChannel';
/**
 * APIReference
 *
 * Reference documentation for application programming interfaces (APIs).
 *
 * http://schema.org/APIReference
 */
var APIReference = 'http://schema.org/APIReference';
/**
 * AboutPage
 *
 * Web page type: About page.
 *
 * http://schema.org/AboutPage
 */
var AboutPage = 'http://schema.org/AboutPage';
/**
 * AcceptAction
 *
 * The act of committing to/adopting an object.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/RejectAction">RejectAction</a>: The antonym of AcceptAction.</li>
 * </ul>
 *
 *
 * http://schema.org/AcceptAction
 */
var AcceptAction = 'http://schema.org/AcceptAction';
/**
 * Accommodation
 *
 * An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
 * For more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Accommodation
 */
var Accommodation = 'http://schema.org/Accommodation';
/**
 * AccountingService
 *
 * Accountancy business.<br/><br/>
 *
 * As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
 *
 * http://schema.org/AccountingService
 */
var AccountingService = 'http://schema.org/AccountingService';
/**
 * AchieveAction
 *
 * The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.
 *
 * http://schema.org/AchieveAction
 */
var AchieveAction = 'http://schema.org/AchieveAction';
/**
 * Action
 *
 * An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>
 *
 * See also <a href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog post</a> and <a href="http://schema.org/docs/actions.html">Actions overview document</a>.
 *
 * http://schema.org/Action
 */
var Action = 'http://schema.org/Action';
/**
 * ActionAccessSpecification
 *
 * A set of requirements that a must be fulfilled in order to perform an Action.
 *
 * http://schema.org/ActionAccessSpecification
 */
var ActionAccessSpecification = 'http://schema.org/ActionAccessSpecification';
/**
 * ActionStatusType
 *
 * The status of an Action.
 *
 * http://schema.org/ActionStatusType
 */
var ActionStatusType = 'http://schema.org/ActionStatusType';
/**
 * ActivateAction
 *
 * The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).
 *
 * http://schema.org/ActivateAction
 */
var ActivateAction = 'http://schema.org/ActivateAction';
/**
 * AddAction
 *
 * The act of editing by adding an object to a collection.
 *
 * http://schema.org/AddAction
 */
var AddAction = 'http://schema.org/AddAction';
/**
 * AdministrativeArea
 *
 * A geographical region, typically under the jurisdiction of a particular government.
 *
 * http://schema.org/AdministrativeArea
 */
var AdministrativeArea = 'http://schema.org/AdministrativeArea';
/**
 * AdultEntertainment
 *
 * An adult entertainment establishment.
 *
 * http://schema.org/AdultEntertainment
 */
var AdultEntertainment = 'http://schema.org/AdultEntertainment';
/**
 * AggregateOffer
 *
 * When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.
 *
 * http://schema.org/AggregateOffer
 */
var AggregateOffer = 'http://schema.org/AggregateOffer';
/**
 * AggregateRating
 *
 * The average rating based on multiple ratings or reviews.
 *
 * http://schema.org/AggregateRating
 */
var AggregateRating = 'http://schema.org/AggregateRating';
/**
 * AgreeAction
 *
 * The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/AgreeAction
 */
var AgreeAction = 'http://schema.org/AgreeAction';
/**
 * Airline
 *
 * An organization that provides flights for passengers.
 *
 * http://schema.org/Airline
 */
var Airline = 'http://schema.org/Airline';
/**
 * Airport
 *
 * An airport.
 *
 * http://schema.org/Airport
 */
var Airport = 'http://schema.org/Airport';
/**
 * AlignmentObject
 *
 * An intangible item that describes an alignment between a learning resource and a node in an educational framework.
 *
 * http://schema.org/AlignmentObject
 */
var AlignmentObject = 'http://schema.org/AlignmentObject';
/**
 * AllocateAction
 *
 * The act of organizing tasks/objects/events by associating resources to it.
 *
 * http://schema.org/AllocateAction
 */
var AllocateAction = 'http://schema.org/AllocateAction';
/**
 * AmusementPark
 *
 * An amusement park.
 *
 * http://schema.org/AmusementPark
 */
var AmusementPark = 'http://schema.org/AmusementPark';
/**
 * AnimalShelter
 *
 * Animal shelter.
 *
 * http://schema.org/AnimalShelter
 */
var AnimalShelter = 'http://schema.org/AnimalShelter';
/**
 * Answer
 *
 * An answer offered to a question; perhaps correct, perhaps opinionated or wrong.
 *
 * http://schema.org/Answer
 */
var Answer = 'http://schema.org/Answer';
/**
 * Apartment
 *
 * An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
 *
 * http://schema.org/Apartment
 */
var Apartment = 'http://schema.org/Apartment';
/**
 * ApartmentComplex
 *
 * Residence type: Apartment complex.
 *
 * http://schema.org/ApartmentComplex
 */
var ApartmentComplex = 'http://schema.org/ApartmentComplex';
/**
 * AppendAction
 *
 * The act of inserting at the end if an ordered collection.
 *
 * http://schema.org/AppendAction
 */
var AppendAction = 'http://schema.org/AppendAction';
/**
 * ApplyAction
 *
 * The act of registering to an organization/service without the guarantee to receive it.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>
 * </ul>
 *
 *
 * http://schema.org/ApplyAction
 */
var ApplyAction = 'http://schema.org/ApplyAction';
/**
 * Aquarium
 *
 * Aquarium.
 *
 * http://schema.org/Aquarium
 */
var Aquarium = 'http://schema.org/Aquarium';
/**
 * ArriveAction
 *
 * The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.
 *
 * http://schema.org/ArriveAction
 */
var ArriveAction = 'http://schema.org/ArriveAction';
/**
 * ArtGallery
 *
 * An art gallery.
 *
 * http://schema.org/ArtGallery
 */
var ArtGallery = 'http://schema.org/ArtGallery';
/**
 * Article
 *
 * An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>
 *
 * See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
 *
 * http://schema.org/Article
 */
var Article = 'http://schema.org/Article';
/**
 * AskAction
 *
 * The act of posing a question / favor to someone.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a response to AskAction.</li>
 * </ul>
 *
 *
 * http://schema.org/AskAction
 */
var AskAction = 'http://schema.org/AskAction';
/**
 * AssessAction
 *
 * The act of forming one's opinion, reaction or sentiment.
 *
 * http://schema.org/AssessAction
 */
var AssessAction = 'http://schema.org/AssessAction';
/**
 * AssignAction
 *
 * The act of allocating an action/event/task to some destination (someone or something).
 *
 * http://schema.org/AssignAction
 */
var AssignAction = 'http://schema.org/AssignAction';
/**
 * Attorney
 *
 * Professional service: Attorney. <br/><br/>
 *
 * This type is deprecated - <a class="localLink" href="http://schema.org/LegalService">LegalService</a> is more inclusive and less ambiguous.
 *
 * http://schema.org/Attorney
 */
var Attorney = 'http://schema.org/Attorney';
/**
 * Audience
 *
 * Intended audience for an item, i.e. the group for whom the item was created.
 *
 * http://schema.org/Audience
 */
var Audience = 'http://schema.org/Audience';
/**
 * AudioObject
 *
 * An audio file.
 *
 * http://schema.org/AudioObject
 */
var AudioObject = 'http://schema.org/AudioObject';
/**
 * AuthorizeAction
 *
 * The act of granting permission to an object.
 *
 * http://schema.org/AuthorizeAction
 */
var AuthorizeAction = 'http://schema.org/AuthorizeAction';
/**
 * AutoBodyShop
 *
 * Auto body shop.
 *
 * http://schema.org/AutoBodyShop
 */
var AutoBodyShop = 'http://schema.org/AutoBodyShop';
/**
 * AutoDealer
 *
 * An car dealership.
 *
 * http://schema.org/AutoDealer
 */
var AutoDealer = 'http://schema.org/AutoDealer';
/**
 * AutoPartsStore
 *
 * An auto parts store.
 *
 * http://schema.org/AutoPartsStore
 */
var AutoPartsStore = 'http://schema.org/AutoPartsStore';
/**
 * AutoRental
 *
 * A car rental business.
 *
 * http://schema.org/AutoRental
 */
var AutoRental = 'http://schema.org/AutoRental';
/**
 * AutoRepair
 *
 * Car repair business.
 *
 * http://schema.org/AutoRepair
 */
var AutoRepair = 'http://schema.org/AutoRepair';
/**
 * AutoWash
 *
 * A car wash business.
 *
 * http://schema.org/AutoWash
 */
var AutoWash = 'http://schema.org/AutoWash';
/**
 * AutomatedTeller
 *
 * ATM/cash machine.
 *
 * http://schema.org/AutomatedTeller
 */
var AutomatedTeller = 'http://schema.org/AutomatedTeller';
/**
 * AutomotiveBusiness
 *
 * Car repair, sales, or parts.
 *
 * http://schema.org/AutomotiveBusiness
 */
var AutomotiveBusiness = 'http://schema.org/AutomotiveBusiness';
/**
 * Bakery
 *
 * A bakery.
 *
 * http://schema.org/Bakery
 */
var Bakery = 'http://schema.org/Bakery';
/**
 * BankAccount
 *
 * A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.
 *
 * http://schema.org/BankAccount
 */
var BankAccount = 'http://schema.org/BankAccount';
/**
 * BankOrCreditUnion
 *
 * Bank or credit union.
 *
 * http://schema.org/BankOrCreditUnion
 */
var BankOrCreditUnion = 'http://schema.org/BankOrCreditUnion';
/**
 * BarOrPub
 *
 * A bar or pub.
 *
 * http://schema.org/BarOrPub
 */
var BarOrPub = 'http://schema.org/BarOrPub';
/**
 * Barcode
 *
 * An image of a visual machine-readable code such as a barcode or QR code.
 *
 * http://schema.org/Barcode
 */
var Barcode = 'http://schema.org/Barcode';
/**
 * Beach
 *
 * Beach.
 *
 * http://schema.org/Beach
 */
var Beach = 'http://schema.org/Beach';
/**
 * BeautySalon
 *
 * Beauty salon.
 *
 * http://schema.org/BeautySalon
 */
var BeautySalon = 'http://schema.org/BeautySalon';
/**
 * BedAndBreakfast
 *
 * Bed and breakfast.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/BedAndBreakfast
 */
var BedAndBreakfast = 'http://schema.org/BedAndBreakfast';
/**
 * BedDetails
 *
 * An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class="localLink" href="http://schema.org/BedType">BedType</a> (under development).
 *
 * http://schema.org/BedDetails
 */
var BedDetails = 'http://schema.org/BedDetails';
/**
 * BedType
 *
 * A type of bed. This is used for indicating the bed or beds available in an accommodation.
 *
 * http://schema.org/BedType
 */
var BedType = 'http://schema.org/BedType';
/**
 * BefriendAction
 *
 * The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>
 * </ul>
 *
 *
 * http://schema.org/BefriendAction
 */
var BefriendAction = 'http://schema.org/BefriendAction';
/**
 * BikeStore
 *
 * A bike store.
 *
 * http://schema.org/BikeStore
 */
var BikeStore = 'http://schema.org/BikeStore';
/**
 * Blog
 *
 * A blog.
 *
 * http://schema.org/Blog
 */
var Blog = 'http://schema.org/Blog';
/**
 * BlogPosting
 *
 * A blog post.
 *
 * http://schema.org/BlogPosting
 */
var BlogPosting = 'http://schema.org/BlogPosting';
/**
 * BoardingPolicyType
 *
 * A type of boarding policy used by an airline.
 *
 * http://schema.org/BoardingPolicyType
 */
var BoardingPolicyType = 'http://schema.org/BoardingPolicyType';
/**
 * BodyOfWater
 *
 * A body of water, such as a sea, ocean, or lake.
 *
 * http://schema.org/BodyOfWater
 */
var BodyOfWater = 'http://schema.org/BodyOfWater';
/**
 * Book
 *
 * A book.
 *
 * http://schema.org/Book
 */
var Book = 'http://schema.org/Book';
/**
 * BookFormatType
 *
 * The publication format of the book.
 *
 * http://schema.org/BookFormatType
 */
var BookFormatType = 'http://schema.org/BookFormatType';
/**
 * BookSeries
 *
 * A series of books. Included books can be indicated with the hasPart property.
 *
 * http://schema.org/BookSeries
 */
var BookSeries = 'http://schema.org/BookSeries';
/**
 * BookStore
 *
 * A bookstore.
 *
 * http://schema.org/BookStore
 */
var BookStore = 'http://schema.org/BookStore';
/**
 * BookmarkAction
 *
 * An agent bookmarks/flags/labels/tags/marks an object.
 *
 * http://schema.org/BookmarkAction
 */
var BookmarkAction = 'http://schema.org/BookmarkAction';
/**
 * Boolean
 *
 * Boolean: True or False.
 *
 * http://schema.org/Boolean
 */
var Boolean = 'http://schema.org/Boolean';
/**
 * BorrowAction
 *
 * The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>: Reciprocal of BorrowAction.</li>
 * </ul>
 *
 *
 * http://schema.org/BorrowAction
 */
var BorrowAction = 'http://schema.org/BorrowAction';
/**
 * BowlingAlley
 *
 * A bowling alley.
 *
 * http://schema.org/BowlingAlley
 */
var BowlingAlley = 'http://schema.org/BowlingAlley';
/**
 * Brand
 *
 * A brand is a name used by an organization or business person for labeling a product, product group, or similar.
 *
 * http://schema.org/Brand
 */
var Brand = 'http://schema.org/Brand';
/**
 * BreadcrumbList
 *
 * A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.<br/><br/>
 *
 * The <a class="localLink" href="http://schema.org/position">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class="localLink" href="http://schema.org/itemListOrder">itemListOrder</a> of <a class="localLink" href="http://schema.org/ItemListOrderAscending">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
 *
 * http://schema.org/BreadcrumbList
 */
var BreadcrumbList = 'http://schema.org/BreadcrumbList';
/**
 * Brewery
 *
 * Brewery.
 *
 * http://schema.org/Brewery
 */
var Brewery = 'http://schema.org/Brewery';
/**
 * Bridge
 *
 * A bridge.
 *
 * http://schema.org/Bridge
 */
var Bridge = 'http://schema.org/Bridge';
/**
 * BroadcastChannel
 *
 * A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
 *
 * http://schema.org/BroadcastChannel
 */
var BroadcastChannel = 'http://schema.org/BroadcastChannel';
/**
 * BroadcastEvent
 *
 * An over the air or online broadcast event.
 *
 * http://schema.org/BroadcastEvent
 */
var BroadcastEvent = 'http://schema.org/BroadcastEvent';
/**
 * BroadcastFrequencySpecification
 *
 * The frequency in MHz and the modulation used for a particular BroadcastService.
 *
 * http://schema.org/BroadcastFrequencySpecification
 */
var BroadcastFrequencySpecification = 'http://schema.org/BroadcastFrequencySpecification';
/**
 * BroadcastService
 *
 * A delivery service through which content is provided via broadcast over the air or online.
 *
 * http://schema.org/BroadcastService
 */
var BroadcastService = 'http://schema.org/BroadcastService';
/**
 * BuddhistTemple
 *
 * A Buddhist temple.
 *
 * http://schema.org/BuddhistTemple
 */
var BuddhistTemple = 'http://schema.org/BuddhistTemple';
/**
 * BusReservation
 *
 * A reservation for bus travel. <br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
 *
 * http://schema.org/BusReservation
 */
var BusReservation = 'http://schema.org/BusReservation';
/**
 * BusStation
 *
 * A bus station.
 *
 * http://schema.org/BusStation
 */
var BusStation = 'http://schema.org/BusStation';
/**
 * BusStop
 *
 * A bus stop.
 *
 * http://schema.org/BusStop
 */
var BusStop = 'http://schema.org/BusStop';
/**
 * BusTrip
 *
 * A trip on a commercial bus line.
 *
 * http://schema.org/BusTrip
 */
var BusTrip = 'http://schema.org/BusTrip';
/**
 * BusinessAudience
 *
 * A set of characteristics belonging to businesses, e.g. who compose an item's target audience.
 *
 * http://schema.org/BusinessAudience
 */
var BusinessAudience = 'http://schema.org/BusinessAudience';
/**
 * BusinessEntityType
 *
 * A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#Business</li>
 * <li>http://purl.org/goodrelations/v1#Enduser</li>
 * <li>http://purl.org/goodrelations/v1#PublicInstitution</li>
 * <li>http://purl.org/goodrelations/v1#Reseller</li>
 * </ul>
 *
 *
 * http://schema.org/BusinessEntityType
 */
var BusinessEntityType = 'http://schema.org/BusinessEntityType';
/**
 * BusinessEvent
 *
 * Event type: Business event.
 *
 * http://schema.org/BusinessEvent
 */
var BusinessEvent = 'http://schema.org/BusinessEvent';
/**
 * BusinessFunction
 *
 * The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>
 * <li>http://purl.org/goodrelations/v1#Dispose</li>
 * <li>http://purl.org/goodrelations/v1#LeaseOut</li>
 * <li>http://purl.org/goodrelations/v1#Maintain</li>
 * <li>http://purl.org/goodrelations/v1#ProvideService</li>
 * <li>http://purl.org/goodrelations/v1#Repair</li>
 * <li>http://purl.org/goodrelations/v1#Sell</li>
 * <li>http://purl.org/goodrelations/v1#Buy</li>
 * </ul>
 *
 *
 * http://schema.org/BusinessFunction
 */
var BusinessFunction = 'http://schema.org/BusinessFunction';
/**
 * BuyAction
 *
 * The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.
 *
 * http://schema.org/BuyAction
 */
var BuyAction = 'http://schema.org/BuyAction';
/**
 * CableOrSatelliteService
 *
 * A service which provides access to media programming like TV or radio. Access may be via cable or satellite.
 *
 * http://schema.org/CableOrSatelliteService
 */
var CableOrSatelliteService = 'http://schema.org/CableOrSatelliteService';
/**
 * CafeOrCoffeeShop
 *
 * A cafe or coffee shop.
 *
 * http://schema.org/CafeOrCoffeeShop
 */
var CafeOrCoffeeShop = 'http://schema.org/CafeOrCoffeeShop';
/**
 * Campground
 *
 * A camping site, campsite, or <a class="localLink" href="http://schema.org/Campground">Campground</a> is a place used for overnight stay in the outdoors, typically containing individual <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> locations. <br/><br/>
 *
 * In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
 *
 * See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Campground
 */
var Campground = 'http://schema.org/Campground';
/**
 * CampingPitch
 *
 * A <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or <a class="localLink" href="http://schema.org/Campground">Campground</a>.<br/><br/>
 *
 * In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
 * (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
 *
 * See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/CampingPitch
 */
var CampingPitch = 'http://schema.org/CampingPitch';
/**
 * Canal
 *
 * A canal, like the Panama Canal.
 *
 * http://schema.org/Canal
 */
var Canal = 'http://schema.org/Canal';
/**
 * CancelAction
 *
 * The act of asserting that a future event/action is no longer going to happen.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antonym of CancelAction.</li>
 * </ul>
 *
 *
 * http://schema.org/CancelAction
 */
var CancelAction = 'http://schema.org/CancelAction';
/**
 * Car
 *
 * A car is a wheeled, self-powered motor vehicle used for transportation.
 *
 * http://schema.org/Car
 */
var Car = 'http://schema.org/Car';
/**
 * Casino
 *
 * A casino.
 *
 * http://schema.org/Casino
 */
var Casino = 'http://schema.org/Casino';
/**
 * CatholicChurch
 *
 * A Catholic church.
 *
 * http://schema.org/CatholicChurch
 */
var CatholicChurch = 'http://schema.org/CatholicChurch';
/**
 * Cemetery
 *
 * A graveyard.
 *
 * http://schema.org/Cemetery
 */
var Cemetery = 'http://schema.org/Cemetery';
/**
 * CheckAction
 *
 * An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.
 *
 * http://schema.org/CheckAction
 */
var CheckAction = 'http://schema.org/CheckAction';
/**
 * CheckInAction
 *
 * The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antonym of CheckInAction.</li>
 * <li><a class="localLink" href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>
 * <li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>
 * </ul>
 *
 *
 * http://schema.org/CheckInAction
 */
var CheckInAction = 'http://schema.org/CheckInAction';
/**
 * CheckOutAction
 *
 * The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/CheckInAction">CheckInAction</a>: The antonym of CheckOutAction.</li>
 * <li><a class="localLink" href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
 * <li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
 * </ul>
 *
 *
 * http://schema.org/CheckOutAction
 */
var CheckOutAction = 'http://schema.org/CheckOutAction';
/**
 * CheckoutPage
 *
 * Web page type: Checkout page.
 *
 * http://schema.org/CheckoutPage
 */
var CheckoutPage = 'http://schema.org/CheckoutPage';
/**
 * ChildCare
 *
 * A Childcare center.
 *
 * http://schema.org/ChildCare
 */
var ChildCare = 'http://schema.org/ChildCare';
/**
 * ChildrensEvent
 *
 * Event type: Children's event.
 *
 * http://schema.org/ChildrensEvent
 */
var ChildrensEvent = 'http://schema.org/ChildrensEvent';
/**
 * ChooseAction
 *
 * The act of expressing a preference from a set of options or a large or unbounded set of choices/options.
 *
 * http://schema.org/ChooseAction
 */
var ChooseAction = 'http://schema.org/ChooseAction';
/**
 * Church
 *
 * A church.
 *
 * http://schema.org/Church
 */
var Church = 'http://schema.org/Church';
/**
 * City
 *
 * A city or town.
 *
 * http://schema.org/City
 */
var City = 'http://schema.org/City';
/**
 * CityHall
 *
 * A city hall.
 *
 * http://schema.org/CityHall
 */
var CityHall = 'http://schema.org/CityHall';
/**
 * CivicStructure
 *
 * A public structure, such as a town hall or concert hall.
 *
 * http://schema.org/CivicStructure
 */
var CivicStructure = 'http://schema.org/CivicStructure';
/**
 * ClaimReview
 *
 * A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).
 *
 * http://schema.org/ClaimReview
 */
var ClaimReview = 'http://schema.org/ClaimReview';
/**
 * Clip
 *
 * A short TV or radio program or a segment/part of a program.
 *
 * http://schema.org/Clip
 */
var Clip = 'http://schema.org/Clip';
/**
 * ClothingStore
 *
 * A clothing store.
 *
 * http://schema.org/ClothingStore
 */
var ClothingStore = 'http://schema.org/ClothingStore';
/**
 * Code
 *
 * Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
 *
 * http://schema.org/Code
 */
var Code = 'http://schema.org/Code';
/**
 * CollectionPage
 *
 * Web page type: Collection page.
 *
 * http://schema.org/CollectionPage
 */
var CollectionPage = 'http://schema.org/CollectionPage';
/**
 * CollegeOrUniversity
 *
 * A college, university, or other third-level educational institution.
 *
 * http://schema.org/CollegeOrUniversity
 */
var CollegeOrUniversity = 'http://schema.org/CollegeOrUniversity';
/**
 * ComedyClub
 *
 * A comedy club.
 *
 * http://schema.org/ComedyClub
 */
var ComedyClub = 'http://schema.org/ComedyClub';
/**
 * ComedyEvent
 *
 * Event type: Comedy event.
 *
 * http://schema.org/ComedyEvent
 */
var ComedyEvent = 'http://schema.org/ComedyEvent';
/**
 * Comment
 *
 * A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class="localLink" href="http://schema.org/text">text</a> property, and its topic via <a class="localLink" href="http://schema.org/about">about</a>, properties shared with all CreativeWorks.
 *
 * http://schema.org/Comment
 */
var Comment = 'http://schema.org/Comment';
/**
 * CommentAction
 *
 * The act of generating a comment about a subject.
 *
 * http://schema.org/CommentAction
 */
var CommentAction = 'http://schema.org/CommentAction';
/**
 * CommunicateAction
 *
 * The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.
 *
 * http://schema.org/CommunicateAction
 */
var CommunicateAction = 'http://schema.org/CommunicateAction';
/**
 * CompoundPriceSpecification
 *
 * A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning").
 *
 * http://schema.org/CompoundPriceSpecification
 */
var CompoundPriceSpecification = 'http://schema.org/CompoundPriceSpecification';
/**
 * ComputerLanguage
 *
 * This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class="localLink" href="http://schema.org/Language">Language</a> type.
 *
 * http://schema.org/ComputerLanguage
 */
var ComputerLanguage = 'http://schema.org/ComputerLanguage';
/**
 * ComputerStore
 *
 * A computer store.
 *
 * http://schema.org/ComputerStore
 */
var ComputerStore = 'http://schema.org/ComputerStore';
/**
 * ConfirmAction
 *
 * The act of notifying someone that a future event/action is going to happen as expected.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: The antonym of ConfirmAction.</li>
 * </ul>
 *
 *
 * http://schema.org/ConfirmAction
 */
var ConfirmAction = 'http://schema.org/ConfirmAction';
/**
 * ConsumeAction
 *
 * The act of ingesting information/resources/food.
 *
 * http://schema.org/ConsumeAction
 */
var ConsumeAction = 'http://schema.org/ConsumeAction';
/**
 * ContactPage
 *
 * Web page type: Contact page.
 *
 * http://schema.org/ContactPage
 */
var ContactPage = 'http://schema.org/ContactPage';
/**
 * ContactPoint
 *
 * A contact point&#x2014;for example, a Customer Complaints department.
 *
 * http://schema.org/ContactPoint
 */
var ContactPoint = 'http://schema.org/ContactPoint';
/**
 * ContactPointOption
 *
 * Enumerated options related to a ContactPoint.
 *
 * http://schema.org/ContactPointOption
 */
var ContactPointOption = 'http://schema.org/ContactPointOption';
/**
 * Continent
 *
 * One of the continents (for example, Europe or Africa).
 *
 * http://schema.org/Continent
 */
var Continent = 'http://schema.org/Continent';
/**
 * ControlAction
 *
 * An agent controls a device or application.
 *
 * http://schema.org/ControlAction
 */
var ControlAction = 'http://schema.org/ControlAction';
/**
 * ConvenienceStore
 *
 * A convenience store.
 *
 * http://schema.org/ConvenienceStore
 */
var ConvenienceStore = 'http://schema.org/ConvenienceStore';
/**
 * Conversation
 *
 * One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.
 *
 * http://schema.org/Conversation
 */
var Conversation = 'http://schema.org/Conversation';
/**
 * CookAction
 *
 * The act of producing/preparing food.
 *
 * http://schema.org/CookAction
 */
var CookAction = 'http://schema.org/CookAction';
/**
 * Corporation
 *
 * Organization: A business corporation.
 *
 * http://schema.org/Corporation
 */
var Corporation = 'http://schema.org/Corporation';
/**
 * Country
 *
 * A country.
 *
 * http://schema.org/Country
 */
var Country = 'http://schema.org/Country';
/**
 * Course
 *
 * A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.
 *
 * http://schema.org/Course
 */
var Course = 'http://schema.org/Course';
/**
 * CourseInstance
 *
 * An instance of a <a class="localLink" href="http://schema.org/Course">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.
 *
 * http://schema.org/CourseInstance
 */
var CourseInstance = 'http://schema.org/CourseInstance';
/**
 * Courthouse
 *
 * A courthouse.
 *
 * http://schema.org/Courthouse
 */
var Courthouse = 'http://schema.org/Courthouse';
/**
 * CreateAction
 *
 * The act of deliberately creating/producing/generating/building a result out of the agent.
 *
 * http://schema.org/CreateAction
 */
var CreateAction = 'http://schema.org/CreateAction';
/**
 * CreativeWork
 *
 * The most generic kind of creative work, including books, movies, photographs, software programs, etc.
 *
 * http://schema.org/CreativeWork
 */
var CreativeWork = 'http://schema.org/CreativeWork';
/**
 * CreativeWorkSeason
 *
 * A media season e.g. tv, radio, video game etc.
 *
 * http://schema.org/CreativeWorkSeason
 */
var CreativeWorkSeason = 'http://schema.org/CreativeWorkSeason';
/**
 * CreativeWorkSeries
 *
 * A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class="localLink" href="http://schema.org/ItemList">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).<br/><br/>
 *
 * Specific subtypes are available for describing <a class="localLink" href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink" href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink" href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink" href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink" href="http://schema.org/Periodical">Periodical</a> and <a class="localLink" href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case, the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.<br/><br/>
 *
 * It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.
 *
 * http://schema.org/CreativeWorkSeries
 */
var CreativeWorkSeries = 'http://schema.org/CreativeWorkSeries';
/**
 * CreditCard
 *
 * A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#AmericanExpress</li>
 * <li>http://purl.org/goodrelations/v1#DinersClub</li>
 * <li>http://purl.org/goodrelations/v1#Discover</li>
 * <li>http://purl.org/goodrelations/v1#JCB</li>
 * <li>http://purl.org/goodrelations/v1#MasterCard</li>
 * <li>http://purl.org/goodrelations/v1#VISA</li>
 * </ul>
 *
 *
 * http://schema.org/CreditCard
 */
var CreditCard = 'http://schema.org/CreditCard';
/**
 * Crematorium
 *
 * A crematorium.
 *
 * http://schema.org/Crematorium
 */
var Crematorium = 'http://schema.org/Crematorium';
/**
 * CurrencyConversionService
 *
 * A service to convert funds from one currency to another currency.
 *
 * http://schema.org/CurrencyConversionService
 */
var CurrencyConversionService = 'http://schema.org/CurrencyConversionService';
/**
 * DanceEvent
 *
 * Event type: A social dance.
 *
 * http://schema.org/DanceEvent
 */
var DanceEvent = 'http://schema.org/DanceEvent';
/**
 * DanceGroup
 *
 * A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.
 *
 * http://schema.org/DanceGroup
 */
var DanceGroup = 'http://schema.org/DanceGroup';
/**
 * DataCatalog
 *
 * A collection of datasets.
 *
 * http://schema.org/DataCatalog
 */
var DataCatalog = 'http://schema.org/DataCatalog';
/**
 * DataDownload
 *
 * A dataset in downloadable form.
 *
 * http://schema.org/DataDownload
 */
var DataDownload = 'http://schema.org/DataDownload';
/**
 * DataFeed
 *
 * A single feed providing structured information about one or more entities or topics.
 *
 * http://schema.org/DataFeed
 */
var DataFeed = 'http://schema.org/DataFeed';
/**
 * DataFeedItem
 *
 * A single item within a larger data feed.
 *
 * http://schema.org/DataFeedItem
 */
var DataFeedItem = 'http://schema.org/DataFeedItem';
/**
 * DataType
 *
 * The basic data types such as Integers, Strings, etc.
 *
 * http://schema.org/DataType
 */
var DataType = 'http://schema.org/DataType';
/**
 * Dataset
 *
 * A body of structured information describing some topic(s) of interest.
 *
 * http://schema.org/Dataset
 */
var Dataset = 'http://schema.org/Dataset';
/**
 * Date
 *
 * A date value in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>.
 *
 * http://schema.org/Date
 */
var Date = 'http://schema.org/Date';
/**
 * DateTime
 *
 * A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).
 *
 * http://schema.org/DateTime
 */
var DateTime = 'http://schema.org/DateTime';
/**
 * DatedMoneySpecification
 *
 * A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> use of that type is recommended
 *
 * http://schema.org/DatedMoneySpecification
 */
var DatedMoneySpecification = 'http://schema.org/DatedMoneySpecification';
/**
 * DayOfWeek
 *
 * The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>
 *
 * Originally, URLs from <a href="http://purl.org/goodrelations/v1">GoodRelations</a> were used (for <a class="localLink" href="http://schema.org/Monday">Monday</a>, <a class="localLink" href="http://schema.org/Tuesday">Tuesday</a>, <a class="localLink" href="http://schema.org/Wednesday">Wednesday</a>, <a class="localLink" href="http://schema.org/Thursday">Thursday</a>, <a class="localLink" href="http://schema.org/Friday">Friday</a>, <a class="localLink" href="http://schema.org/Saturday">Saturday</a>, <a class="localLink" href="http://schema.org/Sunday">Sunday</a> plus a special entry for <a class="localLink" href="http://schema.org/PublicHolidays">PublicHolidays</a>); these have now been integrated directly into schema.org.
 *
 * http://schema.org/DayOfWeek
 */
var DayOfWeek = 'http://schema.org/DayOfWeek';
/**
 * DaySpa
 *
 * A day spa.
 *
 * http://schema.org/DaySpa
 */
var DaySpa = 'http://schema.org/DaySpa';
/**
 * DeactivateAction
 *
 * The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).
 *
 * http://schema.org/DeactivateAction
 */
var DeactivateAction = 'http://schema.org/DeactivateAction';
/**
 * DefenceEstablishment
 *
 * A defence establishment, such as an army or navy base.
 *
 * http://schema.org/DefenceEstablishment
 */
var DefenceEstablishment = 'http://schema.org/DefenceEstablishment';
/**
 * DeleteAction
 *
 * The act of editing a recipient by removing one of its objects.
 *
 * http://schema.org/DeleteAction
 */
var DeleteAction = 'http://schema.org/DeleteAction';
/**
 * DeliveryChargeSpecification
 *
 * The price for the delivery of an offer using a particular delivery method.
 *
 * http://schema.org/DeliveryChargeSpecification
 */
var DeliveryChargeSpecification = 'http://schema.org/DeliveryChargeSpecification';
/**
 * DeliveryEvent
 *
 * An event involving the delivery of an item.
 *
 * http://schema.org/DeliveryEvent
 */
var DeliveryEvent = 'http://schema.org/DeliveryEvent';
/**
 * DeliveryMethod
 *
 * A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>
 * <li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>
 * <li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>
 * <li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>
 * <li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>
 * <li>http://purl.org/goodrelations/v1#DHL</li>
 * <li>http://purl.org/goodrelations/v1#FederalExpress</li>
 * <li>http://purl.org/goodrelations/v1#UPS</li>
 * </ul>
 *
 *
 * http://schema.org/DeliveryMethod
 */
var DeliveryMethod = 'http://schema.org/DeliveryMethod';
/**
 * Demand
 *
 * A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.
 *
 * http://schema.org/Demand
 */
var Demand = 'http://schema.org/Demand';
/**
 * Dentist
 *
 * A dentist.
 *
 * http://schema.org/Dentist
 */
var Dentist = 'http://schema.org/Dentist';
/**
 * DepartAction
 *
 * The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.
 *
 * http://schema.org/DepartAction
 */
var DepartAction = 'http://schema.org/DepartAction';
/**
 * DepartmentStore
 *
 * A department store.
 *
 * http://schema.org/DepartmentStore
 */
var DepartmentStore = 'http://schema.org/DepartmentStore';
/**
 * DepositAccount
 *
 * A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.
 *
 * http://schema.org/DepositAccount
 */
var DepositAccount = 'http://schema.org/DepositAccount';
/**
 * DigitalDocument
 *
 * An electronic file or document.
 *
 * http://schema.org/DigitalDocument
 */
var DigitalDocument = 'http://schema.org/DigitalDocument';
/**
 * DigitalDocumentPermission
 *
 * A permission for a particular person or group to access a particular file.
 *
 * http://schema.org/DigitalDocumentPermission
 */
var DigitalDocumentPermission = 'http://schema.org/DigitalDocumentPermission';
/**
 * DigitalDocumentPermissionType
 *
 * A type of permission which can be granted for accessing a digital document.
 *
 * http://schema.org/DigitalDocumentPermissionType
 */
var DigitalDocumentPermissionType = 'http://schema.org/DigitalDocumentPermissionType';
/**
 * DisagreeAction
 *
 * The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/DisagreeAction
 */
var DisagreeAction = 'http://schema.org/DisagreeAction';
/**
 * DiscoverAction
 *
 * The act of discovering/finding an object.
 *
 * http://schema.org/DiscoverAction
 */
var DiscoverAction = 'http://schema.org/DiscoverAction';
/**
 * DiscussionForumPosting
 *
 * A posting to a discussion forum.
 *
 * http://schema.org/DiscussionForumPosting
 */
var DiscussionForumPosting = 'http://schema.org/DiscussionForumPosting';
/**
 * DislikeAction
 *
 * The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/DislikeAction
 */
var DislikeAction = 'http://schema.org/DislikeAction';
/**
 * Distance
 *
 * Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.
 *
 * http://schema.org/Distance
 */
var Distance = 'http://schema.org/Distance';
/**
 * Distillery
 *
 * A distillery.
 *
 * http://schema.org/Distillery
 */
var Distillery = 'http://schema.org/Distillery';
/**
 * DonateAction
 *
 * The act of providing goods, services, or money without compensation, often for philanthropic reasons.
 *
 * http://schema.org/DonateAction
 */
var DonateAction = 'http://schema.org/DonateAction';
/**
 * DownloadAction
 *
 * The act of downloading an object.
 *
 * http://schema.org/DownloadAction
 */
var DownloadAction = 'http://schema.org/DownloadAction';
/**
 * DrawAction
 *
 * The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.
 *
 * http://schema.org/DrawAction
 */
var DrawAction = 'http://schema.org/DrawAction';
/**
 * DrinkAction
 *
 * The act of swallowing liquids.
 *
 * http://schema.org/DrinkAction
 */
var DrinkAction = 'http://schema.org/DrinkAction';
/**
 * DriveWheelConfigurationValue
 *
 * A value indicating which roadwheels will receive torque.
 *
 * http://schema.org/DriveWheelConfigurationValue
 */
var DriveWheelConfigurationValue = 'http://schema.org/DriveWheelConfigurationValue';
/**
 * DryCleaningOrLaundry
 *
 * A dry-cleaning business.
 *
 * http://schema.org/DryCleaningOrLaundry
 */
var DryCleaningOrLaundry = 'http://schema.org/DryCleaningOrLaundry';
/**
 * Duration
 *
 * Quantity: Duration (use <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>).
 *
 * http://schema.org/Duration
 */
var Duration = 'http://schema.org/Duration';
/**
 * EatAction
 *
 * The act of swallowing solid objects.
 *
 * http://schema.org/EatAction
 */
var EatAction = 'http://schema.org/EatAction';
/**
 * EducationEvent
 *
 * Event type: Education event.
 *
 * http://schema.org/EducationEvent
 */
var EducationEvent = 'http://schema.org/EducationEvent';
/**
 * EducationalAudience
 *
 * An EducationalAudience.
 *
 * http://schema.org/EducationalAudience
 */
var EducationalAudience = 'http://schema.org/EducationalAudience';
/**
 * EducationalOrganization
 *
 * An educational organization.
 *
 * http://schema.org/EducationalOrganization
 */
var EducationalOrganization = 'http://schema.org/EducationalOrganization';
/**
 * Electrician
 *
 * An electrician.
 *
 * http://schema.org/Electrician
 */
var Electrician = 'http://schema.org/Electrician';
/**
 * ElectronicsStore
 *
 * An electronics store.
 *
 * http://schema.org/ElectronicsStore
 */
var ElectronicsStore = 'http://schema.org/ElectronicsStore';
/**
 * ElementarySchool
 *
 * An elementary school.
 *
 * http://schema.org/ElementarySchool
 */
var ElementarySchool = 'http://schema.org/ElementarySchool';
/**
 * EmailMessage
 *
 * An email message.
 *
 * http://schema.org/EmailMessage
 */
var EmailMessage = 'http://schema.org/EmailMessage';
/**
 * Embassy
 *
 * An embassy.
 *
 * http://schema.org/Embassy
 */
var Embassy = 'http://schema.org/Embassy';
/**
 * EmergencyService
 *
 * An emergency service, such as a fire station or ER.
 *
 * http://schema.org/EmergencyService
 */
var EmergencyService = 'http://schema.org/EmergencyService';
/**
 * EmployeeRole
 *
 * A subclass of OrganizationRole used to describe employee relationships.
 *
 * http://schema.org/EmployeeRole
 */
var EmployeeRole = 'http://schema.org/EmployeeRole';
/**
 * EmployerAggregateRating
 *
 * An aggregate rating of an Organization related to its role as an employer.
 *
 * http://schema.org/EmployerAggregateRating
 */
var EmployerAggregateRating = 'http://schema.org/EmployerAggregateRating';
/**
 * EmploymentAgency
 *
 * An employment agency.
 *
 * http://schema.org/EmploymentAgency
 */
var EmploymentAgency = 'http://schema.org/EmploymentAgency';
/**
 * EndorseAction
 *
 * An agent approves/certifies/likes/supports/sanction an object.
 *
 * http://schema.org/EndorseAction
 */
var EndorseAction = 'http://schema.org/EndorseAction';
/**
 * EndorsementRating
 *
 * An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
 * "Like" or "+1" on a social network. It can be considered the <a class="localLink" href="http://schema.org/result">result</a> of an <a class="localLink" href="http://schema.org/EndorseAction">EndorseAction</a> in which the <a class="localLink" href="http://schema.org/object">object</a> of the action is rated positively by
 * some <a class="localLink" href="http://schema.org/agent">agent</a>. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the <a class="localLink" href="http://schema.org/Action">Action</a>.<br/><br/>
 *
 * An <a class="localLink" href="http://schema.org/EndorsementRating">EndorsementRating</a> may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
 * endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.
 *
 * http://schema.org/EndorsementRating
 */
var EndorsementRating = 'http://schema.org/EndorsementRating';
/**
 * Energy
 *
 * Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.
 *
 * http://schema.org/Energy
 */
var Energy = 'http://schema.org/Energy';
/**
 * EngineSpecification
 *
 * Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.
 *
 * http://schema.org/EngineSpecification
 */
var EngineSpecification = 'http://schema.org/EngineSpecification';
/**
 * EntertainmentBusiness
 *
 * A business providing entertainment.
 *
 * http://schema.org/EntertainmentBusiness
 */
var EntertainmentBusiness = 'http://schema.org/EntertainmentBusiness';
/**
 * EntryPoint
 *
 * An entry point, within some Web-based protocol.
 *
 * http://schema.org/EntryPoint
 */
var EntryPoint = 'http://schema.org/EntryPoint';
/**
 * Enumeration
 *
 * Lists or enumerations—for example, a list of cuisines or music genres, etc.
 *
 * http://schema.org/Enumeration
 */
var Enumeration = 'http://schema.org/Enumeration';
/**
 * Episode
 *
 * A media episode (e.g. TV, radio, video game) which can be part of a series or season.
 *
 * http://schema.org/Episode
 */
var Episode = 'http://schema.org/Episode';
/**
 * Event
 *
 * An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class="localLink" href="http://schema.org/offers">offers</a> property. Repeated events may be structured as separate Event objects.
 *
 * http://schema.org/Event
 */
var Event = 'http://schema.org/Event';
/**
 * EventReservation
 *
 * A reservation for an event like a concert, sporting event, or lecture.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
 *
 * http://schema.org/EventReservation
 */
var EventReservation = 'http://schema.org/EventReservation';
/**
 * EventStatusType
 *
 * EventStatusType is an enumeration type whose instances represent several states that an Event may be in.
 *
 * http://schema.org/EventStatusType
 */
var EventStatusType = 'http://schema.org/EventStatusType';
/**
 * EventVenue
 *
 * An event venue.
 *
 * http://schema.org/EventVenue
 */
var EventVenue = 'http://schema.org/EventVenue';
/**
 * ExerciseAction
 *
 * The act of participating in exertive activity for the purposes of improving health and fitness.
 *
 * http://schema.org/ExerciseAction
 */
var ExerciseAction = 'http://schema.org/ExerciseAction';
/**
 * ExerciseGym
 *
 * A gym.
 *
 * http://schema.org/ExerciseGym
 */
var ExerciseGym = 'http://schema.org/ExerciseGym';
/**
 * ExhibitionEvent
 *
 * Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...
 *
 * http://schema.org/ExhibitionEvent
 */
var ExhibitionEvent = 'http://schema.org/ExhibitionEvent';
/**
 * FAQPage
 *
 * A <a class="localLink" href="http://schema.org/FAQPage">FAQPage</a> is a <a class="localLink" href="http://schema.org/WebPage">WebPage</a> presenting one or more "<a href="https://en.wikipedia.org/wiki/FAQ">Frequently asked questions</a>" (see also <a class="localLink" href="http://schema.org/QAPage">QAPage</a>).
 *
 * http://schema.org/FAQPage
 */
var FAQPage = 'http://schema.org/FAQPage';
/**
 * FMRadioChannel
 *
 * A radio channel that uses FM.
 *
 * http://schema.org/FMRadioChannel
 */
var FMRadioChannel = 'http://schema.org/FMRadioChannel';
/**
 * FastFoodRestaurant
 *
 * A fast-food restaurant.
 *
 * http://schema.org/FastFoodRestaurant
 */
var FastFoodRestaurant = 'http://schema.org/FastFoodRestaurant';
/**
 * Festival
 *
 * Event type: Festival.
 *
 * http://schema.org/Festival
 */
var Festival = 'http://schema.org/Festival';
/**
 * FilmAction
 *
 * The act of capturing sound and moving images on film, video, or digitally.
 *
 * http://schema.org/FilmAction
 */
var FilmAction = 'http://schema.org/FilmAction';
/**
 * FinancialProduct
 *
 * A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.
 *
 * http://schema.org/FinancialProduct
 */
var FinancialProduct = 'http://schema.org/FinancialProduct';
/**
 * FinancialService
 *
 * Financial services business.
 *
 * http://schema.org/FinancialService
 */
var FinancialService = 'http://schema.org/FinancialService';
/**
 * FindAction
 *
 * The act of finding an object.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/SearchAction">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>
 * </ul>
 *
 *
 * http://schema.org/FindAction
 */
var FindAction = 'http://schema.org/FindAction';
/**
 * FireStation
 *
 * A fire station. With firemen.
 *
 * http://schema.org/FireStation
 */
var FireStation = 'http://schema.org/FireStation';
/**
 * Flight
 *
 * An airline flight.
 *
 * http://schema.org/Flight
 */
var Flight = 'http://schema.org/Flight';
/**
 * FlightReservation
 *
 * A reservation for air travel.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
 *
 * http://schema.org/FlightReservation
 */
var FlightReservation = 'http://schema.org/FlightReservation';
/**
 * Float
 *
 * Data type: Floating number.
 *
 * http://schema.org/Float
 */
var Float = 'http://schema.org/Float';
/**
 * Florist
 *
 * A florist.
 *
 * http://schema.org/Florist
 */
var Florist = 'http://schema.org/Florist';
/**
 * FollowAction
 *
 * The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>
 * <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>
 * <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>
 * <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>
 * <li><a class="localLink" href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>
 * </ul>
 *
 *
 * http://schema.org/FollowAction
 */
var FollowAction = 'http://schema.org/FollowAction';
/**
 * FoodEstablishment
 *
 * A food-related business.
 *
 * http://schema.org/FoodEstablishment
 */
var FoodEstablishment = 'http://schema.org/FoodEstablishment';
/**
 * FoodEstablishmentReservation
 *
 * A reservation to dine at a food-related business.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
 *
 * http://schema.org/FoodEstablishmentReservation
 */
var FoodEstablishmentReservation = 'http://schema.org/FoodEstablishmentReservation';
/**
 * FoodEvent
 *
 * Event type: Food event.
 *
 * http://schema.org/FoodEvent
 */
var FoodEvent = 'http://schema.org/FoodEvent';
/**
 * FoodService
 *
 * A food service, like breakfast, lunch, or dinner.
 *
 * http://schema.org/FoodService
 */
var FoodService = 'http://schema.org/FoodService';
/**
 * FurnitureStore
 *
 * A furniture store.
 *
 * http://schema.org/FurnitureStore
 */
var FurnitureStore = 'http://schema.org/FurnitureStore';
/**
 * Game
 *
 * The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.
 *
 * http://schema.org/Game
 */
var Game = 'http://schema.org/Game';
/**
 * GamePlayMode
 *
 * Indicates whether this game is multi-player, co-op or single-player.
 *
 * http://schema.org/GamePlayMode
 */
var GamePlayMode = 'http://schema.org/GamePlayMode';
/**
 * GameServer
 *
 * Server that provides game interaction in a multiplayer game.
 *
 * http://schema.org/GameServer
 */
var GameServer = 'http://schema.org/GameServer';
/**
 * GameServerStatus
 *
 * Status of a game server.
 *
 * http://schema.org/GameServerStatus
 */
var GameServerStatus = 'http://schema.org/GameServerStatus';
/**
 * GardenStore
 *
 * A garden store.
 *
 * http://schema.org/GardenStore
 */
var GardenStore = 'http://schema.org/GardenStore';
/**
 * GasStation
 *
 * A gas station.
 *
 * http://schema.org/GasStation
 */
var GasStation = 'http://schema.org/GasStation';
/**
 * GatedResidenceCommunity
 *
 * Residence type: Gated community.
 *
 * http://schema.org/GatedResidenceCommunity
 */
var GatedResidenceCommunity = 'http://schema.org/GatedResidenceCommunity';
/**
 * GenderType
 *
 * An enumeration of genders.
 *
 * http://schema.org/GenderType
 */
var GenderType = 'http://schema.org/GenderType';
/**
 * GeneralContractor
 *
 * A general contractor.
 *
 * http://schema.org/GeneralContractor
 */
var GeneralContractor = 'http://schema.org/GeneralContractor';
/**
 * GeoCircle
 *
 * A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
 *           it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
 *           The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
 *
 * http://schema.org/GeoCircle
 */
var GeoCircle = 'http://schema.org/GeoCircle';
/**
 * GeoCoordinates
 *
 * The geographic coordinates of a place or event.
 *
 * http://schema.org/GeoCoordinates
 */
var GeoCoordinates = 'http://schema.org/GeoCoordinates';
/**
 * GeoShape
 *
 * The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.
 *
 * http://schema.org/GeoShape
 */
var GeoShape = 'http://schema.org/GeoShape';
/**
 * GiveAction
 *
 * The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Reciprocal of GiveAction.</li>
 * <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>
 * </ul>
 *
 *
 * http://schema.org/GiveAction
 */
var GiveAction = 'http://schema.org/GiveAction';
/**
 * GolfCourse
 *
 * A golf course.
 *
 * http://schema.org/GolfCourse
 */
var GolfCourse = 'http://schema.org/GolfCourse';
/**
 * GovernmentBuilding
 *
 * A government building.
 *
 * http://schema.org/GovernmentBuilding
 */
var GovernmentBuilding = 'http://schema.org/GovernmentBuilding';
/**
 * GovernmentOffice
 *
 * A government office&#x2014;for example, an IRS or DMV office.
 *
 * http://schema.org/GovernmentOffice
 */
var GovernmentOffice = 'http://schema.org/GovernmentOffice';
/**
 * GovernmentOrganization
 *
 * A governmental organization or agency.
 *
 * http://schema.org/GovernmentOrganization
 */
var GovernmentOrganization = 'http://schema.org/GovernmentOrganization';
/**
 * GovernmentPermit
 *
 * A permit issued by a government agency.
 *
 * http://schema.org/GovernmentPermit
 */
var GovernmentPermit = 'http://schema.org/GovernmentPermit';
/**
 * GovernmentService
 *
 * A service provided by a government organization, e.g. food stamps, veterans benefits, etc.
 *
 * http://schema.org/GovernmentService
 */
var GovernmentService = 'http://schema.org/GovernmentService';
/**
 * GroceryStore
 *
 * A grocery store.
 *
 * http://schema.org/GroceryStore
 */
var GroceryStore = 'http://schema.org/GroceryStore';
/**
 * HVACBusiness
 *
 * A business that provide Heating, Ventilation and Air Conditioning services.
 *
 * http://schema.org/HVACBusiness
 */
var HVACBusiness = 'http://schema.org/HVACBusiness';
/**
 * HairSalon
 *
 * A hair salon.
 *
 * http://schema.org/HairSalon
 */
var HairSalon = 'http://schema.org/HairSalon';
/**
 * HardwareStore
 *
 * A hardware store.
 *
 * http://schema.org/HardwareStore
 */
var HardwareStore = 'http://schema.org/HardwareStore';
/**
 * HealthAndBeautyBusiness
 *
 * Health and beauty.
 *
 * http://schema.org/HealthAndBeautyBusiness
 */
var HealthAndBeautyBusiness = 'http://schema.org/HealthAndBeautyBusiness';
/**
 * HealthClub
 *
 * A health club.
 *
 * http://schema.org/HealthClub
 */
var HealthClub = 'http://schema.org/HealthClub';
/**
 * HighSchool
 *
 * A high school.
 *
 * http://schema.org/HighSchool
 */
var HighSchool = 'http://schema.org/HighSchool';
/**
 * HinduTemple
 *
 * A Hindu temple.
 *
 * http://schema.org/HinduTemple
 */
var HinduTemple = 'http://schema.org/HinduTemple';
/**
 * HobbyShop
 *
 * A store that sells materials useful or necessary for various hobbies.
 *
 * http://schema.org/HobbyShop
 */
var HobbyShop = 'http://schema.org/HobbyShop';
/**
 * HomeAndConstructionBusiness
 *
 * A construction business.<br/><br/>
 *
 * A HomeAndConstructionBusiness is a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> that provides services around homes and buildings.<br/><br/>
 *
 * As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
 *
 * http://schema.org/HomeAndConstructionBusiness
 */
var HomeAndConstructionBusiness = 'http://schema.org/HomeAndConstructionBusiness';
/**
 * HomeGoodsStore
 *
 * A home goods store.
 *
 * http://schema.org/HomeGoodsStore
 */
var HomeGoodsStore = 'http://schema.org/HomeGoodsStore';
/**
 * Hospital
 *
 * A hospital.
 *
 * http://schema.org/Hospital
 */
var Hospital = 'http://schema.org/Hospital';
/**
 * Hostel
 *
 * A hostel - cheap accommodation, often in shared dormitories.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Hostel
 */
var Hostel = 'http://schema.org/Hostel';
/**
 * Hotel
 *
 * A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Hotel
 */
var Hotel = 'http://schema.org/Hotel';
/**
 * HotelRoom
 *
 * A hotel room is a single room in a hotel.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/HotelRoom
 */
var HotelRoom = 'http://schema.org/HotelRoom';
/**
 * House
 *
 * A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
 *
 * http://schema.org/House
 */
var House = 'http://schema.org/House';
/**
 * HousePainter
 *
 * A house painting service.
 *
 * http://schema.org/HousePainter
 */
var HousePainter = 'http://schema.org/HousePainter';
/**
 * HowTo
 *
 * Instructions that explain how to achieve a result by performing a sequence of steps.
 *
 * http://schema.org/HowTo
 */
var HowTo = 'http://schema.org/HowTo';
/**
 * HowToDirection
 *
 * A direction indicating a single action to do in the instructions for how to achieve a result.
 *
 * http://schema.org/HowToDirection
 */
var HowToDirection = 'http://schema.org/HowToDirection';
/**
 * HowToItem
 *
 * An item used as either a tool or supply when performing the instructions for how to to achieve a result.
 *
 * http://schema.org/HowToItem
 */
var HowToItem = 'http://schema.org/HowToItem';
/**
 * HowToSection
 *
 * A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).
 *
 * http://schema.org/HowToSection
 */
var HowToSection = 'http://schema.org/HowToSection';
/**
 * HowToStep
 *
 * A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.
 *
 * http://schema.org/HowToStep
 */
var HowToStep = 'http://schema.org/HowToStep';
/**
 * HowToSupply
 *
 * A supply consumed when performing the instructions for how to achieve a result.
 *
 * http://schema.org/HowToSupply
 */
var HowToSupply = 'http://schema.org/HowToSupply';
/**
 * HowToTip
 *
 * An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).
 *
 * http://schema.org/HowToTip
 */
var HowToTip = 'http://schema.org/HowToTip';
/**
 * HowToTool
 *
 * A tool used (but not consumed) when performing instructions for how to achieve a result.
 *
 * http://schema.org/HowToTool
 */
var HowToTool = 'http://schema.org/HowToTool';
/**
 * IceCreamShop
 *
 * An ice cream shop.
 *
 * http://schema.org/IceCreamShop
 */
var IceCreamShop = 'http://schema.org/IceCreamShop';
/**
 * IgnoreAction
 *
 * The act of intentionally disregarding the object. An agent ignores an object.
 *
 * http://schema.org/IgnoreAction
 */
var IgnoreAction = 'http://schema.org/IgnoreAction';
/**
 * ImageGallery
 *
 * Web page type: Image gallery page.
 *
 * http://schema.org/ImageGallery
 */
var ImageGallery = 'http://schema.org/ImageGallery';
/**
 * ImageObject
 *
 * An image file.
 *
 * http://schema.org/ImageObject
 */
var ImageObject = 'http://schema.org/ImageObject';
/**
 * IndividualProduct
 *
 * A single, identifiable product instance (e.g. a laptop with a particular serial number).
 *
 * http://schema.org/IndividualProduct
 */
var IndividualProduct = 'http://schema.org/IndividualProduct';
/**
 * InformAction
 *
 * The act of notifying someone of information pertinent to them, with no expectation of a response.
 *
 * http://schema.org/InformAction
 */
var InformAction = 'http://schema.org/InformAction';
/**
 * InsertAction
 *
 * The act of adding at a specific location in an ordered collection.
 *
 * http://schema.org/InsertAction
 */
var InsertAction = 'http://schema.org/InsertAction';
/**
 * InstallAction
 *
 * The act of installing an application.
 *
 * http://schema.org/InstallAction
 */
var InstallAction = 'http://schema.org/InstallAction';
/**
 * InsuranceAgency
 *
 * An Insurance agency.
 *
 * http://schema.org/InsuranceAgency
 */
var InsuranceAgency = 'http://schema.org/InsuranceAgency';
/**
 * Intangible
 *
 * A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
 *
 * http://schema.org/Intangible
 */
var Intangible = 'http://schema.org/Intangible';
/**
 * Integer
 *
 * Data type: Integer.
 *
 * http://schema.org/Integer
 */
var Integer = 'http://schema.org/Integer';
/**
 * InteractAction
 *
 * The act of interacting with another person or organization.
 *
 * http://schema.org/InteractAction
 */
var InteractAction = 'http://schema.org/InteractAction';
/**
 * InteractionCounter
 *
 * A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.
 *
 * http://schema.org/InteractionCounter
 */
var InteractionCounter = 'http://schema.org/InteractionCounter';
/**
 * InternetCafe
 *
 * An internet cafe.
 *
 * http://schema.org/InternetCafe
 */
var InternetCafe = 'http://schema.org/InternetCafe';
/**
 * InvestmentOrDeposit
 *
 * A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.
 *
 * http://schema.org/InvestmentOrDeposit
 */
var InvestmentOrDeposit = 'http://schema.org/InvestmentOrDeposit';
/**
 * InviteAction
 *
 * The act of asking someone to attend an event. Reciprocal of RsvpAction.
 *
 * http://schema.org/InviteAction
 */
var InviteAction = 'http://schema.org/InviteAction';
/**
 * Invoice
 *
 * A statement of the money due for goods or services; a bill.
 *
 * http://schema.org/Invoice
 */
var Invoice = 'http://schema.org/Invoice';
/**
 * ItemAvailability
 *
 * A list of possible product availability options.
 *
 * http://schema.org/ItemAvailability
 */
var ItemAvailability = 'http://schema.org/ItemAvailability';
/**
 * ItemList
 *
 * A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.
 *
 * http://schema.org/ItemList
 */
var ItemList = 'http://schema.org/ItemList';
/**
 * ItemListOrderType
 *
 * Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.
 *
 * http://schema.org/ItemListOrderType
 */
var ItemListOrderType = 'http://schema.org/ItemListOrderType';
/**
 * ItemPage
 *
 * A page devoted to a single item, such as a particular product or hotel.
 *
 * http://schema.org/ItemPage
 */
var ItemPage = 'http://schema.org/ItemPage';
/**
 * JewelryStore
 *
 * A jewelry store.
 *
 * http://schema.org/JewelryStore
 */
var JewelryStore = 'http://schema.org/JewelryStore';
/**
 * JobPosting
 *
 * A listing that describes a job opening in a certain organization.
 *
 * http://schema.org/JobPosting
 */
var JobPosting = 'http://schema.org/JobPosting';
/**
 * JoinAction
 *
 * An agent joins an event/group with participants/friends at a location.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>
 * <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>
 * <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>
 * </ul>
 *
 *
 * http://schema.org/JoinAction
 */
var JoinAction = 'http://schema.org/JoinAction';
/**
 * LakeBodyOfWater
 *
 * A lake (for example, Lake Pontrachain).
 *
 * http://schema.org/LakeBodyOfWater
 */
var LakeBodyOfWater = 'http://schema.org/LakeBodyOfWater';
/**
 * Landform
 *
 * A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.
 *
 * http://schema.org/Landform
 */
var Landform = 'http://schema.org/Landform';
/**
 * LandmarksOrHistoricalBuildings
 *
 * An historical landmark or building.
 *
 * http://schema.org/LandmarksOrHistoricalBuildings
 */
var LandmarksOrHistoricalBuildings = 'http://schema.org/LandmarksOrHistoricalBuildings';
/**
 * Language
 *
 * Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> can be used via the <a class="localLink" href="http://schema.org/alternateName">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class="localLink" href="http://schema.org/ComputerLanguage">ComputerLanguage</a>.
 *
 * http://schema.org/Language
 */
var Language = 'http://schema.org/Language';
/**
 * LeaveAction
 *
 * An agent leaves an event / group with participants/friends at a location.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: The antonym of LeaveAction.</li>
 * <li><a class="localLink" href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>
 * </ul>
 *
 *
 * http://schema.org/LeaveAction
 */
var LeaveAction = 'http://schema.org/LeaveAction';
/**
 * LegalService
 *
 * A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.<br/><br/>
 *
 * As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
 *
 * http://schema.org/LegalService
 */
var LegalService = 'http://schema.org/LegalService';
/**
 * LegislativeBuilding
 *
 * A legislative building&#x2014;for example, the state capitol.
 *
 * http://schema.org/LegislativeBuilding
 */
var LegislativeBuilding = 'http://schema.org/LegislativeBuilding';
/**
 * LendAction
 *
 * The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of LendAction.</li>
 * </ul>
 *
 *
 * http://schema.org/LendAction
 */
var LendAction = 'http://schema.org/LendAction';
/**
 * Library
 *
 * A library.
 *
 * http://schema.org/Library
 */
var Library = 'http://schema.org/Library';
/**
 * LikeAction
 *
 * The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/LikeAction
 */
var LikeAction = 'http://schema.org/LikeAction';
/**
 * LiquorStore
 *
 * A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.
 *
 * http://schema.org/LiquorStore
 */
var LiquorStore = 'http://schema.org/LiquorStore';
/**
 * ListItem
 *
 * An list item, e.g. a step in a checklist or how-to description.
 *
 * http://schema.org/ListItem
 */
var ListItem = 'http://schema.org/ListItem';
/**
 * ListenAction
 *
 * The act of consuming audio content.
 *
 * http://schema.org/ListenAction
 */
var ListenAction = 'http://schema.org/ListenAction';
/**
 * LiteraryEvent
 *
 * Event type: Literary event.
 *
 * http://schema.org/LiteraryEvent
 */
var LiteraryEvent = 'http://schema.org/LiteraryEvent';
/**
 * LiveBlogPosting
 *
 * A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates.
 *
 * http://schema.org/LiveBlogPosting
 */
var LiveBlogPosting = 'http://schema.org/LiveBlogPosting';
/**
 * LoanOrCredit
 *
 * A financial product for the loaning of an amount of money under agreed terms and charges.
 *
 * http://schema.org/LoanOrCredit
 */
var LoanOrCredit = 'http://schema.org/LoanOrCredit';
/**
 * LocalBusiness
 *
 * A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
 *
 * http://schema.org/LocalBusiness
 */
var LocalBusiness = 'http://schema.org/LocalBusiness';
/**
 * LocationFeatureSpecification
 *
 * Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.
 *
 * http://schema.org/LocationFeatureSpecification
 */
var LocationFeatureSpecification = 'http://schema.org/LocationFeatureSpecification';
/**
 * LockerDelivery
 *
 * A DeliveryMethod in which an item is made available via locker.
 *
 * http://schema.org/LockerDelivery
 */
var LockerDelivery = 'http://schema.org/LockerDelivery';
/**
 * Locksmith
 *
 * A locksmith.
 *
 * http://schema.org/Locksmith
 */
var Locksmith = 'http://schema.org/Locksmith';
/**
 * LodgingBusiness
 *
 * A lodging business, such as a motel, hotel, or inn.
 *
 * http://schema.org/LodgingBusiness
 */
var LodgingBusiness = 'http://schema.org/LodgingBusiness';
/**
 * LodgingReservation
 *
 * A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
 *
 * http://schema.org/LodgingReservation
 */
var LodgingReservation = 'http://schema.org/LodgingReservation';
/**
 * LoseAction
 *
 * The act of being defeated in a competitive activity.
 *
 * http://schema.org/LoseAction
 */
var LoseAction = 'http://schema.org/LoseAction';
/**
 * Map
 *
 * A map.
 *
 * http://schema.org/Map
 */
var Map = 'http://schema.org/Map';
/**
 * MapCategoryType
 *
 * An enumeration of several kinds of Map.
 *
 * http://schema.org/MapCategoryType
 */
var MapCategoryType = 'http://schema.org/MapCategoryType';
/**
 * MarryAction
 *
 * The act of marrying a person.
 *
 * http://schema.org/MarryAction
 */
var MarryAction = 'http://schema.org/MarryAction';
/**
 * Mass
 *
 * Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.
 *
 * http://schema.org/Mass
 */
var Mass = 'http://schema.org/Mass';
/**
 * MediaObject
 *
 * A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
 *
 * http://schema.org/MediaObject
 */
var MediaObject = 'http://schema.org/MediaObject';
/**
 * MediaSubscription
 *
 * A subscription which allows a user to access media including audio, video, books, etc.
 *
 * http://schema.org/MediaSubscription
 */
var MediaSubscription = 'http://schema.org/MediaSubscription';
/**
 * MedicalOrganization
 *
 * A medical organization (physical or not), such as hospital, institution or clinic.
 *
 * http://schema.org/MedicalOrganization
 */
var MedicalOrganization = 'http://schema.org/MedicalOrganization';
/**
 * MeetingRoom
 *
 * A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/MeetingRoom
 */
var MeetingRoom = 'http://schema.org/MeetingRoom';
/**
 * MensClothingStore
 *
 * A men's clothing store.
 *
 * http://schema.org/MensClothingStore
 */
var MensClothingStore = 'http://schema.org/MensClothingStore';
/**
 * Menu
 *
 * A structured representation of food or drink items available from a FoodEstablishment.
 *
 * http://schema.org/Menu
 */
var Menu = 'http://schema.org/Menu';
/**
 * MenuItem
 *
 * A food or drink item listed in a menu or menu section.
 *
 * http://schema.org/MenuItem
 */
var MenuItem = 'http://schema.org/MenuItem';
/**
 * MenuSection
 *
 * A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.
 *
 * http://schema.org/MenuSection
 */
var MenuSection = 'http://schema.org/MenuSection';
/**
 * Message
 *
 * A single message from a sender to one or more organizations or people.
 *
 * http://schema.org/Message
 */
var Message = 'http://schema.org/Message';
/**
 * MiddleSchool
 *
 * A middle school (typically for children aged around 11-14, although this varies somewhat).
 *
 * http://schema.org/MiddleSchool
 */
var MiddleSchool = 'http://schema.org/MiddleSchool';
/**
 * MobileApplication
 *
 * A software application designed specifically to work well on a mobile device such as a telephone.
 *
 * http://schema.org/MobileApplication
 */
var MobileApplication = 'http://schema.org/MobileApplication';
/**
 * MobilePhoneStore
 *
 * A store that sells mobile phones and related accessories.
 *
 * http://schema.org/MobilePhoneStore
 */
var MobilePhoneStore = 'http://schema.org/MobilePhoneStore';
/**
 * MonetaryAmount
 *
 * A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.
 *
 * http://schema.org/MonetaryAmount
 */
var MonetaryAmount = 'http://schema.org/MonetaryAmount';
/**
 * MonetaryAmountDistribution
 *
 * A statistical distribution of monetary amounts.
 *
 * http://schema.org/MonetaryAmountDistribution
 */
var MonetaryAmountDistribution = 'http://schema.org/MonetaryAmountDistribution';
/**
 * Mosque
 *
 * A mosque.
 *
 * http://schema.org/Mosque
 */
var Mosque = 'http://schema.org/Mosque';
/**
 * Motel
 *
 * A motel.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Motel
 */
var Motel = 'http://schema.org/Motel';
/**
 * MotorcycleDealer
 *
 * A motorcycle dealer.
 *
 * http://schema.org/MotorcycleDealer
 */
var MotorcycleDealer = 'http://schema.org/MotorcycleDealer';
/**
 * MotorcycleRepair
 *
 * A motorcycle repair shop.
 *
 * http://schema.org/MotorcycleRepair
 */
var MotorcycleRepair = 'http://schema.org/MotorcycleRepair';
/**
 * Mountain
 *
 * A mountain, like Mount Whitney or Mount Everest.
 *
 * http://schema.org/Mountain
 */
var Mountain = 'http://schema.org/Mountain';
/**
 * MoveAction
 *
 * The act of an agent relocating to a place.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/TransferAction">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>
 * </ul>
 *
 *
 * http://schema.org/MoveAction
 */
var MoveAction = 'http://schema.org/MoveAction';
/**
 * Movie
 *
 * A movie.
 *
 * http://schema.org/Movie
 */
var Movie = 'http://schema.org/Movie';
/**
 * MovieClip
 *
 * A short segment/part of a movie.
 *
 * http://schema.org/MovieClip
 */
var MovieClip = 'http://schema.org/MovieClip';
/**
 * MovieRentalStore
 *
 * A movie rental store.
 *
 * http://schema.org/MovieRentalStore
 */
var MovieRentalStore = 'http://schema.org/MovieRentalStore';
/**
 * MovieSeries
 *
 * A series of movies. Included movies can be indicated with the hasPart property.
 *
 * http://schema.org/MovieSeries
 */
var MovieSeries = 'http://schema.org/MovieSeries';
/**
 * MovieTheater
 *
 * A movie theater.
 *
 * http://schema.org/MovieTheater
 */
var MovieTheater = 'http://schema.org/MovieTheater';
/**
 * MovingCompany
 *
 * A moving company.
 *
 * http://schema.org/MovingCompany
 */
var MovingCompany = 'http://schema.org/MovingCompany';
/**
 * Museum
 *
 * A museum.
 *
 * http://schema.org/Museum
 */
var Museum = 'http://schema.org/Museum';
/**
 * MusicAlbum
 *
 * A collection of music tracks.
 *
 * http://schema.org/MusicAlbum
 */
var MusicAlbum = 'http://schema.org/MusicAlbum';
/**
 * MusicAlbumProductionType
 *
 * Classification of the album by it's type of content: soundtrack, live album, studio album, etc.
 *
 * http://schema.org/MusicAlbumProductionType
 */
var MusicAlbumProductionType = 'http://schema.org/MusicAlbumProductionType';
/**
 * MusicAlbumReleaseType
 *
 * The kind of release which this album is: single, EP or album.
 *
 * http://schema.org/MusicAlbumReleaseType
 */
var MusicAlbumReleaseType = 'http://schema.org/MusicAlbumReleaseType';
/**
 * MusicComposition
 *
 * A musical composition.
 *
 * http://schema.org/MusicComposition
 */
var MusicComposition = 'http://schema.org/MusicComposition';
/**
 * MusicEvent
 *
 * Event type: Music event.
 *
 * http://schema.org/MusicEvent
 */
var MusicEvent = 'http://schema.org/MusicEvent';
/**
 * MusicGroup
 *
 * A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.
 *
 * http://schema.org/MusicGroup
 */
var MusicGroup = 'http://schema.org/MusicGroup';
/**
 * MusicPlaylist
 *
 * A collection of music tracks in playlist form.
 *
 * http://schema.org/MusicPlaylist
 */
var MusicPlaylist = 'http://schema.org/MusicPlaylist';
/**
 * MusicRecording
 *
 * A music recording (track), usually a single song.
 *
 * http://schema.org/MusicRecording
 */
var MusicRecording = 'http://schema.org/MusicRecording';
/**
 * MusicRelease
 *
 * A MusicRelease is a specific release of a music album.
 *
 * http://schema.org/MusicRelease
 */
var MusicRelease = 'http://schema.org/MusicRelease';
/**
 * MusicReleaseFormatType
 *
 * Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).
 *
 * http://schema.org/MusicReleaseFormatType
 */
var MusicReleaseFormatType = 'http://schema.org/MusicReleaseFormatType';
/**
 * MusicStore
 *
 * A music store.
 *
 * http://schema.org/MusicStore
 */
var MusicStore = 'http://schema.org/MusicStore';
/**
 * MusicVenue
 *
 * A music venue.
 *
 * http://schema.org/MusicVenue
 */
var MusicVenue = 'http://schema.org/MusicVenue';
/**
 * MusicVideoObject
 *
 * A music video file.
 *
 * http://schema.org/MusicVideoObject
 */
var MusicVideoObject = 'http://schema.org/MusicVideoObject';
/**
 * NGO
 *
 * Organization: Non-governmental Organization.
 *
 * http://schema.org/NGO
 */
var NGO = 'http://schema.org/NGO';
/**
 * NailSalon
 *
 * A nail salon.
 *
 * http://schema.org/NailSalon
 */
var NailSalon = 'http://schema.org/NailSalon';
/**
 * NewsArticle
 *
 * A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>
 *
 * A more detailed overview of <a href="/docs/news.html">schema.org News markup</a> is also available.
 *
 * http://schema.org/NewsArticle
 */
var NewsArticle = 'http://schema.org/NewsArticle';
/**
 * NightClub
 *
 * A nightclub or discotheque.
 *
 * http://schema.org/NightClub
 */
var NightClub = 'http://schema.org/NightClub';
/**
 * Notary
 *
 * A notary.
 *
 * http://schema.org/Notary
 */
var Notary = 'http://schema.org/Notary';
/**
 * NoteDigitalDocument
 *
 * A file containing a note, primarily for the author.
 *
 * http://schema.org/NoteDigitalDocument
 */
var NoteDigitalDocument = 'http://schema.org/NoteDigitalDocument';
/**
 * Number
 *
 * Data type: Number.<br/><br/>
 *
 * Usage guidelines:<br/><br/>
 *
 * <ul>
 * <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
 * <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
 * </ul>
 *
 *
 * http://schema.org/Number
 */
var Number = 'http://schema.org/Number';
/**
 * NutritionInformation
 *
 * Nutritional information about the recipe.
 *
 * http://schema.org/NutritionInformation
 */
var NutritionInformation = 'http://schema.org/NutritionInformation';
/**
 * Occupation
 *
 * A profession, may involve prolonged training and/or a formal qualification.
 *
 * http://schema.org/Occupation
 */
var Occupation = 'http://schema.org/Occupation';
/**
 * OceanBodyOfWater
 *
 * An ocean (for example, the Pacific).
 *
 * http://schema.org/OceanBodyOfWater
 */
var OceanBodyOfWater = 'http://schema.org/OceanBodyOfWater';
/**
 * Offer
 *
 * An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>
 *
 * For <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related fields, see <a href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check Digit calculator</a> and <a href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation guide</a> from <a href="http://www.gs1.org/">GS1</a>.
 *
 * http://schema.org/Offer
 */
var Offer = 'http://schema.org/Offer';
/**
 * OfferCatalog
 *
 * An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.
 *
 * http://schema.org/OfferCatalog
 */
var OfferCatalog = 'http://schema.org/OfferCatalog';
/**
 * OfferItemCondition
 *
 * A list of possible conditions for the item.
 *
 * http://schema.org/OfferItemCondition
 */
var OfferItemCondition = 'http://schema.org/OfferItemCondition';
/**
 * OfficeEquipmentStore
 *
 * An office equipment store.
 *
 * http://schema.org/OfficeEquipmentStore
 */
var OfficeEquipmentStore = 'http://schema.org/OfficeEquipmentStore';
/**
 * OnDemandEvent
 *
 * A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.
 *
 * http://schema.org/OnDemandEvent
 */
var OnDemandEvent = 'http://schema.org/OnDemandEvent';
/**
 * OpeningHoursSpecification
 *
 * A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>
 *
 * The place is <strong>open</strong> if the <a class="localLink" href="http://schema.org/opens">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>
 *
 * If the value for the <a class="localLink" href="http://schema.org/closes">closes</a> property is less than the value for the <a class="localLink" href="http://schema.org/opens">opens</a> property then the hour range is assumed to span over the next day.
 *
 * http://schema.org/OpeningHoursSpecification
 */
var OpeningHoursSpecification = 'http://schema.org/OpeningHoursSpecification';
/**
 * Order
 *
 * An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
 *
 * http://schema.org/Order
 */
var Order = 'http://schema.org/Order';
/**
 * OrderAction
 *
 * An agent orders an object/product/service to be delivered/sent.
 *
 * http://schema.org/OrderAction
 */
var OrderAction = 'http://schema.org/OrderAction';
/**
 * OrderItem
 *
 * An order item is a line of an order. It includes the quantity and shipping details of a bought offer.
 *
 * http://schema.org/OrderItem
 */
var OrderItem = 'http://schema.org/OrderItem';
/**
 * OrderStatus
 *
 * Enumerated status values for Order.
 *
 * http://schema.org/OrderStatus
 */
var OrderStatus = 'http://schema.org/OrderStatus';
/**
 * Organization
 *
 * An organization such as a school, NGO, corporation, club, etc.
 *
 * http://schema.org/Organization
 */
var Organization = 'http://schema.org/Organization';
/**
 * OrganizationRole
 *
 * A subclass of Role used to describe roles within organizations.
 *
 * http://schema.org/OrganizationRole
 */
var OrganizationRole = 'http://schema.org/OrganizationRole';
/**
 * OrganizeAction
 *
 * The act of manipulating/administering/supervising/controlling one or more objects.
 *
 * http://schema.org/OrganizeAction
 */
var OrganizeAction = 'http://schema.org/OrganizeAction';
/**
 * OutletStore
 *
 * An outlet store.
 *
 * http://schema.org/OutletStore
 */
var OutletStore = 'http://schema.org/OutletStore';
/**
 * OwnershipInfo
 *
 * A structured value providing information about when a certain organization or person owned a certain product.
 *
 * http://schema.org/OwnershipInfo
 */
var OwnershipInfo = 'http://schema.org/OwnershipInfo';
/**
 * PaintAction
 *
 * The act of producing a painting, typically with paint and canvas as instruments.
 *
 * http://schema.org/PaintAction
 */
var PaintAction = 'http://schema.org/PaintAction';
/**
 * Painting
 *
 * A painting.
 *
 * http://schema.org/Painting
 */
var Painting = 'http://schema.org/Painting';
/**
 * ParcelDelivery
 *
 * The delivery of a parcel either via the postal service or a commercial service.
 *
 * http://schema.org/ParcelDelivery
 */
var ParcelDelivery = 'http://schema.org/ParcelDelivery';
/**
 * ParcelService
 *
 * A private parcel service as the delivery mode available for a certain offer.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#DHL</li>
 * <li>http://purl.org/goodrelations/v1#FederalExpress</li>
 * <li>http://purl.org/goodrelations/v1#UPS</li>
 * </ul>
 *
 *
 * http://schema.org/ParcelService
 */
var ParcelService = 'http://schema.org/ParcelService';
/**
 * ParentAudience
 *
 * A set of characteristics describing parents, who can be interested in viewing some content.
 *
 * http://schema.org/ParentAudience
 */
var ParentAudience = 'http://schema.org/ParentAudience';
/**
 * Park
 *
 * A park.
 *
 * http://schema.org/Park
 */
var Park = 'http://schema.org/Park';
/**
 * ParkingFacility
 *
 * A parking lot or other parking facility.
 *
 * http://schema.org/ParkingFacility
 */
var ParkingFacility = 'http://schema.org/ParkingFacility';
/**
 * PawnShop
 *
 * A shop that will buy, or lend money against the security of, personal possessions.
 *
 * http://schema.org/PawnShop
 */
var PawnShop = 'http://schema.org/PawnShop';
/**
 * PayAction
 *
 * An agent pays a price to a participant.
 *
 * http://schema.org/PayAction
 */
var PayAction = 'http://schema.org/PayAction';
/**
 * PaymentCard
 *
 * A payment method using a credit, debit, store or other card to associate the payment with an account.
 *
 * http://schema.org/PaymentCard
 */
var PaymentCard = 'http://schema.org/PaymentCard';
/**
 * PaymentChargeSpecification
 *
 * The costs of settling the payment using a particular payment method.
 *
 * http://schema.org/PaymentChargeSpecification
 */
var PaymentChargeSpecification = 'http://schema.org/PaymentChargeSpecification';
/**
 * PaymentMethod
 *
 * A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>
 * <li>http://purl.org/goodrelations/v1#ByInvoice</li>
 * <li>http://purl.org/goodrelations/v1#Cash</li>
 * <li>http://purl.org/goodrelations/v1#CheckInAdvance</li>
 * <li>http://purl.org/goodrelations/v1#COD</li>
 * <li>http://purl.org/goodrelations/v1#DirectDebit</li>
 * <li>http://purl.org/goodrelations/v1#GoogleCheckout</li>
 * <li>http://purl.org/goodrelations/v1#PayPal</li>
 * <li>http://purl.org/goodrelations/v1#PaySwarm</li>
 * </ul>
 *
 *
 * http://schema.org/PaymentMethod
 */
var PaymentMethod = 'http://schema.org/PaymentMethod';
/**
 * PaymentService
 *
 * A Service to transfer funds from a person or organization to a beneficiary person or organization.
 *
 * http://schema.org/PaymentService
 */
var PaymentService = 'http://schema.org/PaymentService';
/**
 * PaymentStatusType
 *
 * A specific payment status. For example, PaymentDue, PaymentComplete, etc.
 *
 * http://schema.org/PaymentStatusType
 */
var PaymentStatusType = 'http://schema.org/PaymentStatusType';
/**
 * PeopleAudience
 *
 * A set of characteristics belonging to people, e.g. who compose an item's target audience.
 *
 * http://schema.org/PeopleAudience
 */
var PeopleAudience = 'http://schema.org/PeopleAudience';
/**
 * PerformAction
 *
 * The act of participating in performance arts.
 *
 * http://schema.org/PerformAction
 */
var PerformAction = 'http://schema.org/PerformAction';
/**
 * PerformanceRole
 *
 * A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.
 *
 * http://schema.org/PerformanceRole
 */
var PerformanceRole = 'http://schema.org/PerformanceRole';
/**
 * PerformingArtsTheater
 *
 * A theater or other performing art center.
 *
 * http://schema.org/PerformingArtsTheater
 */
var PerformingArtsTheater = 'http://schema.org/PerformingArtsTheater';
/**
 * PerformingGroup
 *
 * A performance group, such as a band, an orchestra, or a circus.
 *
 * http://schema.org/PerformingGroup
 */
var PerformingGroup = 'http://schema.org/PerformingGroup';
/**
 * Periodical
 *
 * A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.<br/><br/>
 *
 * See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
 *
 * http://schema.org/Periodical
 */
var Periodical = 'http://schema.org/Periodical';
/**
 * Permit
 *
 * A permit issued by an organization, e.g. a parking pass.
 *
 * http://schema.org/Permit
 */
var Permit = 'http://schema.org/Permit';
/**
 * Person
 *
 * A person (alive, dead, undead, or fictional).
 *
 * http://schema.org/Person
 */
var Person = 'http://schema.org/Person';
/**
 * PetStore
 *
 * A pet store.
 *
 * http://schema.org/PetStore
 */
var PetStore = 'http://schema.org/PetStore';
/**
 * Pharmacy
 *
 * A pharmacy or drugstore.
 *
 * http://schema.org/Pharmacy
 */
var Pharmacy = 'http://schema.org/Pharmacy';
/**
 * Photograph
 *
 * A photograph.
 *
 * http://schema.org/Photograph
 */
var Photograph = 'http://schema.org/Photograph';
/**
 * PhotographAction
 *
 * The act of capturing still images of objects using a camera.
 *
 * http://schema.org/PhotographAction
 */
var PhotographAction = 'http://schema.org/PhotographAction';
/**
 * Physician
 *
 * A doctor's office.
 *
 * http://schema.org/Physician
 */
var Physician = 'http://schema.org/Physician';
/**
 * Place
 *
 * Entities that have a somewhat fixed, physical extension.
 *
 * http://schema.org/Place
 */
var Place = 'http://schema.org/Place';
/**
 * PlaceOfWorship
 *
 * Place of worship, such as a church, synagogue, or mosque.
 *
 * http://schema.org/PlaceOfWorship
 */
var PlaceOfWorship = 'http://schema.org/PlaceOfWorship';
/**
 * PlanAction
 *
 * The act of planning the execution of an event/task/action/reservation/plan to a future date.
 *
 * http://schema.org/PlanAction
 */
var PlanAction = 'http://schema.org/PlanAction';
/**
 * PlayAction
 *
 * The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>
 * <li><a class="localLink" href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>
 * </ul>
 *
 *
 * http://schema.org/PlayAction
 */
var PlayAction = 'http://schema.org/PlayAction';
/**
 * Playground
 *
 * A playground.
 *
 * http://schema.org/Playground
 */
var Playground = 'http://schema.org/Playground';
/**
 * Plumber
 *
 * A plumbing service.
 *
 * http://schema.org/Plumber
 */
var Plumber = 'http://schema.org/Plumber';
/**
 * PoliceStation
 *
 * A police station.
 *
 * http://schema.org/PoliceStation
 */
var PoliceStation = 'http://schema.org/PoliceStation';
/**
 * Pond
 *
 * A pond.
 *
 * http://schema.org/Pond
 */
var Pond = 'http://schema.org/Pond';
/**
 * PostOffice
 *
 * A post office.
 *
 * http://schema.org/PostOffice
 */
var PostOffice = 'http://schema.org/PostOffice';
/**
 * PostalAddress
 *
 * The mailing address.
 *
 * http://schema.org/PostalAddress
 */
var PostalAddress = 'http://schema.org/PostalAddress';
/**
 * PreOrderAction
 *
 * An agent orders a (not yet released) object/product/service to be delivered/sent.
 *
 * http://schema.org/PreOrderAction
 */
var PreOrderAction = 'http://schema.org/PreOrderAction';
/**
 * PrependAction
 *
 * The act of inserting at the beginning if an ordered collection.
 *
 * http://schema.org/PrependAction
 */
var PrependAction = 'http://schema.org/PrependAction';
/**
 * Preschool
 *
 * A preschool.
 *
 * http://schema.org/Preschool
 */
var Preschool = 'http://schema.org/Preschool';
/**
 * PresentationDigitalDocument
 *
 * A file containing slides or used for a presentation.
 *
 * http://schema.org/PresentationDigitalDocument
 */
var PresentationDigitalDocument = 'http://schema.org/PresentationDigitalDocument';
/**
 * PriceSpecification
 *
 * A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.
 *
 * http://schema.org/PriceSpecification
 */
var PriceSpecification = 'http://schema.org/PriceSpecification';
/**
 * Product
 *
 * Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.
 *
 * http://schema.org/Product
 */
var Product = 'http://schema.org/Product';
/**
 * ProductModel
 *
 * A datasheet or vendor specification of a product (in the sense of a prototypical description).
 *
 * http://schema.org/ProductModel
 */
var ProductModel = 'http://schema.org/ProductModel';
/**
 * ProfessionalService
 *
 * Original definition: "provider of professional services."<br/><br/>
 *
 * The general <a class="localLink" href="http://schema.org/ProfessionalService">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class="localLink" href="http://schema.org/Service">Service</a>. For reference, the types that it included were: <a class="localLink" href="http://schema.org/Dentist">Dentist</a>,
 *         <a class="localLink" href="http://schema.org/AccountingService">AccountingService</a>, <a class="localLink" href="http://schema.org/Attorney">Attorney</a>, <a class="localLink" href="http://schema.org/Notary">Notary</a>, as well as types for several kinds of <a class="localLink" href="http://schema.org/HomeAndConstructionBusiness">HomeAndConstructionBusiness</a>: <a class="localLink" href="http://schema.org/Electrician">Electrician</a>, <a class="localLink" href="http://schema.org/GeneralContractor">GeneralContractor</a>,
 *         <a class="localLink" href="http://schema.org/HousePainter">HousePainter</a>, <a class="localLink" href="http://schema.org/Locksmith">Locksmith</a>, <a class="localLink" href="http://schema.org/Plumber">Plumber</a>, <a class="localLink" href="http://schema.org/RoofingContractor">RoofingContractor</a>. <a class="localLink" href="http://schema.org/LegalService">LegalService</a> was introduced as a more inclusive supertype of <a class="localLink" href="http://schema.org/Attorney">Attorney</a>.
 *
 * http://schema.org/ProfessionalService
 */
var ProfessionalService = 'http://schema.org/ProfessionalService';
/**
 * ProfilePage
 *
 * Web page type: Profile page.
 *
 * http://schema.org/ProfilePage
 */
var ProfilePage = 'http://schema.org/ProfilePage';
/**
 * ProgramMembership
 *
 * Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
 *
 * http://schema.org/ProgramMembership
 */
var ProgramMembership = 'http://schema.org/ProgramMembership';
/**
 * PropertyValue
 *
 * A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>
 *
 * Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.
 *
 * http://schema.org/PropertyValue
 */
var PropertyValue = 'http://schema.org/PropertyValue';
/**
 * PropertyValueSpecification
 *
 * A Property value specification.
 *
 * http://schema.org/PropertyValueSpecification
 */
var PropertyValueSpecification = 'http://schema.org/PropertyValueSpecification';
/**
 * PublicSwimmingPool
 *
 * A public swimming pool.
 *
 * http://schema.org/PublicSwimmingPool
 */
var PublicSwimmingPool = 'http://schema.org/PublicSwimmingPool';
/**
 * PublicationEvent
 *
 * A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.
 *
 * http://schema.org/PublicationEvent
 */
var PublicationEvent = 'http://schema.org/PublicationEvent';
/**
 * PublicationIssue
 *
 * A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.<br/><br/>
 *
 * See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
 *
 * http://schema.org/PublicationIssue
 */
var PublicationIssue = 'http://schema.org/PublicationIssue';
/**
 * PublicationVolume
 *
 * A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.<br/><br/>
 *
 * See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
 *
 * http://schema.org/PublicationVolume
 */
var PublicationVolume = 'http://schema.org/PublicationVolume';
/**
 * QAPage
 *
 * A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).
 *
 * http://schema.org/QAPage
 */
var QAPage = 'http://schema.org/QAPage';
/**
 * QualitativeValue
 *
 * A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
 *
 * http://schema.org/QualitativeValue
 */
var QualitativeValue = 'http://schema.org/QualitativeValue';
/**
 * QuantitativeValue
 *
 * A point value or interval for product characteristics and other purposes.
 *
 * http://schema.org/QuantitativeValue
 */
var QuantitativeValue = 'http://schema.org/QuantitativeValue';
/**
 * QuantitativeValueDistribution
 *
 * A statistical distribution of values.
 *
 * http://schema.org/QuantitativeValueDistribution
 */
var QuantitativeValueDistribution = 'http://schema.org/QuantitativeValueDistribution';
/**
 * Quantity
 *
 * Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.
 *
 * http://schema.org/Quantity
 */
var Quantity = 'http://schema.org/Quantity';
/**
 * Question
 *
 * A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.
 *
 * http://schema.org/Question
 */
var Question = 'http://schema.org/Question';
/**
 * QuoteAction
 *
 * An agent quotes/estimates/appraises an object/product/service with a price at a location/store.
 *
 * http://schema.org/QuoteAction
 */
var QuoteAction = 'http://schema.org/QuoteAction';
/**
 * RVPark
 *
 * A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like.
 *
 * http://schema.org/RVPark
 */
var RVPark = 'http://schema.org/RVPark';
/**
 * RadioChannel
 *
 * A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.
 *
 * http://schema.org/RadioChannel
 */
var RadioChannel = 'http://schema.org/RadioChannel';
/**
 * RadioClip
 *
 * A short radio program or a segment/part of a radio program.
 *
 * http://schema.org/RadioClip
 */
var RadioClip = 'http://schema.org/RadioClip';
/**
 * RadioEpisode
 *
 * A radio episode which can be part of a series or season.
 *
 * http://schema.org/RadioEpisode
 */
var RadioEpisode = 'http://schema.org/RadioEpisode';
/**
 * RadioSeason
 *
 * Season dedicated to radio broadcast and associated online delivery.
 *
 * http://schema.org/RadioSeason
 */
var RadioSeason = 'http://schema.org/RadioSeason';
/**
 * RadioSeries
 *
 * CreativeWorkSeries dedicated to radio broadcast and associated online delivery.
 *
 * http://schema.org/RadioSeries
 */
var RadioSeries = 'http://schema.org/RadioSeries';
/**
 * RadioStation
 *
 * A radio station.
 *
 * http://schema.org/RadioStation
 */
var RadioStation = 'http://schema.org/RadioStation';
/**
 * Rating
 *
 * A rating is an evaluation on a numeric scale, such as 1 to 5 stars.
 *
 * http://schema.org/Rating
 */
var Rating = 'http://schema.org/Rating';
/**
 * ReactAction
 *
 * The act of responding instinctively and emotionally to an object, expressing a sentiment.
 *
 * http://schema.org/ReactAction
 */
var ReactAction = 'http://schema.org/ReactAction';
/**
 * ReadAction
 *
 * The act of consuming written content.
 *
 * http://schema.org/ReadAction
 */
var ReadAction = 'http://schema.org/ReadAction';
/**
 * RealEstateAgent
 *
 * A real-estate agent.
 *
 * http://schema.org/RealEstateAgent
 */
var RealEstateAgent = 'http://schema.org/RealEstateAgent';
/**
 * ReceiveAction
 *
 * The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: The reciprocal of ReceiveAction.</li>
 * <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>
 * </ul>
 *
 *
 * http://schema.org/ReceiveAction
 */
var ReceiveAction = 'http://schema.org/ReceiveAction';
/**
 * Recipe
 *
 * A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class="localLink" href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a class="localLink" href="http://schema.org/keywords">keywords</a> property can also be used to add more detail.
 *
 * http://schema.org/Recipe
 */
var Recipe = 'http://schema.org/Recipe';
/**
 * RecyclingCenter
 *
 * A recycling center.
 *
 * http://schema.org/RecyclingCenter
 */
var RecyclingCenter = 'http://schema.org/RecyclingCenter';
/**
 * RegisterAction
 *
 * The act of registering to be a user of a service, product or web page.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>
 * <li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>
 * <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>
 * </ul>
 *
 *
 * http://schema.org/RegisterAction
 */
var RegisterAction = 'http://schema.org/RegisterAction';
/**
 * RejectAction
 *
 * The act of rejecting to/adopting an object.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/AcceptAction">AcceptAction</a>: The antonym of RejectAction.</li>
 * </ul>
 *
 *
 * http://schema.org/RejectAction
 */
var RejectAction = 'http://schema.org/RejectAction';
/**
 * RentAction
 *
 * The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.
 *
 * http://schema.org/RentAction
 */
var RentAction = 'http://schema.org/RentAction';
/**
 * RentalCarReservation
 *
 * A reservation for a rental car.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
 *
 * http://schema.org/RentalCarReservation
 */
var RentalCarReservation = 'http://schema.org/RentalCarReservation';
/**
 * ReplaceAction
 *
 * The act of editing a recipient by replacing an old object with a new object.
 *
 * http://schema.org/ReplaceAction
 */
var ReplaceAction = 'http://schema.org/ReplaceAction';
/**
 * ReplyAction
 *
 * The act of responding to a question/message asked/sent by the object. Related to <a class="localLink" href="http://schema.org/AskAction">AskAction</a><br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>
 * </ul>
 *
 *
 * http://schema.org/ReplyAction
 */
var ReplyAction = 'http://schema.org/ReplyAction';
/**
 * Report
 *
 * A Report generated by governmental or non-governmental organization.
 *
 * http://schema.org/Report
 */
var Report = 'http://schema.org/Report';
/**
 * Reservation
 *
 * Describes a reservation for travel, dining or an event. Some reservations require tickets. <br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
 *
 * http://schema.org/Reservation
 */
var Reservation = 'http://schema.org/Reservation';
/**
 * ReservationPackage
 *
 * A group of multiple reservations with common values for all sub-reservations.
 *
 * http://schema.org/ReservationPackage
 */
var ReservationPackage = 'http://schema.org/ReservationPackage';
/**
 * ReservationStatusType
 *
 * Enumerated status values for Reservation.
 *
 * http://schema.org/ReservationStatusType
 */
var ReservationStatusType = 'http://schema.org/ReservationStatusType';
/**
 * ReserveAction
 *
 * Reserving a concrete object.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/ScheduleAction">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>
 * </ul>
 *
 *
 * http://schema.org/ReserveAction
 */
var ReserveAction = 'http://schema.org/ReserveAction';
/**
 * Reservoir
 *
 * A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.
 *
 * http://schema.org/Reservoir
 */
var Reservoir = 'http://schema.org/Reservoir';
/**
 * Residence
 *
 * The place where a person lives.
 *
 * http://schema.org/Residence
 */
var Residence = 'http://schema.org/Residence';
/**
 * Resort
 *
 * A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Resort
 */
var Resort = 'http://schema.org/Resort';
/**
 * Restaurant
 *
 * A restaurant.
 *
 * http://schema.org/Restaurant
 */
var Restaurant = 'http://schema.org/Restaurant';
/**
 * RestrictedDiet
 *
 * A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.
 *
 * http://schema.org/RestrictedDiet
 */
var RestrictedDiet = 'http://schema.org/RestrictedDiet';
/**
 * ResumeAction
 *
 * The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).
 *
 * http://schema.org/ResumeAction
 */
var ResumeAction = 'http://schema.org/ResumeAction';
/**
 * ReturnAction
 *
 * The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).
 *
 * http://schema.org/ReturnAction
 */
var ReturnAction = 'http://schema.org/ReturnAction';
/**
 * Review
 *
 * A review of an item - for example, of a restaurant, movie, or store.
 *
 * http://schema.org/Review
 */
var Review = 'http://schema.org/Review';
/**
 * ReviewAction
 *
 * The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.
 *
 * http://schema.org/ReviewAction
 */
var ReviewAction = 'http://schema.org/ReviewAction';
/**
 * RiverBodyOfWater
 *
 * A river (for example, the broad majestic Shannon).
 *
 * http://schema.org/RiverBodyOfWater
 */
var RiverBodyOfWater = 'http://schema.org/RiverBodyOfWater';
/**
 * Role
 *
 * Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.<br/><br/>
 *
 * See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog post</a>.
 *
 * http://schema.org/Role
 */
var Role = 'http://schema.org/Role';
/**
 * RoofingContractor
 *
 * A roofing contractor.
 *
 * http://schema.org/RoofingContractor
 */
var RoofingContractor = 'http://schema.org/RoofingContractor';
/**
 * Room
 *
 * A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Room
 */
var Room = 'http://schema.org/Room';
/**
 * RsvpAction
 *
 * The act of notifying an event organizer as to whether you expect to attend the event.
 *
 * http://schema.org/RsvpAction
 */
var RsvpAction = 'http://schema.org/RsvpAction';
/**
 * RsvpResponseType
 *
 * RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.
 *
 * http://schema.org/RsvpResponseType
 */
var RsvpResponseType = 'http://schema.org/RsvpResponseType';
/**
 * SaleEvent
 *
 * Event type: Sales event.
 *
 * http://schema.org/SaleEvent
 */
var SaleEvent = 'http://schema.org/SaleEvent';
/**
 * ScheduleAction
 *
 * Scheduling future actions, events, or tasks.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>
 * </ul>
 *
 *
 * http://schema.org/ScheduleAction
 */
var ScheduleAction = 'http://schema.org/ScheduleAction';
/**
 * ScholarlyArticle
 *
 * A scholarly article.
 *
 * http://schema.org/ScholarlyArticle
 */
var ScholarlyArticle = 'http://schema.org/ScholarlyArticle';
/**
 * School
 *
 * A school.
 *
 * http://schema.org/School
 */
var School = 'http://schema.org/School';
/**
 * ScreeningEvent
 *
 * A screening of a movie or other video.
 *
 * http://schema.org/ScreeningEvent
 */
var ScreeningEvent = 'http://schema.org/ScreeningEvent';
/**
 * Sculpture
 *
 * A piece of sculpture.
 *
 * http://schema.org/Sculpture
 */
var Sculpture = 'http://schema.org/Sculpture';
/**
 * SeaBodyOfWater
 *
 * A sea (for example, the Caspian sea).
 *
 * http://schema.org/SeaBodyOfWater
 */
var SeaBodyOfWater = 'http://schema.org/SeaBodyOfWater';
/**
 * SearchAction
 *
 * The act of searching for an object.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>
 * </ul>
 *
 *
 * http://schema.org/SearchAction
 */
var SearchAction = 'http://schema.org/SearchAction';
/**
 * SearchResultsPage
 *
 * Web page type: Search results page.
 *
 * http://schema.org/SearchResultsPage
 */
var SearchResultsPage = 'http://schema.org/SearchResultsPage';
/**
 * Season
 *
 * A media season e.g. tv, radio, video game etc.
 *
 * http://schema.org/Season
 */
var Season = 'http://schema.org/Season';
/**
 * Seat
 *
 * Used to describe a seat, such as a reserved seat in an event reservation.
 *
 * http://schema.org/Seat
 */
var Seat = 'http://schema.org/Seat';
/**
 * SelfStorage
 *
 * A self-storage facility.
 *
 * http://schema.org/SelfStorage
 */
var SelfStorage = 'http://schema.org/SelfStorage';
/**
 * SellAction
 *
 * The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.
 *
 * http://schema.org/SellAction
 */
var SellAction = 'http://schema.org/SellAction';
/**
 * SendAction
 *
 * The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of SendAction.</li>
 * <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>
 * </ul>
 *
 *
 * http://schema.org/SendAction
 */
var SendAction = 'http://schema.org/SendAction';
/**
 * Series
 *
 * A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also <a class="localLink" href="http://schema.org/CreativeWorkSeries">CreativeWorkSeries</a>, <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a>.
 *
 * http://schema.org/Series
 */
var Series = 'http://schema.org/Series';
/**
 * Service
 *
 * A service provided by an organization, e.g. delivery service, print services, etc.
 *
 * http://schema.org/Service
 */
var Service = 'http://schema.org/Service';
/**
 * ServiceChannel
 *
 * A means for accessing a service, e.g. a government office location, web site, or phone number.
 *
 * http://schema.org/ServiceChannel
 */
var ServiceChannel = 'http://schema.org/ServiceChannel';
/**
 * ShareAction
 *
 * The act of distributing content to people for their amusement or edification.
 *
 * http://schema.org/ShareAction
 */
var ShareAction = 'http://schema.org/ShareAction';
/**
 * ShoeStore
 *
 * A shoe store.
 *
 * http://schema.org/ShoeStore
 */
var ShoeStore = 'http://schema.org/ShoeStore';
/**
 * ShoppingCenter
 *
 * A shopping center or mall.
 *
 * http://schema.org/ShoppingCenter
 */
var ShoppingCenter = 'http://schema.org/ShoppingCenter';
/**
 * SingleFamilyResidence
 *
 * Residence type: Single-family home.
 *
 * http://schema.org/SingleFamilyResidence
 */
var SingleFamilyResidence = 'http://schema.org/SingleFamilyResidence';
/**
 * SiteNavigationElement
 *
 * A navigation element of the page.
 *
 * http://schema.org/SiteNavigationElement
 */
var SiteNavigationElement = 'http://schema.org/SiteNavigationElement';
/**
 * SkiResort
 *
 * A ski resort.
 *
 * http://schema.org/SkiResort
 */
var SkiResort = 'http://schema.org/SkiResort';
/**
 * SocialEvent
 *
 * Event type: Social event.
 *
 * http://schema.org/SocialEvent
 */
var SocialEvent = 'http://schema.org/SocialEvent';
/**
 * SocialMediaPosting
 *
 * A post to a social media platform, including blog posts, tweets, Facebook posts, etc.
 *
 * http://schema.org/SocialMediaPosting
 */
var SocialMediaPosting = 'http://schema.org/SocialMediaPosting';
/**
 * SoftwareApplication
 *
 * A software application.
 *
 * http://schema.org/SoftwareApplication
 */
var SoftwareApplication = 'http://schema.org/SoftwareApplication';
/**
 * SoftwareSourceCode
 *
 * Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
 *
 * http://schema.org/SoftwareSourceCode
 */
var SoftwareSourceCode = 'http://schema.org/SoftwareSourceCode';
/**
 * SomeProducts
 *
 * A placeholder for multiple similar products of the same kind.
 *
 * http://schema.org/SomeProducts
 */
var SomeProducts = 'http://schema.org/SomeProducts';
/**
 * SpeakableSpecification
 *
 * A SpeakableSpecification indicates (typically via <a class="localLink" href="http://schema.org/xpath">xpath</a> or <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a>) sections of a document that are highlighted as particularly <a class="localLink" href="http://schema.org/speakable">speakable</a>. Instances of this type are expected to be used primarily as values of the <a class="localLink" href="http://schema.org/speakable">speakable</a> property.
 *
 * http://schema.org/SpeakableSpecification
 */
var SpeakableSpecification = 'http://schema.org/SpeakableSpecification';
/**
 * Specialty
 *
 * Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.
 *
 * http://schema.org/Specialty
 */
var Specialty = 'http://schema.org/Specialty';
/**
 * SportingGoodsStore
 *
 * A sporting goods store.
 *
 * http://schema.org/SportingGoodsStore
 */
var SportingGoodsStore = 'http://schema.org/SportingGoodsStore';
/**
 * SportsActivityLocation
 *
 * A sports location, such as a playing field.
 *
 * http://schema.org/SportsActivityLocation
 */
var SportsActivityLocation = 'http://schema.org/SportsActivityLocation';
/**
 * SportsClub
 *
 * A sports club.
 *
 * http://schema.org/SportsClub
 */
var SportsClub = 'http://schema.org/SportsClub';
/**
 * SportsEvent
 *
 * Event type: Sports event.
 *
 * http://schema.org/SportsEvent
 */
var SportsEvent = 'http://schema.org/SportsEvent';
/**
 * SportsOrganization
 *
 * Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.
 *
 * http://schema.org/SportsOrganization
 */
var SportsOrganization = 'http://schema.org/SportsOrganization';
/**
 * SportsTeam
 *
 * Organization: Sports team.
 *
 * http://schema.org/SportsTeam
 */
var SportsTeam = 'http://schema.org/SportsTeam';
/**
 * SpreadsheetDigitalDocument
 *
 * A spreadsheet file.
 *
 * http://schema.org/SpreadsheetDigitalDocument
 */
var SpreadsheetDigitalDocument = 'http://schema.org/SpreadsheetDigitalDocument';
/**
 * StadiumOrArena
 *
 * A stadium.
 *
 * http://schema.org/StadiumOrArena
 */
var StadiumOrArena = 'http://schema.org/StadiumOrArena';
/**
 * State
 *
 * A state or province of a country.
 *
 * http://schema.org/State
 */
var State = 'http://schema.org/State';
/**
 * SteeringPositionValue
 *
 * A value indicating a steering position.
 *
 * http://schema.org/SteeringPositionValue
 */
var SteeringPositionValue = 'http://schema.org/SteeringPositionValue';
/**
 * Store
 *
 * A retail good store.
 *
 * http://schema.org/Store
 */
var Store = 'http://schema.org/Store';
/**
 * StructuredValue
 *
 * Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.
 *
 * http://schema.org/StructuredValue
 */
var StructuredValue = 'http://schema.org/StructuredValue';
/**
 * SubscribeAction
 *
 * The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>
 * <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
 * <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
 * </ul>
 *
 *
 * http://schema.org/SubscribeAction
 */
var SubscribeAction = 'http://schema.org/SubscribeAction';
/**
 * SubwayStation
 *
 * A subway station.
 *
 * http://schema.org/SubwayStation
 */
var SubwayStation = 'http://schema.org/SubwayStation';
/**
 * Suite
 *
 * A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 * http://schema.org/Suite
 */
var Suite = 'http://schema.org/Suite';
/**
 * SuspendAction
 *
 * The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).
 *
 * http://schema.org/SuspendAction
 */
var SuspendAction = 'http://schema.org/SuspendAction';
/**
 * Synagogue
 *
 * A synagogue.
 *
 * http://schema.org/Synagogue
 */
var Synagogue = 'http://schema.org/Synagogue';
/**
 * TVClip
 *
 * A short TV program or a segment/part of a TV program.
 *
 * http://schema.org/TVClip
 */
var TVClip = 'http://schema.org/TVClip';
/**
 * TVEpisode
 *
 * A TV episode which can be part of a series or season.
 *
 * http://schema.org/TVEpisode
 */
var TVEpisode = 'http://schema.org/TVEpisode';
/**
 * TVSeason
 *
 * Season dedicated to TV broadcast and associated online delivery.
 *
 * http://schema.org/TVSeason
 */
var TVSeason = 'http://schema.org/TVSeason';
/**
 * TVSeries
 *
 * CreativeWorkSeries dedicated to TV broadcast and associated online delivery.
 *
 * http://schema.org/TVSeries
 */
var TVSeries = 'http://schema.org/TVSeries';
/**
 * Table
 *
 * A table on a Web page.
 *
 * http://schema.org/Table
 */
var Table = 'http://schema.org/Table';
/**
 * TakeAction
 *
 * The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: The reciprocal of TakeAction.</li>
 * <li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>
 * </ul>
 *
 *
 * http://schema.org/TakeAction
 */
var TakeAction = 'http://schema.org/TakeAction';
/**
 * TattooParlor
 *
 * A tattoo parlor.
 *
 * http://schema.org/TattooParlor
 */
var TattooParlor = 'http://schema.org/TattooParlor';
/**
 * Taxi
 *
 * A taxi.
 *
 * http://schema.org/Taxi
 */
var Taxi = 'http://schema.org/Taxi';
/**
 * TaxiReservation
 *
 * A reservation for a taxi.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
 *
 * http://schema.org/TaxiReservation
 */
var TaxiReservation = 'http://schema.org/TaxiReservation';
/**
 * TaxiService
 *
 * A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.
 *
 * http://schema.org/TaxiService
 */
var TaxiService = 'http://schema.org/TaxiService';
/**
 * TaxiStand
 *
 * A taxi stand.
 *
 * http://schema.org/TaxiStand
 */
var TaxiStand = 'http://schema.org/TaxiStand';
/**
 * TechArticle
 *
 * A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.
 *
 * http://schema.org/TechArticle
 */
var TechArticle = 'http://schema.org/TechArticle';
/**
 * TelevisionChannel
 *
 * A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.
 *
 * http://schema.org/TelevisionChannel
 */
var TelevisionChannel = 'http://schema.org/TelevisionChannel';
/**
 * TelevisionStation
 *
 * A television station.
 *
 * http://schema.org/TelevisionStation
 */
var TelevisionStation = 'http://schema.org/TelevisionStation';
/**
 * TennisComplex
 *
 * A tennis complex.
 *
 * http://schema.org/TennisComplex
 */
var TennisComplex = 'http://schema.org/TennisComplex';
/**
 * Text
 *
 * Data type: Text.
 *
 * http://schema.org/Text
 */
var Text = 'http://schema.org/Text';
/**
 * TextDigitalDocument
 *
 * A file composed primarily of text.
 *
 * http://schema.org/TextDigitalDocument
 */
var TextDigitalDocument = 'http://schema.org/TextDigitalDocument';
/**
 * TheaterEvent
 *
 * Event type: Theater performance.
 *
 * http://schema.org/TheaterEvent
 */
var TheaterEvent = 'http://schema.org/TheaterEvent';
/**
 * TheaterGroup
 *
 * A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.
 *
 * http://schema.org/TheaterGroup
 */
var TheaterGroup = 'http://schema.org/TheaterGroup';
/**
 * Thing
 *
 * The most generic type of item.
 *
 * http://schema.org/Thing
 */
var Thing = 'http://schema.org/Thing';
/**
 * Ticket
 *
 * Used to describe a ticket to an event, a flight, a bus ride, etc.
 *
 * http://schema.org/Ticket
 */
var Ticket = 'http://schema.org/Ticket';
/**
 * TieAction
 *
 * The act of reaching a draw in a competitive activity.
 *
 * http://schema.org/TieAction
 */
var TieAction = 'http://schema.org/TieAction';
/**
 * Time
 *
 * A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href="http://www.w3.org/TR/xmlschema-2/#time">XML schema for details</a>).
 *
 * http://schema.org/Time
 */
var Time = 'http://schema.org/Time';
/**
 * TipAction
 *
 * The act of giving money voluntarily to a beneficiary in recognition of services rendered.
 *
 * http://schema.org/TipAction
 */
var TipAction = 'http://schema.org/TipAction';
/**
 * TireShop
 *
 * A tire shop.
 *
 * http://schema.org/TireShop
 */
var TireShop = 'http://schema.org/TireShop';
/**
 * TouristAttraction
 *
 * A tourist attraction.  In principle any Thing can be a <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a class="localLink" href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a> to a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist attraction properties to any other type.  (See examples below)
 *
 * http://schema.org/TouristAttraction
 */
var TouristAttraction = 'http://schema.org/TouristAttraction';
/**
 * TouristInformationCenter
 *
 * A tourist information center.
 *
 * http://schema.org/TouristInformationCenter
 */
var TouristInformationCenter = 'http://schema.org/TouristInformationCenter';
/**
 * ToyStore
 *
 * A toy store.
 *
 * http://schema.org/ToyStore
 */
var ToyStore = 'http://schema.org/ToyStore';
/**
 * TrackAction
 *
 * An agent tracks an object for updates.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>
 * <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>
 * </ul>
 *
 *
 * http://schema.org/TrackAction
 */
var TrackAction = 'http://schema.org/TrackAction';
/**
 * TradeAction
 *
 * The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.
 *
 * http://schema.org/TradeAction
 */
var TradeAction = 'http://schema.org/TradeAction';
/**
 * TrainReservation
 *
 * A reservation for train travel.<br/><br/>
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
 *
 * http://schema.org/TrainReservation
 */
var TrainReservation = 'http://schema.org/TrainReservation';
/**
 * TrainStation
 *
 * A train station.
 *
 * http://schema.org/TrainStation
 */
var TrainStation = 'http://schema.org/TrainStation';
/**
 * TrainTrip
 *
 * A trip on a commercial train line.
 *
 * http://schema.org/TrainTrip
 */
var TrainTrip = 'http://schema.org/TrainTrip';
/**
 * TransferAction
 *
 * The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.
 *
 * http://schema.org/TransferAction
 */
var TransferAction = 'http://schema.org/TransferAction';
/**
 * TravelAction
 *
 * The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.
 *
 * http://schema.org/TravelAction
 */
var TravelAction = 'http://schema.org/TravelAction';
/**
 * TravelAgency
 *
 * A travel agency.
 *
 * http://schema.org/TravelAgency
 */
var TravelAgency = 'http://schema.org/TravelAgency';
/**
 * Trip
 *
 * A trip or journey. An itinerary of visits to one or more places.
 *
 * http://schema.org/Trip
 */
var Trip = 'http://schema.org/Trip';
/**
 * TypeAndQuantityNode
 *
 * A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.
 *
 * http://schema.org/TypeAndQuantityNode
 */
var TypeAndQuantityNode = 'http://schema.org/TypeAndQuantityNode';
/**
 * URL
 *
 * Data type: URL.
 *
 * http://schema.org/URL
 */
var URL = 'http://schema.org/URL';
/**
 * UnRegisterAction
 *
 * The act of un-registering from a service.<br/><br/>
 *
 * Related actions:<br/><br/>
 *
 * <ul>
 * <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: antonym of UnRegisterAction.</li>
 * <li><a class="localLink" href="http://schema.org/LeaveAction">LeaveAction</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>
 * </ul>
 *
 *
 * http://schema.org/UnRegisterAction
 */
var UnRegisterAction = 'http://schema.org/UnRegisterAction';
/**
 * UnitPriceSpecification
 *
 * The price asked for a given offer by the respective organization or person.
 *
 * http://schema.org/UnitPriceSpecification
 */
var UnitPriceSpecification = 'http://schema.org/UnitPriceSpecification';
/**
 * UpdateAction
 *
 * The act of managing by changing/editing the state of the object.
 *
 * http://schema.org/UpdateAction
 */
var UpdateAction = 'http://schema.org/UpdateAction';
/**
 * UseAction
 *
 * The act of applying an object to its intended purpose.
 *
 * http://schema.org/UseAction
 */
var UseAction = 'http://schema.org/UseAction';
/**
 * UserBlocks
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserBlocks
 */
var UserBlocks = 'http://schema.org/UserBlocks';
/**
 * UserCheckins
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserCheckins
 */
var UserCheckins = 'http://schema.org/UserCheckins';
/**
 * UserComments
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserComments
 */
var UserComments = 'http://schema.org/UserComments';
/**
 * UserDownloads
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserDownloads
 */
var UserDownloads = 'http://schema.org/UserDownloads';
/**
 * UserInteraction
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserInteraction
 */
var UserInteraction = 'http://schema.org/UserInteraction';
/**
 * UserLikes
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserLikes
 */
var UserLikes = 'http://schema.org/UserLikes';
/**
 * UserPageVisits
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserPageVisits
 */
var UserPageVisits = 'http://schema.org/UserPageVisits';
/**
 * UserPlays
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserPlays
 */
var UserPlays = 'http://schema.org/UserPlays';
/**
 * UserPlusOnes
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserPlusOnes
 */
var UserPlusOnes = 'http://schema.org/UserPlusOnes';
/**
 * UserTweets
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
 *
 * http://schema.org/UserTweets
 */
var UserTweets = 'http://schema.org/UserTweets';
/**
 * Vehicle
 *
 * A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.
 *
 * http://schema.org/Vehicle
 */
var Vehicle = 'http://schema.org/Vehicle';
/**
 * VideoGallery
 *
 * Web page type: Video gallery page.
 *
 * http://schema.org/VideoGallery
 */
var VideoGallery = 'http://schema.org/VideoGallery';
/**
 * VideoGame
 *
 * A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.
 *
 * http://schema.org/VideoGame
 */
var VideoGame = 'http://schema.org/VideoGame';
/**
 * VideoGameClip
 *
 * A short segment/part of a video game.
 *
 * http://schema.org/VideoGameClip
 */
var VideoGameClip = 'http://schema.org/VideoGameClip';
/**
 * VideoGameSeries
 *
 * A video game series.
 *
 * http://schema.org/VideoGameSeries
 */
var VideoGameSeries = 'http://schema.org/VideoGameSeries';
/**
 * VideoObject
 *
 * A video file.
 *
 * http://schema.org/VideoObject
 */
var VideoObject = 'http://schema.org/VideoObject';
/**
 * ViewAction
 *
 * The act of consuming static visual content.
 *
 * http://schema.org/ViewAction
 */
var ViewAction = 'http://schema.org/ViewAction';
/**
 * VisualArtsEvent
 *
 * Event type: Visual arts event.
 *
 * http://schema.org/VisualArtsEvent
 */
var VisualArtsEvent = 'http://schema.org/VisualArtsEvent';
/**
 * VisualArtwork
 *
 * A work of art that is primarily visual in character.
 *
 * http://schema.org/VisualArtwork
 */
var VisualArtwork = 'http://schema.org/VisualArtwork';
/**
 * Volcano
 *
 * A volcano, like Fuji san.
 *
 * http://schema.org/Volcano
 */
var Volcano = 'http://schema.org/Volcano';
/**
 * VoteAction
 *
 * The act of expressing a preference from a fixed/finite/structured set of choices/options.
 *
 * http://schema.org/VoteAction
 */
var VoteAction = 'http://schema.org/VoteAction';
/**
 * WPAdBlock
 *
 * An advertising section of the page.
 *
 * http://schema.org/WPAdBlock
 */
var WPAdBlock = 'http://schema.org/WPAdBlock';
/**
 * WPFooter
 *
 * The footer section of the page.
 *
 * http://schema.org/WPFooter
 */
var WPFooter = 'http://schema.org/WPFooter';
/**
 * WPHeader
 *
 * The header section of the page.
 *
 * http://schema.org/WPHeader
 */
var WPHeader = 'http://schema.org/WPHeader';
/**
 * WPSideBar
 *
 * A sidebar section of the page.
 *
 * http://schema.org/WPSideBar
 */
var WPSideBar = 'http://schema.org/WPSideBar';
/**
 * WantAction
 *
 * The act of expressing a desire about the object. An agent wants an object.
 *
 * http://schema.org/WantAction
 */
var WantAction = 'http://schema.org/WantAction';
/**
 * WarrantyPromise
 *
 * A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
 *
 * http://schema.org/WarrantyPromise
 */
var WarrantyPromise = 'http://schema.org/WarrantyPromise';
/**
 * WarrantyScope
 *
 * A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>
 *
 * Commonly used values:<br/><br/>
 *
 * <ul>
 * <li>http://purl.org/goodrelations/v1#Labor-BringIn</li>
 * <li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>
 * <li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>
 * </ul>
 *
 *
 * http://schema.org/WarrantyScope
 */
var WarrantyScope = 'http://schema.org/WarrantyScope';
/**
 * WatchAction
 *
 * The act of consuming dynamic/moving visual content.
 *
 * http://schema.org/WatchAction
 */
var WatchAction = 'http://schema.org/WatchAction';
/**
 * Waterfall
 *
 * A waterfall, like Niagara.
 *
 * http://schema.org/Waterfall
 */
var Waterfall = 'http://schema.org/Waterfall';
/**
 * WearAction
 *
 * The act of dressing oneself in clothing.
 *
 * http://schema.org/WearAction
 */
var WearAction = 'http://schema.org/WearAction';
/**
 * WebApplication
 *
 * Web applications.
 *
 * http://schema.org/WebApplication
 */
var WebApplication = 'http://schema.org/WebApplication';
/**
 * WebPage
 *
 * A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.
 *
 * http://schema.org/WebPage
 */
var WebPage = 'http://schema.org/WebPage';
/**
 * WebPageElement
 *
 * A web page element, like a table or an image.
 *
 * http://schema.org/WebPageElement
 */
var WebPageElement = 'http://schema.org/WebPageElement';
/**
 * WebSite
 *
 * A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.
 *
 * http://schema.org/WebSite
 */
var WebSite = 'http://schema.org/WebSite';
/**
 * WholesaleStore
 *
 * A wholesale store.
 *
 * http://schema.org/WholesaleStore
 */
var WholesaleStore = 'http://schema.org/WholesaleStore';
/**
 * WinAction
 *
 * The act of achieving victory in a competitive activity.
 *
 * http://schema.org/WinAction
 */
var WinAction = 'http://schema.org/WinAction';
/**
 * Winery
 *
 * A winery.
 *
 * http://schema.org/Winery
 */
var Winery = 'http://schema.org/Winery';
/**
 * WorkersUnion
 *
 * A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.
 *
 * http://schema.org/WorkersUnion
 */
var WorkersUnion = 'http://schema.org/WorkersUnion';
/**
 * WriteAction
 *
 * The act of authoring written creative content.
 *
 * http://schema.org/WriteAction
 */
var WriteAction = 'http://schema.org/WriteAction';
/**
 * Zoo
 *
 * A zoo.
 *
 * http://schema.org/Zoo
 */
var Zoo = 'http://schema.org/Zoo';

var schemaImport = /*#__PURE__*/Object.freeze({
	acceptedAnswer: acceptedAnswer,
	acceptedOffer: acceptedOffer,
	acceptedPaymentMethod: acceptedPaymentMethod,
	acceptsReservations: acceptsReservations,
	accessCode: accessCode,
	accessMode: accessMode,
	accessModeSufficient: accessModeSufficient,
	accessibilityAPI: accessibilityAPI,
	accessibilityControl: accessibilityControl,
	accessibilityFeature: accessibilityFeature,
	accessibilityHazard: accessibilityHazard,
	accessibilitySummary: accessibilitySummary,
	accountId: accountId,
	accountablePerson: accountablePerson,
	acquiredFrom: acquiredFrom,
	actionAccessibilityRequirement: actionAccessibilityRequirement,
	actionPlatform: actionPlatform,
	actionStatus: actionStatus,
	actors: actors,
	addOn: addOn,
	additionalName: additionalName,
	additionalNumberOfGuests: additionalNumberOfGuests,
	additionalProperty: additionalProperty,
	additionalType: additionalType,
	address: address,
	addressCountry: addressCountry,
	addressLocality: addressLocality,
	addressRegion: addressRegion,
	advanceBookingRequirement: advanceBookingRequirement,
	affiliation: affiliation,
	afterMedia: afterMedia,
	agent: agent,
	aggregateRating: aggregateRating,
	aircraft: aircraft,
	albumProductionType: albumProductionType,
	albumReleaseType: albumReleaseType,
	albums: albums,
	alignmentType: alignmentType,
	alternateName: alternateName,
	alternativeHeadline: alternativeHeadline,
	amenityFeature: amenityFeature,
	amount: amount,
	amountOfThisGood: amountOfThisGood,
	annualPercentageRate: annualPercentageRate,
	answerCount: answerCount,
	application: application,
	applicationCategory: applicationCategory,
	applicationSubCategory: applicationSubCategory,
	applicationSuite: applicationSuite,
	appliesToDeliveryMethod: appliesToDeliveryMethod,
	appliesToPaymentMethod: appliesToPaymentMethod,
	area: area,
	arrivalAirport: arrivalAirport,
	arrivalBusStop: arrivalBusStop,
	arrivalGate: arrivalGate,
	arrivalPlatform: arrivalPlatform,
	arrivalStation: arrivalStation,
	arrivalTerminal: arrivalTerminal,
	arrivalTime: arrivalTime,
	artEdition: artEdition,
	artMedium: artMedium,
	artform: artform,
	articleBody: articleBody,
	articleSection: articleSection,
	assembly: assembly,
	assemblyVersion: assemblyVersion,
	associatedArticle: associatedArticle,
	associatedMedia: associatedMedia,
	athlete: athlete,
	attendees: attendees,
	audienceType: audienceType,
	audio: audio,
	authenticator: authenticator,
	author: author,
	availability: availability,
	availabilityEnds: availabilityEnds,
	availabilityStarts: availabilityStarts,
	availableAtOrFrom: availableAtOrFrom,
	availableChannel: availableChannel,
	availableDeliveryMethod: availableDeliveryMethod,
	availableFrom: availableFrom,
	availableLanguage: availableLanguage,
	availableThrough: availableThrough,
	awards: awards,
	awayTeam: awayTeam,
	baseSalary: baseSalary,
	bccRecipient: bccRecipient,
	bed: bed,
	beforeMedia: beforeMedia,
	benefits: benefits,
	bestRating: bestRating,
	billingAddress: billingAddress,
	billingIncrement: billingIncrement,
	billingPeriod: billingPeriod,
	birthDate: birthDate,
	birthPlace: birthPlace,
	bitrate: bitrate,
	blogPosts: blogPosts,
	boardingGroup: boardingGroup,
	boardingPolicy: boardingPolicy,
	bookEdition: bookEdition,
	bookFormat: bookFormat,
	bookingAgent: bookingAgent,
	bookingTime: bookingTime,
	borrower: borrower,
	box: box,
	branchCode: branchCode,
	branchOf: branchOf,
	brand: brand,
	breadcrumb: breadcrumb,
	broadcastAffiliateOf: broadcastAffiliateOf,
	broadcastChannelId: broadcastChannelId,
	broadcastDisplayName: broadcastDisplayName,
	broadcastFrequency: broadcastFrequency,
	broadcastFrequencyValue: broadcastFrequencyValue,
	broadcastOfEvent: broadcastOfEvent,
	broadcastServiceTier: broadcastServiceTier,
	broadcastTimezone: broadcastTimezone,
	broadcaster: broadcaster,
	browserRequirements: browserRequirements,
	busName: busName,
	busNumber: busNumber,
	businessFunction: businessFunction,
	buyer: buyer,
	byArtist: byArtist,
	calories: calories,
	candidate: candidate,
	caption: caption,
	carbohydrateContent: carbohydrateContent,
	cargoVolume: cargoVolume,
	carrier: carrier,
	carrierRequirements: carrierRequirements,
	catalog: catalog,
	catalogNumber: catalogNumber,
	category: category,
	ccRecipient: ccRecipient,
	character: character,
	characterAttribute: characterAttribute,
	characterName: characterName,
	cheatCode: cheatCode,
	checkinTime: checkinTime,
	checkoutTime: checkoutTime,
	childMaxAge: childMaxAge,
	childMinAge: childMinAge,
	children: children,
	cholesterolContent: cholesterolContent,
	circle: circle,
	citation: citation,
	claimReviewed: claimReviewed,
	clipNumber: clipNumber,
	closes: closes,
	coach: coach,
	codeRepository: codeRepository,
	colleagues: colleagues,
	collection: collection,
	color: color,
	comment: comment,
	commentCount: commentCount,
	commentText: commentText,
	commentTime: commentTime,
	composer: composer,
	confirmationNumber: confirmationNumber,
	contactOption: contactOption,
	contactPoints: contactPoints,
	contactType: contactType,
	containedIn: containedIn,
	contentRating: contentRating,
	contentSize: contentSize,
	contentType: contentType,
	contentUrl: contentUrl,
	contributor: contributor,
	cookTime: cookTime,
	cookingMethod: cookingMethod,
	copyrightHolder: copyrightHolder,
	copyrightYear: copyrightYear,
	countriesNotSupported: countriesNotSupported,
	countriesSupported: countriesSupported,
	countryOfOrigin: countryOfOrigin,
	course: course,
	courseCode: courseCode,
	courseMode: courseMode,
	coursePrerequisites: coursePrerequisites,
	coverageEndTime: coverageEndTime,
	coverageStartTime: coverageStartTime,
	creator: creator,
	creditedTo: creditedTo,
	cssSelector: cssSelector,
	currenciesAccepted: currenciesAccepted,
	currency: currency,
	customer: customer,
	dataFeedElement: dataFeedElement,
	datasetTimeInterval: datasetTimeInterval,
	dateCreated: dateCreated,
	dateDeleted: dateDeleted,
	dateIssued: dateIssued,
	dateModified: dateModified,
	datePosted: datePosted,
	datePublished: datePublished,
	dateRead: dateRead,
	dateReceived: dateReceived,
	dateSent: dateSent,
	dateVehicleFirstRegistered: dateVehicleFirstRegistered,
	dateline: dateline,
	dayOfWeek: dayOfWeek,
	deathDate: deathDate,
	deathPlace: deathPlace,
	defaultValue: defaultValue,
	deliveryAddress: deliveryAddress,
	deliveryLeadTime: deliveryLeadTime,
	deliveryMethod: deliveryMethod,
	deliveryStatus: deliveryStatus,
	department: department,
	departureAirport: departureAirport,
	departureBusStop: departureBusStop,
	departureGate: departureGate,
	departurePlatform: departurePlatform,
	departureStation: departureStation,
	departureTerminal: departureTerminal,
	departureTime: departureTime,
	dependencies: dependencies,
	depth: depth,
	device: device,
	directors: directors,
	disambiguatingDescription: disambiguatingDescription,
	discount: discount,
	discountCode: discountCode,
	discountCurrency: discountCurrency,
	discusses: discusses,
	discussionUrl: discussionUrl,
	dissolutionDate: dissolutionDate,
	distance: distance,
	distribution: distribution,
	doorTime: doorTime,
	downloadUrl: downloadUrl,
	downvoteCount: downvoteCount,
	driveWheelConfiguration: driveWheelConfiguration,
	dropoffLocation: dropoffLocation,
	dropoffTime: dropoffTime,
	duns: duns,
	durationOfWarranty: durationOfWarranty,
	duringMedia: duringMedia,
	editor: editor,
	educationalAlignment: educationalAlignment,
	educationalCredentialAwarded: educationalCredentialAwarded,
	educationalFramework: educationalFramework,
	educationalRole: educationalRole,
	educationalUse: educationalUse,
	elevation: elevation,
	eligibleCustomerType: eligibleCustomerType,
	eligibleDuration: eligibleDuration,
	eligibleQuantity: eligibleQuantity,
	eligibleRegion: eligibleRegion,
	eligibleTransactionVolume: eligibleTransactionVolume,
	email: email,
	embedUrl: embedUrl,
	employees: employees,
	employmentType: employmentType,
	encodingType: encodingType,
	encodings: encodings,
	endDate: endDate,
	endTime: endTime,
	endorsee: endorsee,
	entertainmentBusiness: entertainmentBusiness,
	episodeNumber: episodeNumber,
	episodes: episodes,
	equal: equal,
	error: error,
	estimatedCost: estimatedCost,
	estimatedFlightDuration: estimatedFlightDuration,
	estimatedSalary: estimatedSalary,
	eventStatus: eventStatus,
	events: events,
	exifData: exifData,
	expectedArrivalFrom: expectedArrivalFrom,
	expectedArrivalUntil: expectedArrivalUntil,
	expectsAcceptanceOf: expectsAcceptanceOf,
	experienceRequirements: experienceRequirements,
	expires: expires,
	familyName: familyName,
	fatContent: fatContent,
	faxNumber: faxNumber,
	featureList: featureList,
	feesAndCommissionsSpecification: feesAndCommissionsSpecification,
	fiberContent: fiberContent,
	fileFormat: fileFormat,
	fileSize: fileSize,
	firstPerformance: firstPerformance,
	flightDistance: flightDistance,
	flightNumber: flightNumber,
	floorSize: floorSize,
	followee: followee,
	follows: follows,
	foodEstablishment: foodEstablishment,
	foodEvent: foodEvent,
	founders: founders,
	foundingDate: foundingDate,
	foundingLocation: foundingLocation,
	free: free,
	fromLocation: fromLocation,
	fuelConsumption: fuelConsumption,
	fuelEfficiency: fuelEfficiency,
	fuelType: fuelType,
	funder: funder,
	gameItem: gameItem,
	gameLocation: gameLocation,
	gamePlatform: gamePlatform,
	gameTip: gameTip,
	gender: gender,
	genre: genre,
	geo: geo,
	geoContains: geoContains,
	geoCoveredBy: geoCoveredBy,
	geoCovers: geoCovers,
	geoCrosses: geoCrosses,
	geoDisjoint: geoDisjoint,
	geoEquals: geoEquals,
	geoIntersects: geoIntersects,
	geoMidpoint: geoMidpoint,
	geoOverlaps: geoOverlaps,
	geoRadius: geoRadius,
	geoTouches: geoTouches,
	geoWithin: geoWithin,
	geographicArea: geographicArea,
	givenName: givenName,
	globalLocationNumber: globalLocationNumber,
	grantee: grantee,
	greater: greater,
	greaterOrEqual: greaterOrEqual,
	gtin12: gtin12,
	gtin13: gtin13,
	gtin14: gtin14,
	gtin8: gtin8,
	hasCourseInstance: hasCourseInstance,
	hasDeliveryMethod: hasDeliveryMethod,
	hasDigitalDocumentPermission: hasDigitalDocumentPermission,
	hasMenuItem: hasMenuItem,
	hasMenuSection: hasMenuSection,
	hasOccupation: hasOccupation,
	hasOfferCatalog: hasOfferCatalog,
	hasPOS: hasPOS,
	headline: headline,
	height: height,
	highPrice: highPrice,
	hiringOrganization: hiringOrganization,
	homeLocation: homeLocation,
	homeTeam: homeTeam,
	honorificPrefix: honorificPrefix,
	honorificSuffix: honorificSuffix,
	hostingOrganization: hostingOrganization,
	hoursAvailable: hoursAvailable,
	httpMethod: httpMethod,
	iataCode: iataCode,
	icaoCode: icaoCode,
	illustrator: illustrator,
	inAlbum: inAlbum,
	inBroadcastLineup: inBroadcastLineup,
	inPlaylist: inPlaylist,
	incentives: incentives,
	includedComposition: includedComposition,
	includedDataCatalog: includedDataCatalog,
	includesObject: includesObject,
	industry: industry,
	ineligibleRegion: ineligibleRegion,
	ingredients: ingredients,
	installUrl: installUrl,
	instructor: instructor,
	interactionCount: interactionCount,
	interactionService: interactionService,
	interactionType: interactionType,
	interactivityType: interactivityType,
	interestRate: interestRate,
	inventoryLevel: inventoryLevel,
	isAccessoryOrSparePartFor: isAccessoryOrSparePartFor,
	isBasedOnUrl: isBasedOnUrl,
	isConsumableFor: isConsumableFor,
	isFamilyFriendly: isFamilyFriendly,
	isGift: isGift,
	isLiveBroadcast: isLiveBroadcast,
	isRelatedTo: isRelatedTo,
	isSimilarTo: isSimilarTo,
	isVariantOf: isVariantOf,
	isbn: isbn,
	isicV4: isicV4,
	isrcCode: isrcCode,
	issn: issn,
	issueNumber: issueNumber,
	issuedBy: issuedBy,
	issuedThrough: issuedThrough,
	iswcCode: iswcCode,
	item: item,
	itemCondition: itemCondition,
	itemListElement: itemListElement,
	itemListOrder: itemListOrder,
	itemOffered: itemOffered,
	itemReviewed: itemReviewed,
	itemShipped: itemShipped,
	jobLocation: jobLocation,
	keywords: keywords,
	knownVehicleDamages: knownVehicleDamages,
	knows: knows,
	landlord: landlord,
	language: language,
	lastReviewed: lastReviewed,
	latitude: latitude,
	learningResourceType: learningResourceType,
	legalName: legalName,
	leiCode: leiCode,
	lender: lender,
	lesser: lesser,
	lesserOrEqual: lesserOrEqual,
	license: license,
	line: line,
	liveBlogUpdate: liveBlogUpdate,
	loanTerm: loanTerm,
	locationCreated: locationCreated,
	lodgingUnitDescription: lodgingUnitDescription,
	lodgingUnitType: lodgingUnitType,
	logo: logo,
	longitude: longitude,
	loser: loser,
	lowPrice: lowPrice,
	lyricist: lyricist,
	lyrics: lyrics,
	mainContentOfPage: mainContentOfPage,
	manufacturer: manufacturer,
	map: map,
	mapType: mapType,
	maps: maps,
	maxPrice: maxPrice,
	maxValue: maxValue,
	maximumAttendeeCapacity: maximumAttendeeCapacity,
	mealService: mealService,
	median: median,
	members: members,
	membershipNumber: membershipNumber,
	memoryRequirements: memoryRequirements,
	mentions: mentions,
	menu: menu,
	menuAddOn: menuAddOn,
	merchant: merchant,
	messageAttachment: messageAttachment,
	mileageFromOdometer: mileageFromOdometer,
	minPrice: minPrice,
	minValue: minValue,
	minimumPaymentDue: minimumPaymentDue,
	model: model,
	modifiedTime: modifiedTime,
	mpn: mpn,
	multipleValues: multipleValues,
	musicArrangement: musicArrangement,
	musicBy: musicBy,
	musicCompositionForm: musicCompositionForm,
	musicGroupMember: musicGroupMember,
	musicReleaseFormat: musicReleaseFormat,
	musicalKey: musicalKey,
	naics: naics,
	name: name,
	namedPosition: namedPosition,
	nationality: nationality,
	netWorth: netWorth,
	nextItem: nextItem,
	nonEqual: nonEqual,
	numAdults: numAdults,
	numChildren: numChildren,
	numTracks: numTracks,
	numberOfAirbags: numberOfAirbags,
	numberOfAxles: numberOfAxles,
	numberOfBeds: numberOfBeds,
	numberOfDoors: numberOfDoors,
	numberOfEmployees: numberOfEmployees,
	numberOfEpisodes: numberOfEpisodes,
	numberOfForwardGears: numberOfForwardGears,
	numberOfItems: numberOfItems,
	numberOfPages: numberOfPages,
	numberOfPlayers: numberOfPlayers,
	numberOfPreviousOwners: numberOfPreviousOwners,
	numberOfRooms: numberOfRooms,
	numberOfSeasons: numberOfSeasons,
	numberedPosition: numberedPosition,
	nutrition: nutrition,
	occupancy: occupancy,
	occupationLocation: occupationLocation,
	occupationalCategory: occupationalCategory,
	offerCount: offerCount,
	offers: offers,
	openingHours: openingHours,
	openingHoursSpecification: openingHoursSpecification,
	opens: opens,
	operatingSystem: operatingSystem,
	opponent: opponent,
	option: option,
	orderDate: orderDate,
	orderDelivery: orderDelivery,
	orderItemNumber: orderItemNumber,
	orderItemStatus: orderItemStatus,
	orderNumber: orderNumber,
	orderQuantity: orderQuantity,
	orderStatus: orderStatus,
	orderedItem: orderedItem,
	organizer: organizer,
	originAddress: originAddress,
	ownedFrom: ownedFrom,
	ownedThrough: ownedThrough,
	owns: owns,
	pageEnd: pageEnd,
	pageStart: pageStart,
	pagination: pagination,
	parentItem: parentItem,
	parentService: parentService,
	parents: parents,
	partOfEpisode: partOfEpisode,
	partOfInvoice: partOfInvoice,
	partOfOrder: partOfOrder,
	partOfSeason: partOfSeason,
	partOfTVSeries: partOfTVSeries,
	partySize: partySize,
	passengerPriorityStatus: passengerPriorityStatus,
	passengerSequenceNumber: passengerSequenceNumber,
	paymentAccepted: paymentAccepted,
	paymentDue: paymentDue,
	paymentMethod: paymentMethod,
	paymentMethodId: paymentMethodId,
	paymentStatus: paymentStatus,
	paymentUrl: paymentUrl,
	percentile10: percentile10,
	percentile25: percentile25,
	percentile75: percentile75,
	percentile90: percentile90,
	performerIn: performerIn,
	performers: performers,
	permissionType: permissionType,
	permissions: permissions,
	permitAudience: permitAudience,
	permittedUsage: permittedUsage,
	petsAllowed: petsAllowed,
	photos: photos,
	pickupLocation: pickupLocation,
	pickupTime: pickupTime,
	playMode: playMode,
	playerType: playerType,
	playersOnline: playersOnline,
	polygon: polygon,
	postOfficeBoxNumber: postOfficeBoxNumber,
	postalCode: postalCode,
	potentialAction: potentialAction,
	predecessorOf: predecessorOf,
	prepTime: prepTime,
	previousItem: previousItem,
	previousStartDate: previousStartDate,
	price: price,
	priceComponent: priceComponent,
	priceCurrency: priceCurrency,
	priceRange: priceRange,
	priceSpecification: priceSpecification,
	priceType: priceType,
	priceValidUntil: priceValidUntil,
	primaryImageOfPage: primaryImageOfPage,
	printColumn: printColumn,
	printEdition: printEdition,
	printPage: printPage,
	printSection: printSection,
	processingTime: processingTime,
	processorRequirements: processorRequirements,
	producer: producer,
	produces: produces,
	productID: productID,
	productSupported: productSupported,
	productionCompany: productionCompany,
	productionDate: productionDate,
	proficiencyLevel: proficiencyLevel,
	programMembershipUsed: programMembershipUsed,
	programName: programName,
	programmingLanguage: programmingLanguage,
	programmingModel: programmingModel,
	propertyID: propertyID,
	proteinContent: proteinContent,
	providerMobility: providerMobility,
	providesService: providesService,
	publicAccess: publicAccess,
	publication: publication,
	publishedOn: publishedOn,
	publisher: publisher,
	publishingPrinciples: publishingPrinciples,
	purchaseDate: purchaseDate,
	query: query,
	quest: quest,
	question: question,
	ratingCount: ratingCount,
	ratingValue: ratingValue,
	readonlyValue: readonlyValue,
	realEstateAgent: realEstateAgent,
	recipe: recipe,
	recipeCategory: recipeCategory,
	recipeCuisine: recipeCuisine,
	recipeInstructions: recipeInstructions,
	recipeYield: recipeYield,
	recordLabel: recordLabel,
	referenceQuantity: referenceQuantity,
	referencesOrder: referencesOrder,
	regionsAllowed: regionsAllowed,
	relatedLink: relatedLink,
	relatedTo: relatedTo,
	releaseDate: releaseDate,
	releaseNotes: releaseNotes,
	releasedEvent: releasedEvent,
	relevantOccupation: relevantOccupation,
	remainingAttendeeCapacity: remainingAttendeeCapacity,
	replacee: replacee,
	replacer: replacer,
	replyToUrl: replyToUrl,
	reportNumber: reportNumber,
	representativeOfPage: representativeOfPage,
	requiredCollateral: requiredCollateral,
	requiredGender: requiredGender,
	requiredMaxAge: requiredMaxAge,
	requiredMinAge: requiredMinAge,
	requiredQuantity: requiredQuantity,
	requirements: requirements,
	requiresSubscription: requiresSubscription,
	reservationFor: reservationFor,
	reservationId: reservationId,
	reservationStatus: reservationStatus,
	reservedTicket: reservedTicket,
	responsibilities: responsibilities,
	resultComment: resultComment,
	resultReview: resultReview,
	reviewAspect: reviewAspect,
	reviewBody: reviewBody,
	reviewCount: reviewCount,
	reviewRating: reviewRating,
	reviewedBy: reviewedBy,
	reviews: reviews,
	rsvpResponse: rsvpResponse,
	runtime: runtime,
	salaryCurrency: salaryCurrency,
	sameAs: sameAs,
	sampleType: sampleType,
	saturatedFatContent: saturatedFatContent,
	scheduledPaymentDate: scheduledPaymentDate,
	scheduledTime: scheduledTime,
	schemaVersion: schemaVersion,
	screenCount: screenCount,
	screenshot: screenshot,
	seasonNumber: seasonNumber,
	seasons: seasons,
	seatNumber: seatNumber,
	seatRow: seatRow,
	seatSection: seatSection,
	seatingType: seatingType,
	securityScreening: securityScreening,
	seeks: seeks,
	sender: sender,
	serverStatus: serverStatus,
	servesCuisine: servesCuisine,
	serviceAudience: serviceAudience,
	serviceLocation: serviceLocation,
	serviceOperator: serviceOperator,
	servicePhone: servicePhone,
	servicePostalAddress: servicePostalAddress,
	serviceSmsNumber: serviceSmsNumber,
	serviceType: serviceType,
	serviceUrl: serviceUrl,
	servingSize: servingSize,
	sharedContent: sharedContent,
	siblings: siblings,
	significantLinks: significantLinks,
	skills: skills,
	sku: sku,
	slogan: slogan,
	smokingAllowed: smokingAllowed,
	sodiumContent: sodiumContent,
	softwareAddOn: softwareAddOn,
	softwareHelp: softwareHelp,
	softwareVersion: softwareVersion,
	sourceOrganization: sourceOrganization,
	spatial: spatial,
	spatialCoverage: spatialCoverage,
	speakable: speakable,
	specialCommitments: specialCommitments,
	specialOpeningHoursSpecification: specialOpeningHoursSpecification,
	specialty: specialty,
	sport: sport,
	sportsActivityLocation: sportsActivityLocation,
	sportsEvent: sportsEvent,
	sportsTeam: sportsTeam,
	spouse: spouse,
	starRating: starRating,
	startDate: startDate,
	startTime: startTime,
	steeringPosition: steeringPosition,
	stepValue: stepValue,
	steps: steps,
	storageRequirements: storageRequirements,
	streetAddress: streetAddress,
	subEvents: subEvents,
	subReservation: subReservation,
	subtitleLanguage: subtitleLanguage,
	successorOf: successorOf,
	sugarContent: sugarContent,
	suggestedGender: suggestedGender,
	suggestedMaxAge: suggestedMaxAge,
	suggestedMinAge: suggestedMinAge,
	suitableForDiet: suitableForDiet,
	supportingData: supportingData,
	surface: surface,
	target: target,
	targetDescription: targetDescription,
	targetName: targetName,
	targetPlatform: targetPlatform,
	targetProduct: targetProduct,
	targetUrl: targetUrl,
	taxID: taxID,
	telephone: telephone,
	temporal: temporal,
	text: text,
	thumbnail: thumbnail,
	thumbnailUrl: thumbnailUrl,
	tickerSymbol: tickerSymbol,
	ticketNumber: ticketNumber,
	ticketToken: ticketToken,
	ticketedSeat: ticketedSeat,
	timeRequired: timeRequired,
	title: title,
	toLocation: toLocation,
	toRecipient: toRecipient,
	tool: tool,
	totalPaymentDue: totalPaymentDue,
	totalPrice: totalPrice,
	totalTime: totalTime,
	touristType: touristType,
	trackingNumber: trackingNumber,
	trackingUrl: trackingUrl,
	tracks: tracks,
	trailer: trailer,
	trainName: trainName,
	trainNumber: trainNumber,
	transFatContent: transFatContent,
	transcript: transcript,
	translator: translator,
	typeOfBed: typeOfBed,
	typeOfGood: typeOfGood,
	typicalAgeRange: typicalAgeRange,
	underName: underName,
	unitCode: unitCode,
	unitText: unitText,
	unsaturatedFatContent: unsaturatedFatContent,
	uploadDate: uploadDate,
	upvoteCount: upvoteCount,
	url: url,
	urlTemplate: urlTemplate,
	userInteractionCount: userInteractionCount,
	validFor: validFor,
	validFrom: validFrom,
	validIn: validIn,
	validThrough: validThrough,
	validUntil: validUntil,
	value: value,
	valueAddedTaxIncluded: valueAddedTaxIncluded,
	valueMaxLength: valueMaxLength,
	valueMinLength: valueMinLength,
	valueName: valueName,
	valuePattern: valuePattern,
	valueReference: valueReference,
	valueRequired: valueRequired,
	vatID: vatID,
	vehicleConfiguration: vehicleConfiguration,
	vehicleEngine: vehicleEngine,
	vehicleIdentificationNumber: vehicleIdentificationNumber,
	vehicleInteriorColor: vehicleInteriorColor,
	vehicleInteriorType: vehicleInteriorType,
	vehicleModelDate: vehicleModelDate,
	vehicleSeatingCapacity: vehicleSeatingCapacity,
	vehicleTransmission: vehicleTransmission,
	vendor: vendor,
	version: version,
	video: video,
	videoFormat: videoFormat,
	videoFrameSize: videoFrameSize,
	videoQuality: videoQuality,
	volumeNumber: volumeNumber,
	warrantyPromise: warrantyPromise,
	warrantyScope: warrantyScope,
	webCheckinTime: webCheckinTime,
	weight: weight,
	width: width,
	winner: winner,
	wordCount: wordCount,
	workHours: workHours,
	workLocation: workLocation,
	workPerformed: workPerformed,
	workPresented: workPresented,
	worksFor: worksFor,
	worstRating: worstRating,
	xpath: xpath,
	yearlyRevenue: yearlyRevenue,
	yearsInOperation: yearsInOperation,
	actionApplication: actionApplication,
	actionOption: actionOption,
	actor: actor,
	album: album,
	albumRelease: albumRelease,
	alumni: alumni,
	alumniOf: alumniOf,
	artworkSurface: artworkSurface,
	attendee: attendee,
	audience: audience,
	availableOnDevice: availableOnDevice,
	award: award,
	blogPost: blogPost,
	broker: broker,
	codeSampleType: codeSampleType,
	colleague: colleague,
	contactPoint: contactPoint,
	containsPlace: containsPlace,
	containsSeason: containsSeason,
	contentLocation: contentLocation,
	dataset: dataset,
	description: description,
	director: director,
	duration: duration,
	employee: employee,
	encodesCreativeWork: encodesCreativeWork,
	encodingFormat: encodingFormat,
	episode: episode,
	event: event,
	exampleOfWork: exampleOfWork,
	executableLibraryName: executableLibraryName,
	exerciseCourse: exerciseCourse,
	founder: founder,
	game: game,
	gameServer: gameServer,
	hasBroadcastChannel: hasBroadcastChannel,
	hasMenu: hasMenu,
	inLanguage: inLanguage,
	incentiveCompensation: incentiveCompensation,
	interactionStatistic: interactionStatistic,
	isAccessibleForFree: isAccessibleForFree,
	isBasedOn: isBasedOn,
	jobBenefits: jobBenefits,
	mainEntity: mainEntity,
	mainEntityOfPage: mainEntityOfPage,
	makesOffer: makesOffer,
	offeredBy: offeredBy,
	parent: parent,
	partOfSeries: partOfSeries,
	paymentDueDate: paymentDueDate,
	performTime: performTime,
	performer: performer,
	photo: photo,
	provider: provider,
	providesBroadcastService: providesBroadcastService,
	recipeIngredient: recipeIngredient,
	recordedAs: recordedAs,
	recordedAt: recordedAt,
	recordedIn: recordedIn,
	recordingOf: recordingOf,
	releaseOf: releaseOf,
	review: review,
	roleName: roleName,
	runtimePlatform: runtimePlatform,
	season: season,
	serialNumber: serialNumber,
	serviceArea: serviceArea,
	serviceOutput: serviceOutput,
	sibling: sibling,
	significantLink: significantLink,
	softwareRequirements: softwareRequirements,
	sponsor: sponsor,
	subOrganization: subOrganization,
	subjectOf: subjectOf,
	suggestedAnswer: suggestedAnswer,
	superEvent: superEvent,
	targetCollection: targetCollection,
	temporalCoverage: temporalCoverage,
	track: track,
	warranty: warranty,
	workExample: workExample,
	yield__workaround: yield__workaround,
	about: about,
	competitor: competitor,
	containedInPlace: containedInPlace,
	encoding: encoding,
	hasMap: hasMap,
	image: image,
	material: material,
	memberOf: memberOf,
	parentOrganization: parentOrganization,
	result: result,
	seller: seller,
	step: step,
	subEvent: subEvent,
	supply: supply,
	workFeatured: workFeatured,
	areaServed: areaServed,
	includedInDataCatalog: includedInDataCatalog,
	member: member,
	recipient: recipient,
	hasPart: hasPart,
	isPartOf: isPartOf,
	position: position,
	instrument: instrument,
	object: object,
	location: location,
	participant: participant,
	identifier: identifier,
	AMRadioChannel: AMRadioChannel,
	APIReference: APIReference,
	AboutPage: AboutPage,
	AcceptAction: AcceptAction,
	Accommodation: Accommodation,
	AccountingService: AccountingService,
	AchieveAction: AchieveAction,
	Action: Action,
	ActionAccessSpecification: ActionAccessSpecification,
	ActionStatusType: ActionStatusType,
	ActivateAction: ActivateAction,
	AddAction: AddAction,
	AdministrativeArea: AdministrativeArea,
	AdultEntertainment: AdultEntertainment,
	AggregateOffer: AggregateOffer,
	AggregateRating: AggregateRating,
	AgreeAction: AgreeAction,
	Airline: Airline,
	Airport: Airport,
	AlignmentObject: AlignmentObject,
	AllocateAction: AllocateAction,
	AmusementPark: AmusementPark,
	AnimalShelter: AnimalShelter,
	Answer: Answer,
	Apartment: Apartment,
	ApartmentComplex: ApartmentComplex,
	AppendAction: AppendAction,
	ApplyAction: ApplyAction,
	Aquarium: Aquarium,
	ArriveAction: ArriveAction,
	ArtGallery: ArtGallery,
	Article: Article,
	AskAction: AskAction,
	AssessAction: AssessAction,
	AssignAction: AssignAction,
	Attorney: Attorney,
	Audience: Audience,
	AudioObject: AudioObject,
	AuthorizeAction: AuthorizeAction,
	AutoBodyShop: AutoBodyShop,
	AutoDealer: AutoDealer,
	AutoPartsStore: AutoPartsStore,
	AutoRental: AutoRental,
	AutoRepair: AutoRepair,
	AutoWash: AutoWash,
	AutomatedTeller: AutomatedTeller,
	AutomotiveBusiness: AutomotiveBusiness,
	Bakery: Bakery,
	BankAccount: BankAccount,
	BankOrCreditUnion: BankOrCreditUnion,
	BarOrPub: BarOrPub,
	Barcode: Barcode,
	Beach: Beach,
	BeautySalon: BeautySalon,
	BedAndBreakfast: BedAndBreakfast,
	BedDetails: BedDetails,
	BedType: BedType,
	BefriendAction: BefriendAction,
	BikeStore: BikeStore,
	Blog: Blog,
	BlogPosting: BlogPosting,
	BoardingPolicyType: BoardingPolicyType,
	BodyOfWater: BodyOfWater,
	Book: Book,
	BookFormatType: BookFormatType,
	BookSeries: BookSeries,
	BookStore: BookStore,
	BookmarkAction: BookmarkAction,
	Boolean: Boolean,
	BorrowAction: BorrowAction,
	BowlingAlley: BowlingAlley,
	Brand: Brand,
	BreadcrumbList: BreadcrumbList,
	Brewery: Brewery,
	Bridge: Bridge,
	BroadcastChannel: BroadcastChannel,
	BroadcastEvent: BroadcastEvent,
	BroadcastFrequencySpecification: BroadcastFrequencySpecification,
	BroadcastService: BroadcastService,
	BuddhistTemple: BuddhistTemple,
	BusReservation: BusReservation,
	BusStation: BusStation,
	BusStop: BusStop,
	BusTrip: BusTrip,
	BusinessAudience: BusinessAudience,
	BusinessEntityType: BusinessEntityType,
	BusinessEvent: BusinessEvent,
	BusinessFunction: BusinessFunction,
	BuyAction: BuyAction,
	CableOrSatelliteService: CableOrSatelliteService,
	CafeOrCoffeeShop: CafeOrCoffeeShop,
	Campground: Campground,
	CampingPitch: CampingPitch,
	Canal: Canal,
	CancelAction: CancelAction,
	Car: Car,
	Casino: Casino,
	CatholicChurch: CatholicChurch,
	Cemetery: Cemetery,
	CheckAction: CheckAction,
	CheckInAction: CheckInAction,
	CheckOutAction: CheckOutAction,
	CheckoutPage: CheckoutPage,
	ChildCare: ChildCare,
	ChildrensEvent: ChildrensEvent,
	ChooseAction: ChooseAction,
	Church: Church,
	City: City,
	CityHall: CityHall,
	CivicStructure: CivicStructure,
	ClaimReview: ClaimReview,
	Clip: Clip,
	ClothingStore: ClothingStore,
	Code: Code,
	CollectionPage: CollectionPage,
	CollegeOrUniversity: CollegeOrUniversity,
	ComedyClub: ComedyClub,
	ComedyEvent: ComedyEvent,
	Comment: Comment,
	CommentAction: CommentAction,
	CommunicateAction: CommunicateAction,
	CompoundPriceSpecification: CompoundPriceSpecification,
	ComputerLanguage: ComputerLanguage,
	ComputerStore: ComputerStore,
	ConfirmAction: ConfirmAction,
	ConsumeAction: ConsumeAction,
	ContactPage: ContactPage,
	ContactPoint: ContactPoint,
	ContactPointOption: ContactPointOption,
	Continent: Continent,
	ControlAction: ControlAction,
	ConvenienceStore: ConvenienceStore,
	Conversation: Conversation,
	CookAction: CookAction,
	Corporation: Corporation,
	Country: Country,
	Course: Course,
	CourseInstance: CourseInstance,
	Courthouse: Courthouse,
	CreateAction: CreateAction,
	CreativeWork: CreativeWork,
	CreativeWorkSeason: CreativeWorkSeason,
	CreativeWorkSeries: CreativeWorkSeries,
	CreditCard: CreditCard,
	Crematorium: Crematorium,
	CurrencyConversionService: CurrencyConversionService,
	DanceEvent: DanceEvent,
	DanceGroup: DanceGroup,
	DataCatalog: DataCatalog,
	DataDownload: DataDownload,
	DataFeed: DataFeed,
	DataFeedItem: DataFeedItem,
	DataType: DataType,
	Dataset: Dataset,
	Date: Date,
	DateTime: DateTime,
	DatedMoneySpecification: DatedMoneySpecification,
	DayOfWeek: DayOfWeek,
	DaySpa: DaySpa,
	DeactivateAction: DeactivateAction,
	DefenceEstablishment: DefenceEstablishment,
	DeleteAction: DeleteAction,
	DeliveryChargeSpecification: DeliveryChargeSpecification,
	DeliveryEvent: DeliveryEvent,
	DeliveryMethod: DeliveryMethod,
	Demand: Demand,
	Dentist: Dentist,
	DepartAction: DepartAction,
	DepartmentStore: DepartmentStore,
	DepositAccount: DepositAccount,
	DigitalDocument: DigitalDocument,
	DigitalDocumentPermission: DigitalDocumentPermission,
	DigitalDocumentPermissionType: DigitalDocumentPermissionType,
	DisagreeAction: DisagreeAction,
	DiscoverAction: DiscoverAction,
	DiscussionForumPosting: DiscussionForumPosting,
	DislikeAction: DislikeAction,
	Distance: Distance,
	Distillery: Distillery,
	DonateAction: DonateAction,
	DownloadAction: DownloadAction,
	DrawAction: DrawAction,
	DrinkAction: DrinkAction,
	DriveWheelConfigurationValue: DriveWheelConfigurationValue,
	DryCleaningOrLaundry: DryCleaningOrLaundry,
	Duration: Duration,
	EatAction: EatAction,
	EducationEvent: EducationEvent,
	EducationalAudience: EducationalAudience,
	EducationalOrganization: EducationalOrganization,
	Electrician: Electrician,
	ElectronicsStore: ElectronicsStore,
	ElementarySchool: ElementarySchool,
	EmailMessage: EmailMessage,
	Embassy: Embassy,
	EmergencyService: EmergencyService,
	EmployeeRole: EmployeeRole,
	EmployerAggregateRating: EmployerAggregateRating,
	EmploymentAgency: EmploymentAgency,
	EndorseAction: EndorseAction,
	EndorsementRating: EndorsementRating,
	Energy: Energy,
	EngineSpecification: EngineSpecification,
	EntertainmentBusiness: EntertainmentBusiness,
	EntryPoint: EntryPoint,
	Enumeration: Enumeration,
	Episode: Episode,
	Event: Event,
	EventReservation: EventReservation,
	EventStatusType: EventStatusType,
	EventVenue: EventVenue,
	ExerciseAction: ExerciseAction,
	ExerciseGym: ExerciseGym,
	ExhibitionEvent: ExhibitionEvent,
	FAQPage: FAQPage,
	FMRadioChannel: FMRadioChannel,
	FastFoodRestaurant: FastFoodRestaurant,
	Festival: Festival,
	FilmAction: FilmAction,
	FinancialProduct: FinancialProduct,
	FinancialService: FinancialService,
	FindAction: FindAction,
	FireStation: FireStation,
	Flight: Flight,
	FlightReservation: FlightReservation,
	Float: Float,
	Florist: Florist,
	FollowAction: FollowAction,
	FoodEstablishment: FoodEstablishment,
	FoodEstablishmentReservation: FoodEstablishmentReservation,
	FoodEvent: FoodEvent,
	FoodService: FoodService,
	FurnitureStore: FurnitureStore,
	Game: Game,
	GamePlayMode: GamePlayMode,
	GameServer: GameServer,
	GameServerStatus: GameServerStatus,
	GardenStore: GardenStore,
	GasStation: GasStation,
	GatedResidenceCommunity: GatedResidenceCommunity,
	GenderType: GenderType,
	GeneralContractor: GeneralContractor,
	GeoCircle: GeoCircle,
	GeoCoordinates: GeoCoordinates,
	GeoShape: GeoShape,
	GiveAction: GiveAction,
	GolfCourse: GolfCourse,
	GovernmentBuilding: GovernmentBuilding,
	GovernmentOffice: GovernmentOffice,
	GovernmentOrganization: GovernmentOrganization,
	GovernmentPermit: GovernmentPermit,
	GovernmentService: GovernmentService,
	GroceryStore: GroceryStore,
	HVACBusiness: HVACBusiness,
	HairSalon: HairSalon,
	HardwareStore: HardwareStore,
	HealthAndBeautyBusiness: HealthAndBeautyBusiness,
	HealthClub: HealthClub,
	HighSchool: HighSchool,
	HinduTemple: HinduTemple,
	HobbyShop: HobbyShop,
	HomeAndConstructionBusiness: HomeAndConstructionBusiness,
	HomeGoodsStore: HomeGoodsStore,
	Hospital: Hospital,
	Hostel: Hostel,
	Hotel: Hotel,
	HotelRoom: HotelRoom,
	House: House,
	HousePainter: HousePainter,
	HowTo: HowTo,
	HowToDirection: HowToDirection,
	HowToItem: HowToItem,
	HowToSection: HowToSection,
	HowToStep: HowToStep,
	HowToSupply: HowToSupply,
	HowToTip: HowToTip,
	HowToTool: HowToTool,
	IceCreamShop: IceCreamShop,
	IgnoreAction: IgnoreAction,
	ImageGallery: ImageGallery,
	ImageObject: ImageObject,
	IndividualProduct: IndividualProduct,
	InformAction: InformAction,
	InsertAction: InsertAction,
	InstallAction: InstallAction,
	InsuranceAgency: InsuranceAgency,
	Intangible: Intangible,
	Integer: Integer,
	InteractAction: InteractAction,
	InteractionCounter: InteractionCounter,
	InternetCafe: InternetCafe,
	InvestmentOrDeposit: InvestmentOrDeposit,
	InviteAction: InviteAction,
	Invoice: Invoice,
	ItemAvailability: ItemAvailability,
	ItemList: ItemList,
	ItemListOrderType: ItemListOrderType,
	ItemPage: ItemPage,
	JewelryStore: JewelryStore,
	JobPosting: JobPosting,
	JoinAction: JoinAction,
	LakeBodyOfWater: LakeBodyOfWater,
	Landform: Landform,
	LandmarksOrHistoricalBuildings: LandmarksOrHistoricalBuildings,
	Language: Language,
	LeaveAction: LeaveAction,
	LegalService: LegalService,
	LegislativeBuilding: LegislativeBuilding,
	LendAction: LendAction,
	Library: Library,
	LikeAction: LikeAction,
	LiquorStore: LiquorStore,
	ListItem: ListItem,
	ListenAction: ListenAction,
	LiteraryEvent: LiteraryEvent,
	LiveBlogPosting: LiveBlogPosting,
	LoanOrCredit: LoanOrCredit,
	LocalBusiness: LocalBusiness,
	LocationFeatureSpecification: LocationFeatureSpecification,
	LockerDelivery: LockerDelivery,
	Locksmith: Locksmith,
	LodgingBusiness: LodgingBusiness,
	LodgingReservation: LodgingReservation,
	LoseAction: LoseAction,
	Map: Map,
	MapCategoryType: MapCategoryType,
	MarryAction: MarryAction,
	Mass: Mass,
	MediaObject: MediaObject,
	MediaSubscription: MediaSubscription,
	MedicalOrganization: MedicalOrganization,
	MeetingRoom: MeetingRoom,
	MensClothingStore: MensClothingStore,
	Menu: Menu,
	MenuItem: MenuItem,
	MenuSection: MenuSection,
	Message: Message,
	MiddleSchool: MiddleSchool,
	MobileApplication: MobileApplication,
	MobilePhoneStore: MobilePhoneStore,
	MonetaryAmount: MonetaryAmount,
	MonetaryAmountDistribution: MonetaryAmountDistribution,
	Mosque: Mosque,
	Motel: Motel,
	MotorcycleDealer: MotorcycleDealer,
	MotorcycleRepair: MotorcycleRepair,
	Mountain: Mountain,
	MoveAction: MoveAction,
	Movie: Movie,
	MovieClip: MovieClip,
	MovieRentalStore: MovieRentalStore,
	MovieSeries: MovieSeries,
	MovieTheater: MovieTheater,
	MovingCompany: MovingCompany,
	Museum: Museum,
	MusicAlbum: MusicAlbum,
	MusicAlbumProductionType: MusicAlbumProductionType,
	MusicAlbumReleaseType: MusicAlbumReleaseType,
	MusicComposition: MusicComposition,
	MusicEvent: MusicEvent,
	MusicGroup: MusicGroup,
	MusicPlaylist: MusicPlaylist,
	MusicRecording: MusicRecording,
	MusicRelease: MusicRelease,
	MusicReleaseFormatType: MusicReleaseFormatType,
	MusicStore: MusicStore,
	MusicVenue: MusicVenue,
	MusicVideoObject: MusicVideoObject,
	NGO: NGO,
	NailSalon: NailSalon,
	NewsArticle: NewsArticle,
	NightClub: NightClub,
	Notary: Notary,
	NoteDigitalDocument: NoteDigitalDocument,
	Number: Number,
	NutritionInformation: NutritionInformation,
	Occupation: Occupation,
	OceanBodyOfWater: OceanBodyOfWater,
	Offer: Offer,
	OfferCatalog: OfferCatalog,
	OfferItemCondition: OfferItemCondition,
	OfficeEquipmentStore: OfficeEquipmentStore,
	OnDemandEvent: OnDemandEvent,
	OpeningHoursSpecification: OpeningHoursSpecification,
	Order: Order,
	OrderAction: OrderAction,
	OrderItem: OrderItem,
	OrderStatus: OrderStatus,
	Organization: Organization,
	OrganizationRole: OrganizationRole,
	OrganizeAction: OrganizeAction,
	OutletStore: OutletStore,
	OwnershipInfo: OwnershipInfo,
	PaintAction: PaintAction,
	Painting: Painting,
	ParcelDelivery: ParcelDelivery,
	ParcelService: ParcelService,
	ParentAudience: ParentAudience,
	Park: Park,
	ParkingFacility: ParkingFacility,
	PawnShop: PawnShop,
	PayAction: PayAction,
	PaymentCard: PaymentCard,
	PaymentChargeSpecification: PaymentChargeSpecification,
	PaymentMethod: PaymentMethod,
	PaymentService: PaymentService,
	PaymentStatusType: PaymentStatusType,
	PeopleAudience: PeopleAudience,
	PerformAction: PerformAction,
	PerformanceRole: PerformanceRole,
	PerformingArtsTheater: PerformingArtsTheater,
	PerformingGroup: PerformingGroup,
	Periodical: Periodical,
	Permit: Permit,
	Person: Person,
	PetStore: PetStore,
	Pharmacy: Pharmacy,
	Photograph: Photograph,
	PhotographAction: PhotographAction,
	Physician: Physician,
	Place: Place,
	PlaceOfWorship: PlaceOfWorship,
	PlanAction: PlanAction,
	PlayAction: PlayAction,
	Playground: Playground,
	Plumber: Plumber,
	PoliceStation: PoliceStation,
	Pond: Pond,
	PostOffice: PostOffice,
	PostalAddress: PostalAddress,
	PreOrderAction: PreOrderAction,
	PrependAction: PrependAction,
	Preschool: Preschool,
	PresentationDigitalDocument: PresentationDigitalDocument,
	PriceSpecification: PriceSpecification,
	Product: Product,
	ProductModel: ProductModel,
	ProfessionalService: ProfessionalService,
	ProfilePage: ProfilePage,
	ProgramMembership: ProgramMembership,
	PropertyValue: PropertyValue,
	PropertyValueSpecification: PropertyValueSpecification,
	PublicSwimmingPool: PublicSwimmingPool,
	PublicationEvent: PublicationEvent,
	PublicationIssue: PublicationIssue,
	PublicationVolume: PublicationVolume,
	QAPage: QAPage,
	QualitativeValue: QualitativeValue,
	QuantitativeValue: QuantitativeValue,
	QuantitativeValueDistribution: QuantitativeValueDistribution,
	Quantity: Quantity,
	Question: Question,
	QuoteAction: QuoteAction,
	RVPark: RVPark,
	RadioChannel: RadioChannel,
	RadioClip: RadioClip,
	RadioEpisode: RadioEpisode,
	RadioSeason: RadioSeason,
	RadioSeries: RadioSeries,
	RadioStation: RadioStation,
	Rating: Rating,
	ReactAction: ReactAction,
	ReadAction: ReadAction,
	RealEstateAgent: RealEstateAgent,
	ReceiveAction: ReceiveAction,
	Recipe: Recipe,
	RecyclingCenter: RecyclingCenter,
	RegisterAction: RegisterAction,
	RejectAction: RejectAction,
	RentAction: RentAction,
	RentalCarReservation: RentalCarReservation,
	ReplaceAction: ReplaceAction,
	ReplyAction: ReplyAction,
	Report: Report,
	Reservation: Reservation,
	ReservationPackage: ReservationPackage,
	ReservationStatusType: ReservationStatusType,
	ReserveAction: ReserveAction,
	Reservoir: Reservoir,
	Residence: Residence,
	Resort: Resort,
	Restaurant: Restaurant,
	RestrictedDiet: RestrictedDiet,
	ResumeAction: ResumeAction,
	ReturnAction: ReturnAction,
	Review: Review,
	ReviewAction: ReviewAction,
	RiverBodyOfWater: RiverBodyOfWater,
	Role: Role,
	RoofingContractor: RoofingContractor,
	Room: Room,
	RsvpAction: RsvpAction,
	RsvpResponseType: RsvpResponseType,
	SaleEvent: SaleEvent,
	ScheduleAction: ScheduleAction,
	ScholarlyArticle: ScholarlyArticle,
	School: School,
	ScreeningEvent: ScreeningEvent,
	Sculpture: Sculpture,
	SeaBodyOfWater: SeaBodyOfWater,
	SearchAction: SearchAction,
	SearchResultsPage: SearchResultsPage,
	Season: Season,
	Seat: Seat,
	SelfStorage: SelfStorage,
	SellAction: SellAction,
	SendAction: SendAction,
	Series: Series,
	Service: Service,
	ServiceChannel: ServiceChannel,
	ShareAction: ShareAction,
	ShoeStore: ShoeStore,
	ShoppingCenter: ShoppingCenter,
	SingleFamilyResidence: SingleFamilyResidence,
	SiteNavigationElement: SiteNavigationElement,
	SkiResort: SkiResort,
	SocialEvent: SocialEvent,
	SocialMediaPosting: SocialMediaPosting,
	SoftwareApplication: SoftwareApplication,
	SoftwareSourceCode: SoftwareSourceCode,
	SomeProducts: SomeProducts,
	SpeakableSpecification: SpeakableSpecification,
	Specialty: Specialty,
	SportingGoodsStore: SportingGoodsStore,
	SportsActivityLocation: SportsActivityLocation,
	SportsClub: SportsClub,
	SportsEvent: SportsEvent,
	SportsOrganization: SportsOrganization,
	SportsTeam: SportsTeam,
	SpreadsheetDigitalDocument: SpreadsheetDigitalDocument,
	StadiumOrArena: StadiumOrArena,
	State: State,
	SteeringPositionValue: SteeringPositionValue,
	Store: Store,
	StructuredValue: StructuredValue,
	SubscribeAction: SubscribeAction,
	SubwayStation: SubwayStation,
	Suite: Suite,
	SuspendAction: SuspendAction,
	Synagogue: Synagogue,
	TVClip: TVClip,
	TVEpisode: TVEpisode,
	TVSeason: TVSeason,
	TVSeries: TVSeries,
	Table: Table,
	TakeAction: TakeAction,
	TattooParlor: TattooParlor,
	Taxi: Taxi,
	TaxiReservation: TaxiReservation,
	TaxiService: TaxiService,
	TaxiStand: TaxiStand,
	TechArticle: TechArticle,
	TelevisionChannel: TelevisionChannel,
	TelevisionStation: TelevisionStation,
	TennisComplex: TennisComplex,
	Text: Text,
	TextDigitalDocument: TextDigitalDocument,
	TheaterEvent: TheaterEvent,
	TheaterGroup: TheaterGroup,
	Thing: Thing,
	Ticket: Ticket,
	TieAction: TieAction,
	Time: Time,
	TipAction: TipAction,
	TireShop: TireShop,
	TouristAttraction: TouristAttraction,
	TouristInformationCenter: TouristInformationCenter,
	ToyStore: ToyStore,
	TrackAction: TrackAction,
	TradeAction: TradeAction,
	TrainReservation: TrainReservation,
	TrainStation: TrainStation,
	TrainTrip: TrainTrip,
	TransferAction: TransferAction,
	TravelAction: TravelAction,
	TravelAgency: TravelAgency,
	Trip: Trip,
	TypeAndQuantityNode: TypeAndQuantityNode,
	URL: URL,
	UnRegisterAction: UnRegisterAction,
	UnitPriceSpecification: UnitPriceSpecification,
	UpdateAction: UpdateAction,
	UseAction: UseAction,
	UserBlocks: UserBlocks,
	UserCheckins: UserCheckins,
	UserComments: UserComments,
	UserDownloads: UserDownloads,
	UserInteraction: UserInteraction,
	UserLikes: UserLikes,
	UserPageVisits: UserPageVisits,
	UserPlays: UserPlays,
	UserPlusOnes: UserPlusOnes,
	UserTweets: UserTweets,
	Vehicle: Vehicle,
	VideoGallery: VideoGallery,
	VideoGame: VideoGame,
	VideoGameClip: VideoGameClip,
	VideoGameSeries: VideoGameSeries,
	VideoObject: VideoObject,
	ViewAction: ViewAction,
	VisualArtsEvent: VisualArtsEvent,
	VisualArtwork: VisualArtwork,
	Volcano: Volcano,
	VoteAction: VoteAction,
	WPAdBlock: WPAdBlock,
	WPFooter: WPFooter,
	WPHeader: WPHeader,
	WPSideBar: WPSideBar,
	WantAction: WantAction,
	WarrantyPromise: WarrantyPromise,
	WarrantyScope: WarrantyScope,
	WatchAction: WatchAction,
	Waterfall: Waterfall,
	WearAction: WearAction,
	WebApplication: WebApplication,
	WebPage: WebPage,
	WebPageElement: WebPageElement,
	WebSite: WebSite,
	WholesaleStore: WholesaleStore,
	WinAction: WinAction,
	Winery: Winery,
	WorkersUnion: WorkersUnion,
	WriteAction: WriteAction,
	Zoo: Zoo
});

export { arrivalBusStop as $, addressLocality as A, addressRegion as B, advanceBookingRequirement as C, affiliation as D, afterMedia as E, agent as F, aggregateRating as G, aircraft as H, albumProductionType as I, albumReleaseType as J, albums as K, alignmentType as L, alternateName as M, alternativeHeadline as N, amenityFeature as O, amount as P, amountOfThisGood as Q, annualPercentageRate as R, answerCount as S, application as T, applicationCategory as U, applicationSubCategory as V, applicationSuite as W, appliesToDeliveryMethod as X, appliesToPaymentMethod as Y, area as Z, arrivalAirport as _, acceptedAnswer as a, broadcastTimezone as a$, arrivalGate as a0, arrivalPlatform as a1, arrivalStation as a2, arrivalTerminal as a3, arrivalTime as a4, artEdition as a5, artMedium as a6, artform as a7, articleBody as a8, articleSection as a9, bestRating as aA, billingAddress as aB, billingIncrement as aC, billingPeriod as aD, birthDate as aE, birthPlace as aF, bitrate as aG, blogPosts as aH, boardingGroup as aI, boardingPolicy as aJ, bookEdition as aK, bookFormat as aL, bookingAgent as aM, bookingTime as aN, borrower as aO, box as aP, branchCode as aQ, branchOf as aR, brand as aS, breadcrumb as aT, broadcastAffiliateOf as aU, broadcastChannelId as aV, broadcastDisplayName as aW, broadcastFrequency as aX, broadcastFrequencyValue as aY, broadcastOfEvent as aZ, broadcastServiceTier as a_, assembly as aa, assemblyVersion as ab, associatedArticle as ac, associatedMedia as ad, athlete as ae, attendees as af, audienceType as ag, audio as ah, authenticator as ai, author as aj, availability as ak, availabilityEnds as al, availabilityStarts as am, availableAtOrFrom as an, availableChannel as ao, availableDeliveryMethod as ap, availableFrom as aq, availableLanguage as ar, availableThrough as as, awards as at, awayTeam as au, baseSalary as av, bccRecipient as aw, bed as ax, beforeMedia as ay, benefits as az, acceptedOffer as b, coursePrerequisites as b$, broadcaster as b0, browserRequirements as b1, busName as b2, busNumber as b3, businessFunction as b4, buyer as b5, byArtist as b6, calories as b7, candidate as b8, caption as b9, collection as bA, color as bB, comment as bC, commentCount as bD, commentText as bE, commentTime as bF, composer as bG, confirmationNumber as bH, contactOption as bI, contactPoints as bJ, contactType as bK, containedIn as bL, contentRating as bM, contentSize as bN, contentType as bO, contentUrl as bP, contributor as bQ, cookTime as bR, cookingMethod as bS, copyrightHolder as bT, copyrightYear as bU, countriesNotSupported as bV, countriesSupported as bW, countryOfOrigin as bX, course as bY, courseCode as bZ, courseMode as b_, carbohydrateContent as ba, cargoVolume as bb, carrier as bc, carrierRequirements as bd, catalog as be, catalogNumber as bf, category as bg, ccRecipient as bh, character as bi, characterAttribute as bj, characterName as bk, cheatCode as bl, checkinTime as bm, checkoutTime as bn, childMaxAge as bo, childMinAge as bp, children as bq, cholesterolContent as br, circle as bs, citation as bt, claimReviewed as bu, clipNumber as bv, closes as bw, coach as bx, codeRepository as by, colleagues as bz, acceptedPaymentMethod as c, educationalRole as c$, coverageEndTime as c0, coverageStartTime as c1, creator as c2, creditedTo as c3, cssSelector as c4, currenciesAccepted as c5, currency as c6, customer as c7, dataFeedElement as c8, datasetTimeInterval as c9, departureTime as cA, dependencies as cB, depth as cC, device as cD, directors as cE, disambiguatingDescription as cF, discount as cG, discountCode as cH, discountCurrency as cI, discusses as cJ, discussionUrl as cK, dissolutionDate as cL, distance as cM, distribution as cN, doorTime as cO, downloadUrl as cP, downvoteCount as cQ, driveWheelConfiguration as cR, dropoffLocation as cS, dropoffTime as cT, duns as cU, durationOfWarranty as cV, duringMedia as cW, editor as cX, educationalAlignment as cY, educationalCredentialAwarded as cZ, educationalFramework as c_, dateCreated as ca, dateDeleted as cb, dateIssued as cc, dateModified as cd, datePosted as ce, datePublished as cf, dateRead as cg, dateReceived as ch, dateSent as ci, dateVehicleFirstRegistered as cj, dateline as ck, dayOfWeek as cl, deathDate as cm, deathPlace as cn, defaultValue as co, deliveryAddress as cp, deliveryLeadTime as cq, deliveryMethod as cr, deliveryStatus as cs, department as ct, departureAirport as cu, departureBusStop as cv, departureGate as cw, departurePlatform as cx, departureStation as cy, departureTerminal as cz, acceptsReservations as d, genre as d$, educationalUse as d0, elevation as d1, eligibleCustomerType as d2, eligibleDuration as d3, eligibleQuantity as d4, eligibleRegion as d5, eligibleTransactionVolume as d6, email as d7, embedUrl as d8, employees as d9, featureList as dA, feesAndCommissionsSpecification as dB, fiberContent as dC, fileFormat as dD, fileSize as dE, firstPerformance as dF, flightDistance as dG, flightNumber as dH, floorSize as dI, followee as dJ, follows as dK, foodEstablishment as dL, foodEvent as dM, founders as dN, foundingDate as dO, foundingLocation as dP, free as dQ, fromLocation as dR, fuelConsumption as dS, fuelEfficiency as dT, fuelType as dU, funder as dV, gameItem as dW, gameLocation as dX, gamePlatform as dY, gameTip as dZ, gender as d_, employmentType as da, encodingType as db, encodings as dc, endDate as dd, endTime as de, endorsee as df, entertainmentBusiness as dg, episodeNumber as dh, episodes as di, equal as dj, error as dk, estimatedCost as dl, estimatedFlightDuration as dm, estimatedSalary as dn, eventStatus as dp, events as dq, exifData as dr, expectedArrivalFrom as ds, expectedArrivalUntil as dt, expectsAcceptanceOf as du, experienceRequirements as dv, expires as dw, familyName as dx, fatContent as dy, faxNumber as dz, accessCode as e, isAccessoryOrSparePartFor as e$, geo as e0, geoContains as e1, geoCoveredBy as e2, geoCovers as e3, geoCrosses as e4, geoDisjoint as e5, geoEquals as e6, geoIntersects as e7, geoMidpoint as e8, geoOverlaps as e9, homeTeam as eA, honorificPrefix as eB, honorificSuffix as eC, hostingOrganization as eD, hoursAvailable as eE, httpMethod as eF, iataCode as eG, icaoCode as eH, illustrator as eI, inAlbum as eJ, inBroadcastLineup as eK, inPlaylist as eL, incentives as eM, includedComposition as eN, includedDataCatalog as eO, includesObject as eP, industry as eQ, ineligibleRegion as eR, ingredients as eS, installUrl as eT, instructor as eU, interactionCount as eV, interactionService as eW, interactionType as eX, interactivityType as eY, interestRate as eZ, inventoryLevel as e_, geoRadius as ea, geoTouches as eb, geoWithin as ec, geographicArea as ed, givenName as ee, globalLocationNumber as ef, grantee as eg, greater as eh, greaterOrEqual as ei, gtin12 as ej, gtin13 as ek, gtin14 as el, gtin8 as em, hasCourseInstance as en, hasDeliveryMethod as eo, hasDigitalDocumentPermission as ep, hasMenuItem as eq, hasMenuSection as er, hasOccupation as es, hasOfferCatalog as et, hasPOS as eu, headline as ev, height as ew, highPrice as ex, hiringOrganization as ey, homeLocation as ez, accessMode as f, mentions as f$, isBasedOnUrl as f0, isConsumableFor as f1, isFamilyFriendly as f2, isGift as f3, isLiveBroadcast as f4, isRelatedTo as f5, isSimilarTo as f6, isVariantOf as f7, isbn as f8, isicV4 as f9, lesserOrEqual as fA, license as fB, line as fC, liveBlogUpdate as fD, loanTerm as fE, locationCreated as fF, lodgingUnitDescription as fG, lodgingUnitType as fH, logo as fI, longitude as fJ, loser as fK, lowPrice as fL, lyricist as fM, lyrics as fN, mainContentOfPage as fO, manufacturer as fP, map as fQ, mapType as fR, maps as fS, maxPrice as fT, maxValue as fU, maximumAttendeeCapacity as fV, mealService as fW, median as fX, members as fY, membershipNumber as fZ, memoryRequirements as f_, isrcCode as fa, issn as fb, issueNumber as fc, issuedBy as fd, issuedThrough as fe, iswcCode as ff, item as fg, itemCondition as fh, itemListElement as fi, itemListOrder as fj, itemOffered as fk, itemReviewed as fl, itemShipped as fm, jobLocation as fn, keywords as fo, knownVehicleDamages as fp, knows as fq, landlord as fr, language as fs, lastReviewed as ft, latitude as fu, learningResourceType as fv, legalName as fw, leiCode as fx, lender as fy, lesser as fz, accessModeSufficient as g, originAddress as g$, menu as g0, menuAddOn as g1, merchant as g2, messageAttachment as g3, mileageFromOdometer as g4, minPrice as g5, minValue as g6, minimumPaymentDue as g7, model as g8, modifiedTime as g9, numberOfPages as gA, numberOfPlayers as gB, numberOfPreviousOwners as gC, numberOfRooms as gD, numberOfSeasons as gE, numberedPosition as gF, nutrition as gG, occupancy as gH, occupationLocation as gI, occupationalCategory as gJ, offerCount as gK, offers as gL, openingHours as gM, openingHoursSpecification as gN, opens as gO, operatingSystem as gP, opponent as gQ, option as gR, orderDate as gS, orderDelivery as gT, orderItemNumber as gU, orderItemStatus as gV, orderNumber as gW, orderQuantity as gX, orderStatus as gY, orderedItem as gZ, organizer as g_, mpn as ga, multipleValues as gb, musicArrangement as gc, musicBy as gd, musicCompositionForm as ge, musicGroupMember as gf, musicReleaseFormat as gg, musicalKey as gh, naics as gi, name as gj, namedPosition as gk, nationality as gl, netWorth as gm, nextItem as gn, nonEqual as go, numAdults as gp, numChildren as gq, numTracks as gr, numberOfAirbags as gs, numberOfAxles as gt, numberOfBeds as gu, numberOfDoors as gv, numberOfEmployees as gw, numberOfEpisodes as gx, numberOfForwardGears as gy, numberOfItems as gz, accessibilityAPI as h, produces as h$, ownedFrom as h0, ownedThrough as h1, owns as h2, pageEnd as h3, pageStart as h4, pagination as h5, parentItem as h6, parentService as h7, parents as h8, partOfEpisode as h9, pickupTime as hA, playMode as hB, playerType as hC, playersOnline as hD, polygon as hE, postOfficeBoxNumber as hF, postalCode as hG, potentialAction as hH, predecessorOf as hI, prepTime as hJ, previousItem as hK, previousStartDate as hL, price as hM, priceComponent as hN, priceCurrency as hO, priceRange as hP, priceSpecification as hQ, priceType as hR, priceValidUntil as hS, primaryImageOfPage as hT, printColumn as hU, printEdition as hV, printPage as hW, printSection as hX, processingTime as hY, processorRequirements as hZ, producer as h_, partOfInvoice as ha, partOfOrder as hb, partOfSeason as hc, partOfTVSeries as hd, partySize as he, passengerPriorityStatus as hf, passengerSequenceNumber as hg, paymentAccepted as hh, paymentDue as hi, paymentMethod as hj, paymentMethodId as hk, paymentStatus as hl, paymentUrl as hm, percentile10 as hn, percentile25 as ho, percentile75 as hp, percentile90 as hq, performerIn as hr, performers as hs, permissionType as ht, permissions as hu, permitAudience as hv, permittedUsage as hw, petsAllowed as hx, photos as hy, pickupLocation as hz, accessibilityControl as i, reviewAspect as i$, productID as i0, productSupported as i1, productionCompany as i2, productionDate as i3, proficiencyLevel as i4, programMembershipUsed as i5, programName as i6, programmingLanguage as i7, programmingModel as i8, propertyID as i9, regionsAllowed as iA, relatedLink as iB, relatedTo as iC, releaseDate as iD, releaseNotes as iE, releasedEvent as iF, relevantOccupation as iG, remainingAttendeeCapacity as iH, replacee as iI, replacer as iJ, replyToUrl as iK, reportNumber as iL, representativeOfPage as iM, requiredCollateral as iN, requiredGender as iO, requiredMaxAge as iP, requiredMinAge as iQ, requiredQuantity as iR, requirements as iS, requiresSubscription as iT, reservationFor as iU, reservationId as iV, reservationStatus as iW, reservedTicket as iX, responsibilities as iY, resultComment as iZ, resultReview as i_, proteinContent as ia, providerMobility as ib, providesService as ic, publicAccess as id, publication as ie, publishedOn as ig, publisher as ih, publishingPrinciples as ii, purchaseDate as ij, query as ik, quest as il, question as im, ratingCount as io, ratingValue as ip, readonlyValue as iq, realEstateAgent as ir, recipe as is, recipeCategory as it, recipeCuisine as iu, recipeInstructions as iv, recipeYield as iw, recordLabel as ix, referenceQuantity as iy, referencesOrder as iz, accessibilityFeature as j, stepValue as j$, reviewBody as j0, reviewCount as j1, reviewRating as j2, reviewedBy as j3, reviews as j4, rsvpResponse as j5, runtime as j6, salaryCurrency as j7, sameAs as j8, sampleType as j9, sharedContent as jA, siblings as jB, significantLinks as jC, skills as jD, sku as jE, slogan as jF, smokingAllowed as jG, sodiumContent as jH, softwareAddOn as jI, softwareHelp as jJ, softwareVersion as jK, sourceOrganization as jL, spatial as jM, spatialCoverage as jN, speakable as jO, specialCommitments as jP, specialOpeningHoursSpecification as jQ, specialty as jR, sport as jS, sportsActivityLocation as jT, sportsEvent as jU, sportsTeam as jV, spouse as jW, starRating as jX, startDate as jY, startTime as jZ, steeringPosition as j_, saturatedFatContent as ja, scheduledPaymentDate as jb, scheduledTime as jc, schemaVersion as jd, screenCount as je, screenshot as jf, seasonNumber as jg, seasons as jh, seatNumber as ji, seatRow as jj, seatSection as jk, seatingType as jl, securityScreening as jm, seeks as jn, sender as jo, serverStatus as jp, servesCuisine as jq, serviceAudience as jr, serviceLocation as js, serviceOperator as jt, servicePhone as ju, servicePostalAddress as jv, serviceSmsNumber as jw, serviceType as jx, serviceUrl as jy, servingSize as jz, accessibilityHazard as k, validThrough as k$, steps as k0, storageRequirements as k1, streetAddress as k2, subEvents as k3, subReservation as k4, subtitleLanguage as k5, successorOf as k6, sugarContent as k7, suggestedGender as k8, suggestedMaxAge as k9, totalPrice as kA, totalTime as kB, touristType as kC, trackingNumber as kD, trackingUrl as kE, tracks as kF, trailer as kG, trainName as kH, trainNumber as kI, transFatContent as kJ, transcript as kK, translator as kL, typeOfBed as kM, typeOfGood as kN, typicalAgeRange as kO, underName as kP, unitCode as kQ, unitText as kR, unsaturatedFatContent as kS, uploadDate as kT, upvoteCount as kU, url as kV, urlTemplate as kW, userInteractionCount as kX, validFor as kY, validFrom as kZ, validIn as k_, suggestedMinAge as ka, suitableForDiet as kb, supportingData as kc, surface as kd, target as ke, targetDescription as kf, targetName as kg, targetPlatform as kh, targetProduct as ki, targetUrl as kj, taxID as kk, telephone as kl, temporal as km, text as kn, thumbnail as ko, thumbnailUrl as kp, tickerSymbol as kq, ticketNumber as kr, ticketToken as ks, ticketedSeat as kt, timeRequired as ku, title as kv, toLocation as kw, toRecipient as kx, tool as ky, totalPaymentDue as kz, accessibilitySummary as l, director as l$, validUntil as l0, value as l1, valueAddedTaxIncluded as l2, valueMaxLength as l3, valueMinLength as l4, valueName as l5, valuePattern as l6, valueReference as l7, valueRequired as l8, vatID as l9, worksFor as lA, worstRating as lB, xpath as lC, yearlyRevenue as lD, yearsInOperation as lE, actionApplication as lF, actionOption as lG, actor as lH, album as lI, albumRelease as lJ, alumni as lK, alumniOf as lL, artworkSurface as lM, attendee as lN, audience as lO, availableOnDevice as lP, award as lQ, blogPost as lR, broker as lS, codeSampleType as lT, colleague as lU, contactPoint as lV, containsPlace as lW, containsSeason as lX, contentLocation as lY, dataset as lZ, description as l_, vehicleConfiguration as la, vehicleEngine as lb, vehicleIdentificationNumber as lc, vehicleInteriorColor as ld, vehicleInteriorType as le, vehicleModelDate as lf, vehicleSeatingCapacity as lg, vehicleTransmission as lh, vendor as li, version as lj, video as lk, videoFormat as ll, videoFrameSize as lm, videoQuality as ln, volumeNumber as lo, warrantyPromise as lp, warrantyScope as lq, webCheckinTime as lr, weight as ls, width as lt, winner as lu, wordCount as lv, workHours as lw, workLocation as lx, workPerformed as ly, workPresented as lz, accountId as m, hasMap as m$, duration as m0, employee as m1, encodesCreativeWork as m2, encodingFormat as m3, episode as m4, event as m5, exampleOfWork as m6, executableLibraryName as m7, exerciseCourse as m8, founder as m9, recordingOf as mA, releaseOf as mB, review as mC, roleName as mD, runtimePlatform as mE, season as mF, serialNumber as mG, serviceArea as mH, serviceOutput as mI, sibling as mJ, significantLink as mK, softwareRequirements as mL, sponsor as mM, subOrganization as mN, subjectOf as mO, suggestedAnswer as mP, superEvent as mQ, targetCollection as mR, temporalCoverage as mS, track as mT, warranty as mU, workExample as mV, yield__workaround as mW, about as mX, competitor as mY, containedInPlace as mZ, encoding as m_, game as ma, gameServer as mb, hasBroadcastChannel as mc, hasMenu as md, inLanguage as me, incentiveCompensation as mf, interactionStatistic as mg, isAccessibleForFree as mh, isBasedOn as mi, jobBenefits as mj, mainEntity as mk, mainEntityOfPage as ml, makesOffer as mm, offeredBy as mn, parent as mo, partOfSeries as mp, paymentDueDate as mq, performTime as mr, performer as ms, photo as mt, provider as mu, providesBroadcastService as mv, recipeIngredient as mw, recordedAs as mx, recordedAt as my, recordedIn as mz, accountablePerson as n, AutoPartsStore as n$, image as n0, material as n1, memberOf as n2, parentOrganization as n3, result as n4, seller as n5, step as n6, subEvent as n7, supply as n8, workFeatured as n9, AggregateOffer as nA, AggregateRating as nB, AgreeAction as nC, Airline as nD, Airport as nE, AlignmentObject as nF, AllocateAction as nG, AmusementPark as nH, AnimalShelter as nI, Answer as nJ, Apartment as nK, ApartmentComplex as nL, AppendAction as nM, ApplyAction as nN, Aquarium as nO, ArriveAction as nP, ArtGallery as nQ, Article as nR, AskAction as nS, AssessAction as nT, AssignAction as nU, Attorney as nV, Audience as nW, AudioObject as nX, AuthorizeAction as nY, AutoBodyShop as nZ, AutoDealer as n_, areaServed as na, includedInDataCatalog as nb, member as nc, recipient as nd, hasPart as ne, isPartOf as nf, position as ng, instrument as nh, object as ni, location as nj, participant as nk, identifier as nl, AMRadioChannel as nm, APIReference as nn, AboutPage as no, AcceptAction as np, Accommodation as nq, AccountingService as nr, AchieveAction as ns, Action as nt, ActionAccessSpecification as nu, ActionStatusType as nv, ActivateAction as nw, AddAction as nx, AdministrativeArea as ny, AdultEntertainment as nz, acquiredFrom as o, ChooseAction as o$, AutoRental as o0, AutoRepair as o1, AutoWash as o2, AutomatedTeller as o3, AutomotiveBusiness as o4, Bakery as o5, BankAccount as o6, BankOrCreditUnion as o7, BarOrPub as o8, Barcode as o9, BroadcastService as oA, BuddhistTemple as oB, BusReservation as oC, BusStation as oD, BusStop as oE, BusTrip as oF, BusinessAudience as oG, BusinessEntityType as oH, BusinessEvent as oI, BusinessFunction as oJ, BuyAction as oK, CableOrSatelliteService as oL, CafeOrCoffeeShop as oM, Campground as oN, CampingPitch as oO, Canal as oP, CancelAction as oQ, Car as oR, Casino as oS, CatholicChurch as oT, Cemetery as oU, CheckAction as oV, CheckInAction as oW, CheckOutAction as oX, CheckoutPage as oY, ChildCare as oZ, ChildrensEvent as o_, Beach as oa, BeautySalon as ob, BedAndBreakfast as oc, BedDetails as od, BedType as oe, BefriendAction as of, BikeStore as og, Blog as oh, BlogPosting as oi, BoardingPolicyType as oj, BodyOfWater as ok, Book as ol, BookFormatType as om, BookSeries as on, BookStore as oo, BookmarkAction as op, Boolean as oq, BorrowAction as or, BowlingAlley as os, Brand as ot, BreadcrumbList as ou, Brewery as ov, Bridge as ow, BroadcastChannel as ox, BroadcastEvent as oy, BroadcastFrequencySpecification as oz, actionAccessibilityRequirement as p, DepositAccount as p$, Church as p0, City as p1, CityHall as p2, CivicStructure as p3, ClaimReview as p4, Clip as p5, ClothingStore as p6, Code as p7, CollectionPage as p8, CollegeOrUniversity as p9, CreativeWorkSeries as pA, CreditCard as pB, Crematorium as pC, CurrencyConversionService as pD, DanceEvent as pE, DanceGroup as pF, DataCatalog as pG, DataDownload as pH, DataFeed as pI, DataFeedItem as pJ, DataType as pK, Dataset as pL, Date as pM, DateTime as pN, DatedMoneySpecification as pO, DayOfWeek as pP, DaySpa as pQ, DeactivateAction as pR, DefenceEstablishment as pS, DeleteAction as pT, DeliveryChargeSpecification as pU, DeliveryEvent as pV, DeliveryMethod as pW, Demand as pX, Dentist as pY, DepartAction as pZ, DepartmentStore as p_, ComedyClub as pa, ComedyEvent as pb, Comment as pc, CommentAction as pd, CommunicateAction as pe, CompoundPriceSpecification as pf, ComputerLanguage as pg, ComputerStore as ph, ConfirmAction as pi, ConsumeAction as pj, ContactPage as pk, ContactPoint as pl, ContactPointOption as pm, Continent as pn, ControlAction as po, ConvenienceStore as pp, Conversation as pq, CookAction as pr, Corporation as ps, Country as pt, Course as pu, CourseInstance as pv, Courthouse as pw, CreateAction as px, CreativeWork as py, CreativeWorkSeason as pz, actionPlatform as q, Game as q$, DigitalDocument as q0, DigitalDocumentPermission as q1, DigitalDocumentPermissionType as q2, DisagreeAction as q3, DiscoverAction as q4, DiscussionForumPosting as q5, DislikeAction as q6, Distance as q7, Distillery as q8, DonateAction as q9, Episode as qA, Event as qB, EventReservation as qC, EventStatusType as qD, EventVenue as qE, ExerciseAction as qF, ExerciseGym as qG, ExhibitionEvent as qH, FAQPage as qI, FMRadioChannel as qJ, FastFoodRestaurant as qK, Festival as qL, FilmAction as qM, FinancialProduct as qN, FinancialService as qO, FindAction as qP, FireStation as qQ, Flight as qR, FlightReservation as qS, Float as qT, Florist as qU, FollowAction as qV, FoodEstablishment as qW, FoodEstablishmentReservation as qX, FoodEvent as qY, FoodService as qZ, FurnitureStore as q_, DownloadAction as qa, DrawAction as qb, DrinkAction as qc, DriveWheelConfigurationValue as qd, DryCleaningOrLaundry as qe, Duration as qf, EatAction as qg, EducationEvent as qh, EducationalAudience as qi, EducationalOrganization as qj, Electrician as qk, ElectronicsStore as ql, ElementarySchool as qm, EmailMessage as qn, Embassy as qo, EmergencyService as qp, EmployeeRole as qq, EmployerAggregateRating as qr, EmploymentAgency as qs, EndorseAction as qt, EndorsementRating as qu, Energy as qv, EngineSpecification as qw, EntertainmentBusiness as qx, EntryPoint as qy, Enumeration as qz, actionStatus as r, ItemPage as r$, GamePlayMode as r0, GameServer as r1, GameServerStatus as r2, GardenStore as r3, GasStation as r4, GatedResidenceCommunity as r5, GenderType as r6, GeneralContractor as r7, GeoCircle as r8, GeoCoordinates as r9, HowToDirection as rA, HowToItem as rB, HowToSection as rC, HowToStep as rD, HowToSupply as rE, HowToTip as rF, HowToTool as rG, IceCreamShop as rH, IgnoreAction as rI, ImageGallery as rJ, ImageObject as rK, IndividualProduct as rL, InformAction as rM, InsertAction as rN, InstallAction as rO, InsuranceAgency as rP, Intangible as rQ, Integer as rR, InteractAction as rS, InteractionCounter as rT, InternetCafe as rU, InvestmentOrDeposit as rV, InviteAction as rW, Invoice as rX, ItemAvailability as rY, ItemList as rZ, ItemListOrderType as r_, GeoShape as ra, GiveAction as rb, GolfCourse as rc, GovernmentBuilding as rd, GovernmentOffice as re, GovernmentOrganization as rf, GovernmentPermit as rg, GovernmentService as rh, GroceryStore as ri, HVACBusiness as rj, HairSalon as rk, HardwareStore as rl, HealthAndBeautyBusiness as rm, HealthClub as rn, HighSchool as ro, HinduTemple as rp, HobbyShop as rq, HomeAndConstructionBusiness as rr, HomeGoodsStore as rs, Hospital as rt, Hostel as ru, Hotel as rv, HotelRoom as rw, House as rx, HousePainter as ry, HowTo as rz, actors as s, MusicPlaylist as s$, JewelryStore as s0, JobPosting as s1, JoinAction as s2, LakeBodyOfWater as s3, Landform as s4, LandmarksOrHistoricalBuildings as s5, Language as s6, LeaveAction as s7, LegalService as s8, LegislativeBuilding as s9, MenuItem as sA, MenuSection as sB, Message as sC, MiddleSchool as sD, MobileApplication as sE, MobilePhoneStore as sF, MonetaryAmount as sG, MonetaryAmountDistribution as sH, Mosque as sI, Motel as sJ, MotorcycleDealer as sK, MotorcycleRepair as sL, Mountain as sM, MoveAction as sN, Movie as sO, MovieClip as sP, MovieRentalStore as sQ, MovieSeries as sR, MovieTheater as sS, MovingCompany as sT, Museum as sU, MusicAlbum as sV, MusicAlbumProductionType as sW, MusicAlbumReleaseType as sX, MusicComposition as sY, MusicEvent as sZ, MusicGroup as s_, LendAction as sa, Library as sb, LikeAction as sc, LiquorStore as sd, ListItem as se, ListenAction as sf, LiteraryEvent as sg, LiveBlogPosting as sh, LoanOrCredit as si, LocalBusiness as sj, LocationFeatureSpecification as sk, LockerDelivery as sl, Locksmith as sm, LodgingBusiness as sn, LodgingReservation as so, LoseAction as sp, Map as sq, MapCategoryType as sr, MarryAction as ss, Mass as st, MediaObject as su, MediaSubscription as sv, MedicalOrganization as sw, MeetingRoom as sx, MensClothingStore as sy, Menu as sz, addOn as t, Plumber as t$, MusicRecording as t0, MusicRelease as t1, MusicReleaseFormatType as t2, MusicStore as t3, MusicVenue as t4, MusicVideoObject as t5, NGO as t6, NailSalon as t7, NewsArticle as t8, NightClub as t9, Park as tA, ParkingFacility as tB, PawnShop as tC, PayAction as tD, PaymentCard as tE, PaymentChargeSpecification as tF, PaymentMethod as tG, PaymentService as tH, PaymentStatusType as tI, PeopleAudience as tJ, PerformAction as tK, PerformanceRole as tL, PerformingArtsTheater as tM, PerformingGroup as tN, Periodical as tO, Permit as tP, Person as tQ, PetStore as tR, Pharmacy as tS, Photograph as tT, PhotographAction as tU, Physician as tV, Place as tW, PlaceOfWorship as tX, PlanAction as tY, PlayAction as tZ, Playground as t_, Notary as ta, NoteDigitalDocument as tb, Number as tc, NutritionInformation as td, Occupation as te, OceanBodyOfWater as tf, Offer as tg, OfferCatalog as th, OfferItemCondition as ti, OfficeEquipmentStore as tj, OnDemandEvent as tk, OpeningHoursSpecification as tl, Order as tm, OrderAction as tn, OrderItem as to, OrderStatus as tp, Organization as tq, OrganizationRole as tr, OrganizeAction as ts, OutletStore as tt, OwnershipInfo as tu, PaintAction as tv, Painting as tw, ParcelDelivery as tx, ParcelService as ty, ParentAudience as tz, additionalName as u, RoofingContractor as u$, PoliceStation as u0, Pond as u1, PostOffice as u2, PostalAddress as u3, PreOrderAction as u4, PrependAction as u5, Preschool as u6, PresentationDigitalDocument as u7, PriceSpecification as u8, Product as u9, ReadAction as uA, RealEstateAgent as uB, ReceiveAction as uC, Recipe as uD, RecyclingCenter as uE, RegisterAction as uF, RejectAction as uG, RentAction as uH, RentalCarReservation as uI, ReplaceAction as uJ, ReplyAction as uK, Report as uL, Reservation as uM, ReservationPackage as uN, ReservationStatusType as uO, ReserveAction as uP, Reservoir as uQ, Residence as uR, Resort as uS, Restaurant as uT, RestrictedDiet as uU, ResumeAction as uV, ReturnAction as uW, Review as uX, ReviewAction as uY, RiverBodyOfWater as uZ, Role as u_, ProductModel as ua, ProfessionalService as ub, ProfilePage as uc, ProgramMembership as ud, PropertyValue as ue, PropertyValueSpecification as uf, PublicSwimmingPool as ug, PublicationEvent as uh, PublicationIssue as ui, PublicationVolume as uj, QAPage as uk, QualitativeValue as ul, QuantitativeValue as um, QuantitativeValueDistribution as un, Quantity as uo, Question as up, QuoteAction as uq, RVPark as ur, RadioChannel as us, RadioClip as ut, RadioEpisode as uu, RadioSeason as uv, RadioSeries as uw, RadioStation as ux, Rating as uy, ReactAction as uz, additionalNumberOfGuests as v, TelevisionStation as v$, Room as v0, RsvpAction as v1, RsvpResponseType as v2, SaleEvent as v3, ScheduleAction as v4, ScholarlyArticle as v5, School as v6, ScreeningEvent as v7, Sculpture as v8, SeaBodyOfWater as v9, SportsEvent as vA, SportsOrganization as vB, SportsTeam as vC, SpreadsheetDigitalDocument as vD, StadiumOrArena as vE, State as vF, SteeringPositionValue as vG, Store as vH, StructuredValue as vI, SubscribeAction as vJ, SubwayStation as vK, Suite as vL, SuspendAction as vM, Synagogue as vN, TVClip as vO, TVEpisode as vP, TVSeason as vQ, TVSeries as vR, Table as vS, TakeAction as vT, TattooParlor as vU, Taxi as vV, TaxiReservation as vW, TaxiService as vX, TaxiStand as vY, TechArticle as vZ, TelevisionChannel as v_, SearchAction as va, SearchResultsPage as vb, Season as vc, Seat as vd, SelfStorage as ve, SellAction as vf, SendAction as vg, Series as vh, Service as vi, ServiceChannel as vj, ShareAction as vk, ShoeStore as vl, ShoppingCenter as vm, SingleFamilyResidence as vn, SiteNavigationElement as vo, SkiResort as vp, SocialEvent as vq, SocialMediaPosting as vr, SoftwareApplication as vs, SoftwareSourceCode as vt, SomeProducts as vu, SpeakableSpecification as vv, Specialty as vw, SportingGoodsStore as vx, SportsActivityLocation as vy, SportsClub as vz, additionalProperty as w, WebSite as w$, TennisComplex as w0, Text as w1, TextDigitalDocument as w2, TheaterEvent as w3, TheaterGroup as w4, Thing as w5, Ticket as w6, TieAction as w7, Time as w8, TipAction as w9, UserPlays as wA, UserPlusOnes as wB, UserTweets as wC, Vehicle as wD, VideoGallery as wE, VideoGame as wF, VideoGameClip as wG, VideoGameSeries as wH, VideoObject as wI, ViewAction as wJ, VisualArtsEvent as wK, VisualArtwork as wL, Volcano as wM, VoteAction as wN, WPAdBlock as wO, WPFooter as wP, WPHeader as wQ, WPSideBar as wR, WantAction as wS, WarrantyPromise as wT, WarrantyScope as wU, WatchAction as wV, Waterfall as wW, WearAction as wX, WebApplication as wY, WebPage as wZ, WebPageElement as w_, TireShop as wa, TouristAttraction as wb, TouristInformationCenter as wc, ToyStore as wd, TrackAction as we, TradeAction as wf, TrainReservation as wg, TrainStation as wh, TrainTrip as wi, TransferAction as wj, TravelAction as wk, TravelAgency as wl, Trip as wm, TypeAndQuantityNode as wn, URL as wo, UnRegisterAction as wp, UnitPriceSpecification as wq, UpdateAction as wr, UseAction as ws, UserBlocks as wt, UserCheckins as wu, UserComments as wv, UserDownloads as ww, UserInteraction as wx, UserLikes as wy, UserPageVisits as wz, additionalType as x, WholesaleStore as x0, WinAction as x1, Winery as x2, WorkersUnion as x3, WriteAction as x4, Zoo as x5, schemaImport as x6, address as y, addressCountry as z };
