"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bus_rdf_parse_1 = require("@comunica/bus-rdf-parse");
const jsonld_streaming_parser_1 = require("jsonld-streaming-parser");
const DocumentLoaderMediated_1 = require("./DocumentLoaderMediated");
/**
 * A JSON-LD RDF Parse actor that listens on the 'rdf-parse' bus.
 *
 * It is able to parse JSON-LD-based RDF serializations and announce the presence of them by media type.
 */
class ActorRdfParseJsonLd extends bus_rdf_parse_1.ActorRdfParseFixedMediaTypes {
    constructor(args) {
        super(args);
    }
    async testHandle(action, mediaType, context) {
        if (!(mediaType in this.mediaTypes) && !mediaType.endsWith('+json')) {
            throw new Error('Unrecognized media type: ' + mediaType);
        }
        return await this.testHandleChecked(action);
    }
    async runHandle(action, mediaType, actionContext) {
        const parser = jsonld_streaming_parser_1.JsonLdParser.fromHttpResponse(action.baseIRI, mediaType, action.headers, {
            documentLoader: new DocumentLoaderMediated_1.DocumentLoaderMediated(this.mediatorHttp, actionContext),
        });
        const quads = parser.import(action.input);
        return { quads };
    }
}
exports.ActorRdfParseJsonLd = ActorRdfParseJsonLd;
//# sourceMappingURL=ActorRdfParseJsonLd.js.map