import { IActionHttp, IActorHttpOutput } from "@comunica/bus-http";
import { ActorRdfParseFixedMediaTypes, IActionRdfParse, IActorRdfParseFixedMediaTypesArgs, IActorRdfParseOutput } from "@comunica/bus-rdf-parse";
import { ActionContext, Actor, IActorTest, Mediator } from "@comunica/core";
/**
 * A JSON-LD RDF Parse actor that listens on the 'rdf-parse' bus.
 *
 * It is able to parse JSON-LD-based RDF serializations and announce the presence of them by media type.
 */
export declare class ActorRdfParseJsonLd extends ActorRdfParseFixedMediaTypes {
    readonly mediatorHttp: Mediator<Actor<IActionHttp, IActorTest, IActorHttpOutput>, IActionHttp, IActorTest, IActorHttpOutput>;
    constructor(args: IActorRdfParseJsonLdArgs);
    testHandle(action: IActionRdfParse, mediaType: string, context: ActionContext): Promise<IActorTest>;
    runHandle(action: IActionRdfParse, mediaType: string, actionContext: ActionContext): Promise<IActorRdfParseOutput>;
}
export interface IActorRdfParseJsonLdArgs extends IActorRdfParseFixedMediaTypesArgs {
    mediatorHttp: Mediator<Actor<IActionHttp, IActorTest, IActorHttpOutput>, IActionHttp, IActorTest, IActorHttpOutput>;
}
