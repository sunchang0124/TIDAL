"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _MutationFunctionHandler = _interopRequireDefault(require("./MutationFunctionHandler"));

var _valueUtils = require("./valueUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns a function that deletes all existing values
 * for the path, and then adds the given values to the path.
 *
 * Requires:
 * - a delete function on the path proxy.
 * - an add function on the path proxy.
 */
class SetFunctionHandler extends _MutationFunctionHandler.default {
  handle(pathData, path) {
    return (...args) => {
      // First, delete all existing values for the property/properties
      const deletePath = !(0, _valueUtils.hasPlainObjectArgs)(args) ? // When a single property is given, delete all of its values
      path.delete() : // When a map of properties is given, delete all of their values
      Object.keys(args[0]).reduce((previousPath, property) => previousPath.delete({
        [property]: []
      }), path); // Next, insert the new values

      return deletePath.add(...args);
    };
  }

}

exports.default = SetFunctionHandler;